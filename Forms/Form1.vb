Imports System.Net
Imports System.IO
Imports System.Data
Imports System.Text.RegularExpressions
Imports System.Text
Imports System.Threading
Imports Media_Companion.ScraperFunctions
Imports System.Management
Imports Media_Companion._preferences
Imports System.Xml
'Imports imdb.Classimdbscraper ' had to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
Imports System.Reflection
Imports System.ComponentModel
Imports System
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Windows.Forms
Imports stdole
Imports IMPA
Imports System.Xml.Linq



Public Class Form1

    Dim newtvfolders As New List(Of String)
    Dim maximised As Boolean = False
    Dim imdbcounter As Integer = 0
    Dim tootip5 As New ToolTip
    Public imagefunctions As New ManipulateImages
    Dim loadsave As New InputOutput
    Dim picturelist As New List(Of PictureBox)
    Dim screenshot_tab As TabPage
    Dim totalepisodecount As Integer = 0
    Dim totaltvshowcount As Integer = 0
    Dim defaultactor As String
    Dim defaultfanart As String
    Dim defaultposter As String
    Dim defaultofflineart As String
    Public startup As Boolean = True
    Public tvregex As New List(Of String)
    Dim actordb As New List(Of actordatabase)
    Public dlist As New List(Of String)
    Dim scraperlog As String = ""
    Dim tvscraperlog As String = ""
    Public scraperfunction2 As New ScraperFunctions
    Public globalthreadstop As Boolean = False
    Public globalthreadcounter As Integer = 0
    Dim filteroverride As Boolean = False
    Dim mouseover As Boolean = False
    Dim newmovielist As New List(Of newmovie)
    Dim newepisodelist As New List(Of episodeinfo)
    Dim tvshowlist As New List(Of tvshownfo)
    Dim WithEvents bigpicbox As PictureBox
    Dim bigpanel As Panel
    Public filefunction As New fileandfolderfunctions
    Public nfofunction As New workingwithnfofiles
    Public Shared userprefs As New Structures

    Public Shared moviefolders As New List(Of String)
    Public Shared tvfolders As New List(Of String)
    Public Shared tvrootfolders As New List(Of String)

    Public Shared profiles As New List(Of listofprofiles)
    Public Shared workingprofile As New listofprofiles

    Public fullmovielist As New List(Of combolist)
    Public filteredlist As New List(Of combolist)

    Public workingmoviedetails As fullmoviedetails
    Public workingtvshow As New tvshownfo
    Public workingepisode As New List(Of episodeinfo)
    Public workingepisodeindex As Integer
    Public workingmovie As New combolist


    Dim realmoviepaths As New List(Of String)
    Dim realtvpaths As New List(Of String)

    Public batchlist As New batchwizard
    Public tvbatchlist As New tvshowbatchwizard
    Dim droppeditems As New List(Of String)
    Dim newtvshows As New List(Of String)
    Public basictvlist As New List(Of basictvshownfo)


    Dim profile_structure As New profiles


    Public Shared applicationdatapath As String = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) & "\Media Companion\"


    Private WithEvents _Downloader As WebFileDownloader

    Public sending As String



    Public applicationpath As String = Application.StartupPath 'get application root path


    


    Dim frmSplash As New frmSplashscreen

  


    'Public mode As String = "movie"
    Public movierebuildneeded As Boolean = True
    Public tvrebuildneeded As Boolean = True
   

    Public messbox As New message_box("blank", "", "")
    Dim templatelist As New List(Of htmltemplate)
    Dim overitem As String
    Dim oldindexUnderTheMouse As Integer
    Dim scrapeandquit As Boolean = False
    Private m_CurrentTabIndex As Integer = 0
    Dim mousedelta As Integer = 0
    Dim WithEvents fanartboxes As PictureBox
    Dim WithEvents fanartcheckboxes As RadioButton
    Dim reslabels As Label
    Dim fanarturls(1000, 1) As String
    Dim fanartarray As New List(Of ListOfPosters)
    Dim WithEvents posterpicboxes As PictureBox
    Dim WithEvents postercheckboxes As RadioButton
    Dim WithEvents posterlabels As Label
    Dim WithEvents reslabel As Label
    Dim cropstring As String
    Dim thumbeditsmade As Boolean = False
    Dim posterarray As New List(Of ListOfPosters)
    Dim pagecount As Integer = 0
    Dim currentpage As Integer = 0
    Dim posterthumbeditsmade As Boolean = False
    Dim postercropstring As String
    Dim tab1 As Integer
    Private tv_CurrentTabIndex As Integer = 0
    Dim languagelist As New List(Of tvshowlanguages)
    Dim listofshows As New List(Of possibleshowlist)
    Dim newepisodetoadd As New BasicEpisodeNFO
    Dim WithEvents tvfanartboxes As PictureBox
    Dim WithEvents tvfanartcheckboxes As RadioButton
    Dim WithEvents resolutionlabels As Label
    Dim listoftvfanarts As New List(Of fanartlist)

    Dim LockedList As Boolean = False
    Dim TempTVDBiD As String = ""
    Dim NovaThread As Thread
    Dim NewMovieFoundTitle As String = ""
    Dim NewMovieFoundFilename As String = ""


    Private Function GetResourceStream(ByVal resfile As String) As Stream
        Dim asm As Assembly = Assembly.GetExecutingAssembly
        Return asm.GetManifestResourceStream(resfile)
    End Function

    Private Sub batchupdate()
        messbox = New message_box("Please wait,", "", "rebuilding Movie nfo files")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Dim tempint As Integer = fullmovielist.Count - 1
        For f = 0 To tempint
            Try
                Dim updatedmovie As New fullmoviedetails
                updatedmovie = nfofunction.loadfullmovienfo(fullmovielist(f).fullpathandfilename)
                nfofunction.savemovienfo(fullmovielist(f).fullpathandfilename, updatedmovie, True)
            Catch
            End Try
        Next
        messbox.Close()
    End Sub

    Private Sub Form1_Activated(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Activated
        If messbox.Visible = True Then
            messbox.Activate()
            messbox.BringToFront()
            messbox.Focus()
        End If
    End Sub

    Private Sub Form1_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        Me.Dispose()
        Me.Finalize()
        End
    End Sub

    Private Sub Form1_FormClosing(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing

        Dim load As New _preferences
        load.loadconfig()
        userprefs.splt1 = SplitContainer1.SplitterDistance
        userprefs.splt2 = SplitContainer2.SplitterDistance
        userprefs.splt3 = SplitContainer3.SplitterDistance
        userprefs.splt4 = SplitContainer4.SplitterDistance
        userprefs.splt5 = SplitContainer5.SplitterDistance


        If Me.WindowState = FormWindowState.Minimized Then
            Me.WindowState = FormWindowState.Normal
            userprefs.formwidth = Me.Width
            userprefs.formheight = Me.Height
            userprefs.locx = Me.Location.X
            userprefs.locy = Me.Location.Y
            userprefs.maximised = False
        End If
        If Me.WindowState = FormWindowState.Normal Then
            userprefs.formwidth = Me.Width
            userprefs.formheight = Me.Height
            userprefs.locx = Me.Location.X
            userprefs.locy = Me.Location.Y
            userprefs.maximised = False
        End If
        If Me.WindowState = FormWindowState.Maximized Then
            Me.WindowState = FormWindowState.Normal
            userprefs.maximised = True
        End If
        If DataGridView1.Columns.Count > 0 Then
            userprefs.tableview.Clear()
            For Each column In DataGridView1.Columns
                Dim tempstring As String = column.name & "|" & column.width & "|" & column.displayindex & "|" & column.visible
                userprefs.tableview.Add(tempstring)
            Next
        End If
        Call savedata()
        Call savetvdata()
        userprefs.startuptab = TabControl1.SelectedIndex
        Dim save As New _preferences
        Call save.saveconfig()
        Dim errpath As String = IO.Path.Combine(applicationpath, "tvrebuild.log")
    End Sub

    Private Sub Form1_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.GotFocus
        If messbox.Visible = True Then
            messbox.Activate()
        End If
    End Sub

    Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Dim asm As Assembly = Assembly.GetExecutingAssembly
        Dim InternalResourceNames() As String = asm.GetManifestResourceNames

        For Each Temp In InternalResourceNames
            Dim Temp1 As ManifestResourceInfo = asm.GetManifestResourceInfo(Temp)
        Next
        ComboBox11.SelectedIndex = 0
        RadioButton45.Checked = True
        'Try
        '    Dim scraperfunction As New imdb.Classimdbscraper
        '    Dim temp As String = scraperfunction.getversion
        '    If Convert.ToInt32(temp) < 5 Then
        '        MsgBox("             Out of date IMDB scraper file detected" & vbCrLf & "Please replace your 'imdb.dll' file with the one from the downloaded archive")
        '        End
        '    End If
        'Catch

        'End Try
        Panel4.Location = New Point(149, 23)
        TreeView1.Sort()

        For Each arg As String In Environment.GetCommandLineArgs()
            Console.WriteLine(arg)
            If arg = "sq" Then
                Me.WindowState = FormWindowState.Minimized
                scrapeandquit = True
            End If
        Next
        Dim loadinginfo As String
        If scrapeandquit = False Then
            frmSplash.Show()



            loadinginfo = "Status :- Initialising Program"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
        End If
        Me.Visible = False

        ComboBox10.SelectedIndex = 0

        Me.Refresh()
        Application.DoEvents()
        Dim tempstring As String
        tempstring = applicationpath & "\enablemultiple.set"
        If Not IO.File.Exists(tempstring) Then
            Dim tej As Integer = 0
            Dim processes() As Process
            Dim instance As Process
            Dim process As New Process()
            processes = process.GetProcesses
            For Each instance In processes
                If instance.ProcessName.IndexOf("Media Companion") <> -1 Then
                    tej = tej + 1
                    If tej >= 2 Then
                        MsgBox("XBMC Media Companion is already running")
                        End
                    End If
                End If
            Next
        End If
        CheckForIllegalCrossThreadCalls = False
        'messbox.Show()
        'messbox.Visible = False



        Form1.userprefs.maximised = False
        Call setuppreferences()


        tempstring = applicationpath & "\Settings\"
        Dim hg As New IO.DirectoryInfo(tempstring)
        If hg.Exists Then
            ' applicationdatapath = tempstring
            userprefs.configpath = tempstring & "config.xml"
            If Not IO.File.Exists(userprefs.configpath) Then
                Dim save As New _preferences
                Call save.saveconfig()
            End If
        Else
            IO.Directory.CreateDirectory(tempstring)
            workingprofile.config = tempstring = applicationpath & "\Settings\config.xml"
            Dim save As New _preferences
            Call save.saveconfig()
        End If
        If IO.File.Exists(applicationpath & "\settings\profile.xml") = True Then
            Call loadprofiles()
            For Each prof In profile_structure.profilelist
                If prof.profilename = profile_structure.startupprofile Then
                    workingprofile.actorcache = prof.actorcache
                    workingprofile.config = prof.config
                    workingprofile.moviecache = prof.moviecache
                    workingprofile.profilename = prof.profilename
                    workingprofile.regexlist = prof.regexlist
                    workingprofile.filters = prof.filters
                    workingprofile.tvcache = prof.tvcache
                    workingprofile.profilename = prof.profilename
                    For Each item In ProfilesToolStripMenuItem.DropDownItems
                        If item.text = workingprofile.profilename Then
                            With item
                                item.checked = True
                            End With
                        Else
                            item.checked = False
                        End If
                    Next
                End If
            Next
        Else
            profile_structure.workingprofilename = "Default"
            profile_structure.defaultprofile = "Default"
            profile_structure.startupprofile = "Default"
            Dim currentprofile As New listofprofiles
            tempstring = applicationpath & "\Settings\"
            currentprofile.actorcache = tempstring & "actorcache.xml"
            currentprofile.config = tempstring & "config.xml"
            currentprofile.regexlist = tempstring & "regex.xml"
            currentprofile.tvcache = tempstring & "tvcache.xml"
            currentprofile.filters = tempstring & "filters.txt"
            currentprofile.moviecache = tempstring & "moviecache.xml"
            currentprofile.profilename = "Default"
            profile_structure.profilelist.Add(currentprofile)
            profile_structure.workingprofilename = "Default"
            Call saveprofiles()
            Call loadprofiles()
            For Each prof In profile_structure.profilelist
                If prof.profilename = profile_structure.startupprofile Then
                    workingprofile.actorcache = prof.actorcache
                    workingprofile.config = prof.config
                    workingprofile.moviecache = prof.moviecache
                    workingprofile.profilename = prof.profilename
                    workingprofile.regexlist = prof.regexlist
                    workingprofile.filters = prof.filters
                    workingprofile.tvcache = prof.tvcache
                    workingprofile.profilename = prof.profilename
                End If
            Next
        End If

        'Application data folder

        'Dim f As New IO.DirectoryInfo(applicationdatapath)
        'If Not f.Exists Then
        '    Try
        '        Directory.CreateDirectory(applicationdatapath)
        '    Catch ex As Exception
        '        MsgBox(ex.Message.ToString)
        '        End
        '    End Try
        'End If

        Dim g As New IO.DirectoryInfo(IO.Path.Combine(applicationpath, "settings\postercache\"))
        If Not g.Exists Then
            Try
                Directory.CreateDirectory(IO.Path.Combine(applicationpath, "settings\postercache\"))
            Catch ex As Exception
                MsgBox(ex.Message.ToString)
                End
            End Try
        End If


        defaultofflineart = IO.Path.Combine(applicationpath, "Resources\default_offline.jpg")
        defaultfanart = IO.Path.Combine(applicationpath, "Resources\default_fanart.jpg")
        defaultposter = IO.Path.Combine(applicationpath, "Resources\default_poster.jpg")
        defaultactor = IO.Path.Combine(applicationpath, "Resources\default_actor.jpg")
        CheckForIllegalCrossThreadCalls = False




        Try
            If IO.File.Exists(IO.Path.Combine(applicationpath, "\error.log")) Then IO.File.Delete(IO.Path.Combine(applicationpath, "\error.log"))
        Catch
        End Try

        tempstring = applicationdatapath & "error.log"
        If IO.File.Exists(tempstring) = True Then
            IO.File.Delete(tempstring)
        End If


        'ToolStrip1.Enabled = False

        Call loadprefs()

        'If applicationpath.IndexOf("/") <> -1 Then tempstring = applicationpath & "/" & "config.xml"
        'If applicationpath.IndexOf("\") <> -1 Then tempstring = applicationpath & "\" & "config.xml"



        Call loadregex()

        Select Case userprefs.moviedefaultlist
            Case 0
                RadioButton1.Checked = True
            Case 1
                RadioButton2.Checked = True
            Case 2
                RadioButton6.Checked = True
        End Select

        Select Case userprefs.moviesortorder
            Case 0
                RadioButton3.Checked = True
            Case 1
                RadioButton4.Checked = True
            Case 2
                RadioButton5.Checked = True
            Case 3
                RadioButton21.Checked = True
            Case 4
                RadioButton7.Checked = True
            Case 5
                RadioButton19.Checked = True
            Case 6
                RadioButton20.Checked = True
        End Select
        '----------------------------------------------------------

        mScraperManager = New ScraperManager(IO.Path.Combine(My.Application.Info.DirectoryPath, "Assets\scrapers"))
        '----------------------------------------------------------
        If Not IO.File.Exists(workingprofile.moviecache) Or userprefs.startupcache = False Then
            loadinginfo = "Status :- Building Movie Database"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Call rebuildmovies(moviefolders)

        Else
            loadinginfo = "Status :- Loading Movie Database"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Call loadmoviecache()

        End If

        If IO.File.Exists(workingprofile.filters) Then
            loadinginfo = "Status :- Loading Genrelist"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Call loadgenrelist()
        End If

        If Not IO.File.Exists(workingprofile.tvcache) Or userprefs.startupcache = False Then
            loadinginfo = "Status :- Building TV Database"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Call rebuildtvshows()
        Else
            loadinginfo = "Status :- Loading TV Database"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Call loadtvcache()
        End If
        If Not IO.File.Exists(workingprofile.actorcache) Or userprefs.startupcache = False Then
            loadinginfo = "Status :- Building Actor Database"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Call rebuildactordb()
        Else
            loadinginfo = "Status :- Loading Actor Database"
            frmSplash.Label3.Text = loadinginfo
            frmSplash.Label3.Refresh()
            Dim NovaThread3 = New Thread(New ThreadStart(AddressOf loadactorcache))
            NovaThread3.SetApartmentState(ApartmentState.STA)
            NovaThread3.Start()
            'Call loadactorcache()
        End If

        Call displaypreferences()
        If scrapeandquit = False Then
            Me.Visible = True


            Dim intX As Integer = Screen.PrimaryScreen.Bounds.Width
            Dim intY As Integer = Screen.PrimaryScreen.Bounds.Height
            SplitContainer1.IsSplitterFixed = True
            SplitContainer2.IsSplitterFixed = True
            SplitContainer3.IsSplitterFixed = True
            SplitContainer4.IsSplitterFixed = True
            SplitContainer5.IsSplitterFixed = True
            If userprefs.maximised = False Then
                If userprefs.locx < 0 Then userprefs.locx = 0
                If userprefs.locy < 0 Then userprefs.locy = 0
                If userprefs.formheight > intY Then userprefs.formheight = intY
                If userprefs.formwidth > intX Then userprefs.formwidth = intX
                If userprefs.locx >= intX Then userprefs.locx = intX - userprefs.formwidth
                If userprefs.locy >= intY Then userprefs.locy = intY - userprefs.formheight
                If userprefs.formheight <> 0 And userprefs.formwidth <> 0 Then
                    Me.Width = userprefs.formwidth
                    Me.Height = userprefs.formheight
                End If
            Else
                Me.WindowState = FormWindowState.Maximized
            End If


            'If Form1.userprefs.maximised = True Then
            '    Me.WindowState = FormWindowState.Maximized
            'Else
            '    If userprefs.locx <> 0 Then
            '        Me.Location = New Point(userprefs.locx, userprefs.locy)
            '    End If
            '    If userprefs.locy <> 0 Then
            '        Me.Location = New Point(userprefs.locx, userprefs.locy)
            '    End If
            '    If userprefs.formheight <> 0 And userprefs.formwidth <> 0 Then
            '        Me.Width = userprefs.formwidth
            '        Me.Height = userprefs.formheight
            '    End If
            'End If

            Me.Refresh()
            Application.DoEvents()

            Me.Refresh()
            Application.DoEvents()

            Application.DoEvents()
            screenshot_tab = TabControl3.TabPages(1)
            TabControl3.TabPages.RemoveAt(1)

            If userprefs.splt5 = 0 Then
                Dim tempint As Integer = SplitContainer1.Height
                tempint = tempint / 4
                tempint = tempint * 3
                If tempint > 275 Then
                    userprefs.splt5 = tempint
                Else
                    userprefs.splt5 = 275
                End If
            End If
            If userprefs.startuptab = 0 Then
                SplitContainer1.SplitterDistance = userprefs.splt1
                SplitContainer2.SplitterDistance = userprefs.splt2
                SplitContainer5.SplitterDistance = userprefs.splt5
                TabControl1.SelectedIndex = 1
                SplitContainer3.SplitterDistance = userprefs.splt3
                SplitContainer4.SplitterDistance = userprefs.splt4
                TabControl1.SelectedIndex = 0
            Else
                SplitContainer1.SplitterDistance = userprefs.splt1
                SplitContainer2.SplitterDistance = userprefs.splt2
                SplitContainer5.SplitterDistance = userprefs.splt5
                TabControl1.SelectedIndex = 1
                SplitContainer3.SplitterDistance = userprefs.splt3
                SplitContainer4.SplitterDistance = userprefs.splt4
            End If
            SplitContainer1.IsSplitterFixed = False
            SplitContainer2.IsSplitterFixed = False
            SplitContainer3.IsSplitterFixed = False
            SplitContainer4.IsSplitterFixed = False
            SplitContainer5.IsSplitterFixed = False
        End If
        'Dim tempboolean As Boolean = UrlIsValid("http://thetvdb.com/")
        If scrapeandquit = True Then
            Call autorun()
        Else
            Try
                If ComboBox3.Items.Count <> userprefs.moviesets.Count Then
                    ComboBox3.Items.Clear()
                    For Each mset In userprefs.moviesets
                        ComboBox3.Items.Add(mset)
                    Next
                End If
                If workingmoviedetails.fullmoviebody.movieset <> "None" Then
                    'For Each mset In userprefs.moviesets
                    '    ComboBox3.Items.Add(mset)
                    'Next
                    For te = 0 To ComboBox3.Items.Count - 1
                        If ComboBox3.Items(te) = workingmoviedetails.fullmoviebody.movieset Then
                            ComboBox3.SelectedIndex = te
                            Exit For
                        End If
                    Next
                End If
            Catch
            End Try
            Call setupfont()

            Call addhtmltemplates()
            Call loadcommandlist()
            startup = False
            frmSplash.Close()
            'ToolStrip1.Enabled = True
        End If
    End Sub

    Private Sub Form1_Move(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Move
        If startup = False Then
            userprefs.locx = Me.Location.X
            userprefs.locy = Me.Location.Y
            Dim save As New _preferences
            Call save.saveconfig()
        End If
    End Sub

    Private Sub Form1_ResizeEnd(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.ResizeEnd

        If userprefs.formwidth <> Me.Width Or userprefs.formheight <> Me.Height Then
            userprefs.formwidth = Me.Width
            userprefs.formheight = Me.Height
            Dim save As New _preferences
            Call save.saveconfig()
            Dim maxcount2 As Integer = Convert.ToInt32((TabPage22.Width - 100) / 150)
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            'If filteredlist.Count / maxcount2 > 159 Then
            '    maxcount2 += 1
            'End If
            If maxcount2 <> maxcount Then
                maxcount = maxcount2
                Call resetwall()
            End If

        End If
    End Sub

    Private Sub savedata()
        Dim fullpath As String = workingprofile.moviecache
        If IO.File.Exists(fullpath) Then
            Dim don As Boolean = False
            Dim count As Integer = 0
            Do
                Try
                    IO.File.Delete(fullpath)
                    don = True
                Catch ex As Exception
                Finally
                    count += 1
                End Try
            Loop Until don = True


        End If
        Dim doc As New XmlDocument

        Dim thispref As XmlNode = Nothing
        Dim xmlproc As XmlDeclaration

        xmlproc = doc.CreateXmlDeclaration("1.0", "UTF-8", "yes")
        doc.AppendChild(xmlproc)
        Dim root As XmlElement
        Dim child As XmlElement
        root = doc.CreateElement("movie_cache")

        Dim childchild As XmlElement
        For Each movie In fullmovielist
            child = doc.CreateElement("movie")
            childchild = doc.CreateElement("filedate")
            childchild.InnerText = movie.filedate
            child.AppendChild(childchild)
            childchild = doc.CreateElement("missingdata1")
            childchild.InnerText = movie.missingdata1.ToString
            child.AppendChild(childchild)
            childchild = doc.CreateElement("filename")
            childchild.InnerText = movie.filename
            child.AppendChild(childchild)
            childchild = doc.CreateElement("foldername")
            childchild.InnerText = movie.foldername
            child.AppendChild(childchild)
            childchild = doc.CreateElement("fullpathandfilename")
            childchild.InnerText = movie.fullpathandfilename
            child.AppendChild(childchild)
            If movie.movieset <> Nothing Then
                If movie.movieset <> "" Then
                    childchild = doc.CreateElement("set")
                    childchild.InnerText = movie.movieset
                    child.AppendChild(childchild)
                Else
                    childchild = doc.CreateElement("set")
                    childchild.InnerText = "None"
                    child.AppendChild(childchild)
                End If
            Else
                childchild = doc.CreateElement("set")
                childchild.InnerText = "None"
                child.AppendChild(childchild)
            End If
            childchild = doc.CreateElement("genre")
            childchild.InnerText = movie.genre
            child.AppendChild(childchild)
            childchild = doc.CreateElement("id")
            childchild.InnerText = movie.id
            child.AppendChild(childchild)
            childchild = doc.CreateElement("playcount")
            childchild.InnerText = movie.playcount
            child.AppendChild(childchild)
            childchild = doc.CreateElement("rating")
            childchild.InnerText = movie.rating
            child.AppendChild(childchild)
            childchild = doc.CreateElement("title")
            childchild.InnerText = movie.title
            child.AppendChild(childchild)
            If movie.sortorder = Nothing Then
                movie.sortorder = movie.title
            End If
            If movie.sortorder = "" Then
                movie.sortorder = movie.title
            End If
            childchild = doc.CreateElement("outline")
            childchild.InnerText = movie.outline
            child.AppendChild(childchild)
            childchild = doc.CreateElement("sortorder")
            childchild.InnerText = movie.sortorder
            child.AppendChild(childchild)
            childchild = doc.CreateElement("titleandyear")
            '---- aqui....
            If movie.titleandyear.Length >= 5 Then
                If movie.titleandyear.ToLower.IndexOf(", the") = movie.titleandyear.Length - 12 Then
                    Dim Temp As String = movie.titleandyear.Substring(movie.titleandyear.Length - 7, 7)
                    movie.titleandyear = "The " & movie.titleandyear.Substring(0, movie.titleandyear.Length - 12) & Temp
                End If
            End If

            childchild.InnerText = movie.titleandyear
            child.AppendChild(childchild)
            childchild = doc.CreateElement("runtime")
            childchild.InnerText = movie.runtime
            child.AppendChild(childchild)
            childchild = doc.CreateElement("top250")
            childchild.InnerText = movie.top250
            child.AppendChild(childchild)
            childchild = doc.CreateElement("year")
            childchild.InnerText = movie.year
            child.AppendChild(childchild)
            root.AppendChild(child)
        Next

        doc.AppendChild(root)
        For f = 1 To 100
            Try
                Dim output As New XmlTextWriter(fullpath, System.Text.Encoding.UTF8)
                output.Formatting = Formatting.Indented
                doc.WriteTo(output)
                output.Close()
                Exit For
            Catch
            End Try
        Next


    End Sub

    Private Sub savetvdata()
        Dim fullpath As String = workingprofile.tvcache
        If IO.File.Exists(fullpath) Then
            IO.File.Delete(fullpath)
        End If
        Dim doc As New XmlDocument

        Dim thispref As XmlNode = Nothing
        Dim xmlproc As XmlDeclaration

        xmlproc = doc.CreateXmlDeclaration("1.0", "UTF-8", "yes")
        doc.AppendChild(xmlproc)
        Dim root As XmlElement
        Dim child As XmlElement
        root = doc.CreateElement("tv_cache")

        Dim childchild As XmlElement
        For Each item In basictvlist
            child = doc.CreateElement("tvshow")
            childchild = doc.CreateElement("title")
            If item.title.Length >= 5 Then
                If item.title.ToLower.IndexOf(", the") = item.title.Length - 5 Then
                    item.title = "The " & item.title.Substring(0, item.title.Length - 5)
                End If
            End If
            childchild.InnerText = item.title
            child.AppendChild(childchild)
            childchild = doc.CreateElement("fullpathandfilename")
            childchild.InnerText = item.fullpath
            child.AppendChild(childchild)
            childchild = doc.CreateElement("genre")
            childchild.InnerText = item.genre
            child.AppendChild(childchild)
            childchild = doc.CreateElement("imdbid")
            childchild.InnerText = item.imdbid
            child.AppendChild(childchild)
            childchild = doc.CreateElement("tvdbid")
            childchild.InnerText = item.tvdbid
            child.AppendChild(childchild)
            childchild = doc.CreateElement("rating")
            childchild.InnerText = item.rating
            child.AppendChild(childchild)
            child.AppendChild(childchild)
            childchild = doc.CreateElement("year")
            childchild.InnerText = item.year
            child.AppendChild(childchild)
            childchild = doc.CreateElement("language")
            childchild.InnerText = item.language
            child.AppendChild(childchild)
            childchild = doc.CreateElement("status")
            childchild.InnerText = item.status
            child.AppendChild(childchild)
            childchild = doc.CreateElement("sortorder")
            childchild.InnerText = item.sortorder
            child.AppendChild(childchild)
            childchild = doc.CreateElement("episodeactorsource")
            childchild.InnerText = item.episodeactorsource
            child.AppendChild(childchild)
            childchild = doc.CreateElement("locked")
            childchild.InnerText = item.locked.ToString.ToLower
            child.AppendChild(childchild)
            For Each episode In item.allepisodes
                Dim episodechild As XmlElement
                childchild = doc.CreateElement("episode")
                episodechild = doc.CreateElement("title")
                episodechild.InnerText = episode.title
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("episodepath")
                episodechild.InnerText = episode.episodepath
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("seasonno")
                episodechild.InnerText = episode.seasonno
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("episodeno")
                episodechild.InnerText = episode.episodeno
                childchild.AppendChild(episodechild)

                'episodechild = doc.CreateElement("status")
                'episodechild.InnerText = episode.status
                'childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("playcount")
                episodechild.InnerText = episode.playcount
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("rating")
                episodechild.InnerText = episode.rating
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("tvdbid")
                episodechild.InnerText = episode.tvdbid
                childchild.AppendChild(episodechild)
                child.AppendChild(childchild)
            Next
            root.AppendChild(child)
            For Each episode In item.missingepisodes
                Dim episodechild As XmlElement
                childchild = doc.CreateElement("missingepisode")
                episodechild = doc.CreateElement("title")
                episodechild.InnerText = episode.title
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("playcount")
                episodechild.InnerText = episode.playcount
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("episodepath")
                episodechild.InnerText = episode.episodepath
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("seasonno")
                episodechild.InnerText = episode.seasonno
                childchild.AppendChild(episodechild)

                episodechild = doc.CreateElement("episodeno")
                episodechild.InnerText = episode.episodeno
                childchild.AppendChild(episodechild)
                child.AppendChild(childchild)
            Next
            root.AppendChild(child)
        Next

        doc.AppendChild(root)
        Dim output As New XmlTextWriter(fullpath, System.Text.Encoding.UTF8)
        output.Formatting = Formatting.Indented
        doc.WriteTo(output)
        output.Close()

    End Sub

    Private Sub loadtvcache()
        totalepisodecount = 0
        totaltvshowcount = 0
        TextBox32.Text = ""
        TextBox33.Text = ""
        basictvlist.Clear()
        TreeView1.Nodes.Clear()
        'TreeView1.
        Dim tvlist As New XmlDocument
        tvlist.Load(workingprofile.tvcache)
        Dim thisresult As XmlNode = Nothing
        For Each thisresult In tvlist("tv_cache")
            Select Case thisresult.Name
                Case "tvshow"
                    Dim newtvshow As New basictvshownfo
                    Dim detail As XmlNode = Nothing
                    For Each detail In thisresult.ChildNodes
                        Select Case detail.Name
                            Case "title"
                                Dim tempstring As String = ""
                                tempstring = detail.InnerText
                                '-------------- Aqui
                                If userprefs.ignorearticle = True Then
                                    If tempstring.ToLower.IndexOf("the ") = 0 Then
                                        tempstring = tempstring.Substring(4, tempstring.Length - 4)
                                        tempstring = tempstring & ", The"
                                    End If
                                End If
                                newtvshow.title = tempstring
                            Case "fullpathandfilename"
                                    newtvshow.fullpath = detail.InnerText
                            Case "genre"
                                    newtvshow.genre = detail.InnerText
                            Case "locked"
                                    newtvshow.locked = detail.InnerText
                            Case "imdbid"
                                    newtvshow.imdbid = detail.InnerText
                            Case "tvdbid"
                                    newtvshow.tvdbid = detail.InnerText
                            Case "rating"
                                    newtvshow.rating = detail.InnerText
                            Case "year"
                                    newtvshow.year = detail.InnerText
                            Case "language"
                                    newtvshow.language = detail.InnerText
                            Case "sortorder"
                                    newtvshow.sortorder = detail.InnerText
                            Case "episodeactorsource"
                                    newtvshow.episodeactorsource = detail.InnerText
                            Case "status"
                                    newtvshow.status = detail.InnerText
                            Case "episode"
                                    Dim newepisode As New basicepisodenfo
                                    Dim episodenew As XmlNode = Nothing
                                    For Each episodenew In detail.ChildNodes
                                        Select Case episodenew.Name
                                            Case "title"
                                                newepisode.title = episodenew.InnerText
                                            Case "episodepath"
                                                newepisode.episodepath = episodenew.InnerText
                                            Case "seasonno"
                                                newepisode.seasonno = episodenew.InnerText
                                            Case "episodeno"
                                                newepisode.episodeno = episodenew.InnerText
                                                'Case "status"
                                                '    newepisode.status = episodenew.InnerText
                                            Case "playcount"
                                                newepisode.playcount = episodenew.InnerText
                                            Case "rating"
                                                newepisode.rating = episodenew.InnerText
                                            Case "tvdbid"
                                                newepisode.tvdbid = episodenew.InnerText
                                        End Select
                                    Next
                                    newtvshow.allepisodes.Add(newepisode)
                            Case "missingepisode"
                                    Dim newepisode As New basicepisodenfo
                                    Dim episodenew As XmlNode = Nothing
                                    For Each episodenew In detail.ChildNodes
                                        Select Case episodenew.Name
                                            Case "title"
                                                newepisode.title = episodenew.InnerText
                                            Case "episodepath"
                                                newepisode.episodepath = episodenew.InnerText
                                            Case "seasonno"
                                                newepisode.seasonno = episodenew.InnerText
                                            Case "episodeno"
                                                newepisode.episodeno = episodenew.InnerText
                                                'Case "status"
                                                '    newepisode.status = episodenew.InnerText
                                            Case "playcount"
                                                newepisode.playcount = episodenew.InnerText
                                            Case "rating"
                                                newepisode.rating = episodenew.InnerText
                                            Case "tvdbid"
                                                newepisode.tvdbid = episodenew.InnerText
                                        End Select
                                    Next
                                    newtvshow.missingepisodes.Add(newepisode)
                        End Select
                    Next
                    basictvlist.Add(newtvshow)
            End Select
        Next
        Call populatetvtree()
    End Sub

    Private Sub add_tvshow_to_treeview(ByVal fullpath As String, ByVal title As String, Optional ByVal xmlerror As Boolean = False, Optional ByVal locked As Boolean = True)
        If xmlerror = True Then
            TreeView1.Nodes.Add(fullpath, title)
            For Each tn As TreeNode In TreeView1.Nodes
                If tn.Name = fullpath Then
                    If locked = True Or locked = 2 Then tn.StateImageIndex = 0
                    tn.ForeColor = Color.Red
                End If
            Next
        Else
            TreeView1.Nodes.Add(fullpath, title)
            For Each tn As TreeNode In TreeView1.Nodes
                If tn.Name = fullpath Then
                    tn.ForeColor = Color.Black
                    If locked = True Or locked = 2 Then tn.StateImageIndex = 0
                End If
            Next
        End If
    End Sub

    Private Sub add_episode_to_treeview(ByVal rootnode As Integer, ByVal childnode As Integer, ByVal fullpath As String, ByVal title As String, Optional ByVal xmlerror As Boolean = False)
        Try
            Dim ccnode As TreeNode
            ccnode = TreeView1.Nodes(rootnode).Nodes(childnode)
            For Each nod In ccnode.Nodes
                If nod.text = title Then
                    ccnode.Nodes.Remove(nod)
                    Exit For
                End If
            Next
            ccnode.Nodes.Add(fullpath, title)
          
            If xmlerror = True Then
                For Each no As TreeNode In ccnode.Nodes
                    If no.Name = fullpath Then
                        no.ForeColor = Color.Red
                        Exit For
                    End If
                Next
            Else
                For Each no As TreeNode In ccnode.Nodes
                    If no.Name = fullpath Then
                        no.ForeColor = Color.Black
                        Exit For
                    End If
                Next
            End If
            'TreeView1.Nodes.Remove(node)
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try
    End Sub

    Private Sub populatetvtree()
        Dim tempint As Integer
        Dim tempstring As String
        ComboBox4.Items.Clear()
        ComboBox4.Text = ""

        PictureBox6.Image = Nothing
        PictureBox4.Image = Nothing
        PictureBox5.Image = Nothing
        TextBox10.Text = ""
        TextBox11.Text = ""
        TextBox9.Text = ""
        TextBox12.Text = ""
        TextBox13.Text = ""
        TextBox14.Text = ""
        TextBox15.Text = ""
        TextBox16.Text = ""
        TextBox18.Text = ""
        TextBox19.Text = ""
        If Not workingtvshow Is Nothing Then workingtvshow.path = ""
        ComboBox4.Items.Clear()
        ComboBox4.Text = ""
        TextBox20.Text = ""
        TextBox21.Text = ""
        TextBox22.Text = ""
        TextBox23.Text = ""
        TextBox24.Text = ""
        TextBox25.Text = ""
        ComboBox5.Items.Clear()
        ComboBox5.Text = ""
        Panel9.Visible = False
        TextBox2.Text = ""
        totaltvshowcount = 0
        totalepisodecount = 0
        TreeView1.Nodes.Clear()
        Dim cnode As TreeNode
        Dim showtitlenode As TreeNode
        For Each item In basictvlist
            totaltvshowcount += 1
            Dim shownode As Integer = -1
            Try
                If item.status.ToLower.IndexOf("xml error") <> -1 Then
                    Call add_tvshow_to_treeview(item.fullpath, item.title, True, item.locked)
                Else
                    Call add_tvshow_to_treeview(item.fullpath, item.title, False, item.locked)
                End If
            Catch ex As Exception
                'MsgBox(ex.Message)
            End Try
            For Each episode In item.allepisodes
                totalepisodecount += 1
                Try
                    Dim seasonno As Integer = -10
                    seasonno = Convert.ToInt32(episode.seasonno)

                    For g = 0 To TreeView1.Nodes.Count - 1
                        If TreeView1.Nodes(g).Name.ToString = item.fullpath Then
                            cnode = TreeView1.Nodes(g)
                            shownode = g
                            Exit For
                        End If
                    Next

                    Dim seasonstring As String = Nothing

                    If seasonno <> 0 And seasonno <> -1 Then
                        If seasonno < 10 Then
                            tempstring = "Season 0" & seasonno.ToString
                        Else
                            tempstring = "Season " & seasonno.ToString
                        End If
                    ElseIf seasonno = 0 Then
                        tempstring = "Specials"
                        'ElseIf seasonno = -1 Then
                        '    tempstring = "Unknown"
                    End If
                    Dim node As TreeNode
                    Dim alreadyexists As Boolean = False
                    For Each node In cnode.Nodes
                        If node.text = tempstring Then
                            alreadyexists = True
                            Exit For
                        End If
                    Next
                    If alreadyexists = False Then cnode.Nodes.Add(tempstring)

                    For Each node In cnode.Nodes
                        If node.text = tempstring Then
                            tempint = node.index

                            Exit For
                        End If
                    Next

                    Dim eps As String
                    If episode.episodeno < 10 Then
                        eps = "0" & episode.episodeno.ToString
                    Else
                        eps = episode.episodeno.ToString
                    End If
                    eps = eps & " - " & episode.title
                    If episode.imdbid = Nothing Then
                        episode.imdbid = ""
                    End If

                    If episode.imdbid.ToLower.IndexOf("xml error") <> -1 Then
                        Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, True)
                    Else
                        Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, False)
                    End If

                Catch ex As Exception
                    'MsgBox(ex.ToString)
                End Try
            Next
            For Each missingep In item.missingepisodes
                For g = 0 To TreeView1.Nodes.Count - 1
                    If TreeView1.Nodes(g).Name.ToString = item.fullpath Then
                        cnode = TreeView1.Nodes(g)
                        shownode = g
                        Exit For
                    End If
                Next

                Dim seasonstring As String = Nothing
                Dim seasonno As Integer = Convert.ToInt32(missingep.seasonno)
                If seasonno <> 0 And seasonno <> -1 Then
                    If seasonno < 10 Then
                        tempstring = "Season 0" & seasonno.ToString
                    Else
                        tempstring = "Season " & seasonno.ToString
                    End If
                ElseIf seasonno = 0 Then
                    tempstring = "Specials"
                    'ElseIf seasonno = -1 Then
                    '    tempstring = "Unknown"
                End If
                Dim node As TreeNode
                Dim alreadyexists As Boolean = False
                For Each node In cnode.Nodes
                    If node.Text = tempstring Then
                        alreadyexists = True
                        Exit For
                    End If
                Next
                If alreadyexists = False Then cnode.Nodes.Add(tempstring)
                For Each node In cnode.Nodes
                    If node.Text = tempstring Then
                        tempint = node.Index
                        Exit For
                    End If
                Next

                Dim eps As String
                Dim episodeno As Integer = Convert.ToInt32(missingep.episodeno)
                If episodeno < 10 Then
                    eps = "0" & episodeno.ToString
                Else
                    eps = episodeno.ToString
                End If
                eps = eps & " - " & missingep.title
                Dim ccnode As TreeNode
                ccnode = TreeView1.Nodes(shownode).Nodes(tempint)
                Dim tempstring2 As String = "Missing: " & eps
                ccnode.Nodes.Add(tempstring2, eps)
                For Each no As TreeNode In ccnode.Nodes
                    If no.Name = tempstring2 Then
                        no.ForeColor = Color.Blue
                        Exit For
                    End If
                Next
            Next
        Next


        Try
            Dim MyNode As TreeNode
            MyNode = TreeView1.Nodes(0) 'First Level
            'MyNode = MyNode.Nodes(6)  ' Second Level
            TreeView1.SelectedNode = MyNode
            TabControl1.Focus()
            TabControl3.Focus()
            TreeView1.Focus()
        Catch ex As Exception

        End Try
        TextBox32.Text = totaltvshowcount.ToString
        TextBox33.Text = totalepisodecount.ToString
    End Sub

    Private Sub loadmoviecache()
        fullmovielist.Clear()
        filteredlist.Clear()
        dlist.Clear()
        Dim movielist As New XmlDocument
        Dim objReader As New System.IO.StreamReader(workingprofile.moviecache)
        Dim tempstring As String = objReader.ReadToEnd
        objReader.Close()



        movielist.LoadXml(tempstring)
        Dim thisresult As XmlNode = Nothing
        For Each thisresult In movielist("movie_cache")
            Select Case thisresult.Name
                Case "movie"
                    Dim newmovie As New ComboList
                    Dim detail As XmlNode = Nothing
                    For Each detail In thisresult.ChildNodes
                        Select Case detail.Name
                            'workingmovie.missingdata1
                            Case "missingdata1"
                                newmovie.missingdata1 = Convert.ToByte(detail.InnerText)
                            Case "set"
                                newmovie.movieset = detail.InnerText
                            Case "sortorder"
                                newmovie.sortorder = detail.InnerText
                            Case "filedate"
                                newmovie.filedate = detail.InnerText
                            Case "filename"
                                newmovie.filename = detail.InnerText
                            Case "foldername"
                                newmovie.foldername = detail.InnerText
                            Case "fullpathandfilename"
                                newmovie.fullpathandfilename = detail.InnerText
                            Case "genre"
                                'Dim strarr() As String
                                'strarr = detail.InnerText.Split("/")
                                'For count = 0 To strarr.Length - 1
                                '    strarr(count) = strarr(count).Replace(" ", "")
                                'Next
                                'If strarr.Length <= userprefs.maxmoviegenre Then
                                '    newmovie.genre = detail.InnerText
                                'Else
                                '    For f = 0 To userprefs.maxmoviegenre - 1
                                '        If f = 0 Then
                                '            newmovie.genre = strarr(f)
                                '        Else
                                '            newmovie.genre += " / " & strarr(f)
                                '        End If
                                '    Next
                                'End If


                                newmovie.genre = detail.InnerText & newmovie.genre
                            Case "id"
                                newmovie.id = detail.InnerText
                            Case "playcount"
                                newmovie.playcount = detail.InnerText
                            Case "rating"
                                newmovie.rating = detail.InnerText
                            Case "title"
                                newmovie.title = detail.InnerText
                            Case "titleandyear"
                                '--------- aqui
                                Dim TempString2 As String = detail.InnerText
                                If userprefs.ignorearticle = True Then
                                    If TempString2.ToLower.IndexOf("the ") = 0 Then
                                        Dim Temp As String = TempString2.Substring(TempString2.Length - 7, 7)
                                        TempString2 = TempString2.Substring(4, TempString2.Length - 11)
                                        TempString2 = TempString2 & ", The" & Temp
                                    End If
                                End If

                                newmovie.titleandyear = TempString2
                            Case "top250"
                                newmovie.top250 = detail.InnerText
                            Case "year"
                                newmovie.year = detail.InnerText
                            Case "outline"
                                newmovie.outline = detail.InnerText
                            Case "runtime"
                                newmovie.runtime = detail.InnerText
                        End Select
                    Next
                    If newmovie.movieset = Nothing Then
                        newmovie.movieset = "None"
                    End If
                    If newmovie.movieset = "" Then
                        newmovie.movieset = "None"
                    End If
                    fullmovielist.Add(newmovie)
            End Select
        Next
        If fullmovielist.Count = 0 Then
            Call rebuildmovies(moviefolders)
            Exit Sub
        End If

        filteredlist.Clear()
        For Each movie In fullmovielist
            filteredlist.Add(movie)
        Next
        Call sortorder()
        Call loadmovielist()
        Try
            'ignore = False
            ComboBox1.SelectedIndex = 0
            If ComboBox1.SelectedItem.value <> "" Then
                'loadinfofile()
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub loadregex()
        Dim tempstring As String
        tempstring = workingprofile.regexlist
        tvregex.Clear()
        Dim path As String = tempstring
        If IO.File.Exists(path) Then
            Try
                Dim regexlist As New XmlDocument
                regexlist.Load(path)
                If regexlist.DocumentElement.Name = "regexlist" Then
                    For Each thisresult In regexlist("regexlist")
                        Select Case thisresult.Name
                            Case "tvregex"
                                tvregex.Add(thisresult.innertext)
                        End Select
                    Next
                End If
            Catch
                Call saveregex(True)
            End Try
        Else
            Call saveregex(True)
        End If
    End Sub

    Private Sub saveregex(Optional ByVal newdefault As Boolean = False)
        Dim path As String = workingprofile.regexlist
        If newdefault = True Then
            tvregex.Clear()
            tvregex.Add("[Ss]([\d]{1,4}).?[Ee]([\d]{1,4})")
            tvregex.Add("([\d]{1,4}) ?[xX] ?([\d]{1,4})")
            tvregex.Add("([0-9]+)([0-9][0-9])")
        End If
        Dim doc As New XmlDocument

        Dim thispref As XmlNode = Nothing
        Dim xmlproc As XmlDeclaration

        xmlproc = doc.CreateXmlDeclaration("1.0", "UTF-8", "yes")
        doc.AppendChild(xmlproc)
        Dim root As XmlElement
        Dim child As XmlElement
        root = doc.CreateElement("regexlist")
        For Each Regex In tvregex
            child = doc.CreateElement("tvregex")
            child.InnerText = Regex
            root.AppendChild(child)
        Next
        doc.AppendChild(root)
        Dim output As New XmlTextWriter(path, System.Text.Encoding.UTF8)
        output.Formatting = Formatting.Indented
        doc.WriteTo(output)
        output.Close()


    End Sub

    Private Sub loadgenrelist()
        If IO.File.Exists(workingprofile.filters) Or userprefs.startupcache = False Then
            CheckedListBox1.Items.Clear()
            CheckedListBox2.Items.Clear()
            Dim line As String
            Try

                Dim cfg2 As IO.StreamReader = IO.File.OpenText(workingprofile.filters)
                Do
                    Try
                        line = cfg2.ReadLine
                        If line <> Nothing Then
                            Dim M As Match
                            M = Regex.Match(line, "<([\d]{2,3})>")
                            If M.Success = True Then
                                If IsNumeric(M.Groups(1).Value) Then
                                    CheckedListBox1.ColumnWidth = M.Groups(1).Value
                                End If
                            Else
                                CheckedListBox1.Items.Add(line)
                                CheckedListBox2.Items.Add(line)
                            End If

                        End If
                    Catch
                    End Try
                Loop Until line = Nothing
            Catch ex As Exception
            End Try
        End If
    End Sub

    Private Sub loadprefs()
        Dim tempstring As String
        For Each prof In profile_structure.profilelist
            If prof.profilename = workingprofile.profilename Then
                tempstring = prof.config
                If IO.File.Exists(tempstring) Then userprefs.configpath = tempstring
                userprefs.configpath = tempstring
                Dim newloadconfig As New _preferences
                newloadconfig.loadconfig()
            End If
        Next
        For Each item In userprefs.moviesets
            ComboBox3.Items.Add(item)
        Next
    End Sub

    Private Sub loadprofiles()
        profile_structure.profilelist.Clear()
        Dim profilepath As String = IO.Path.Combine(applicationpath, "settings")
        profilepath = IO.Path.Combine(profilepath, "profile.xml")

        Dim path As String = profilepath
        If IO.File.Exists(path) Then
            Try
                Dim profilelist As New XmlDocument
                profilelist.Load(path)
                If profilelist.DocumentElement.Name = "profile" Then
                    For Each thisresult In profilelist("profile")
                        Select Case thisresult.Name
                            Case "default"
                                profile_structure.defaultprofile = thisresult.innertext
                            Case "startup"
                                profile_structure.startupprofile = thisresult.innertext
                            Case "profiledetails"
                                Dim currentprofile As New listofprofiles
                                For Each result In thisresult.childnodes
                                    Select Case result.name
                                        Case "actorcache"
                                            currentprofile.actorcache = result.innertext
                                        Case "config"
                                            currentprofile.config = result.innertext
                                        Case "moviecache"
                                            currentprofile.moviecache = result.innertext
                                        Case "profilename"
                                            currentprofile.profilename = result.innertext
                                        Case "regex"
                                            currentprofile.regexlist = result.innertext
                                        Case "filters"
                                            currentprofile.filters = result.innertext
                                        Case "tvcache"
                                            currentprofile.tvcache = result.innertext
                                    End Select
                                Next
                                profile_structure.profilelist.Add(currentprofile)
                        End Select
                    Next
                End If
            Catch

            End Try
        Else

        End If
        If profile_structure.profilelist.Count > 1 Then
            ProfilesToolStripMenuItem.Visible = True
            ProfilesToolStripMenuItem.Enabled = True
            ProfilesToolStripMenuItem.DropDownItems.Clear()

            For Each prof In profile_structure.profilelist
                If prof.profilename <> Nothing Then
                    ProfilesToolStripMenuItem.DropDownItems.Add(prof.profilename)
                End If
            Next
            For Each item In ProfilesToolStripMenuItem.DropDownItems
                If item.text = workingprofile.profilename Then
                    With item
                        item.checked = True
                    End With
                Else
                    item.checked = False
                End If
            Next
        End If
    End Sub

    Private Sub saveprofiles()
        Dim profilepath As String = IO.Path.Combine(applicationpath, "settings")
        profilepath = IO.Path.Combine(profilepath, "profile.xml")

        Dim doc As New XmlDocument

        Dim thispref As XmlNode = Nothing
        Dim xmlproc As XmlDeclaration

        xmlproc = doc.CreateXmlDeclaration("1.0", "UTF-8", "yes")
        doc.AppendChild(xmlproc)
        Dim root As XmlElement
        Dim child As XmlElement
        Dim childchild As XmlElement
        root = doc.CreateElement("profile")
        child = doc.CreateElement("default")
        child.InnerText = profile_structure.defaultprofile
        root.AppendChild(child)
        child = doc.CreateElement("startup")
        child.InnerText = profile_structure.startupprofile
        root.AppendChild(child)
        doc.AppendChild(root)


        For Each prof In profile_structure.profilelist
            child = doc.CreateElement("profiledetails")
            childchild = doc.CreateElement("actorcache")
            childchild.InnerText = prof.actorcache
            child.AppendChild(childchild)

            childchild = doc.CreateElement("config")
            childchild.InnerText = prof.config
            child.AppendChild(childchild)

            childchild = doc.CreateElement("moviecache")
            childchild.InnerText = prof.moviecache
            child.AppendChild(childchild)

            childchild = doc.CreateElement("profilename")
            childchild.InnerText = prof.profilename
            child.AppendChild(childchild)

            childchild = doc.CreateElement("regex")
            childchild.InnerText = prof.regexlist
            child.AppendChild(childchild)

            childchild = doc.CreateElement("filters")
            childchild.InnerText = prof.filters
            child.AppendChild(childchild)

            childchild = doc.CreateElement("tvcache")
            childchild.InnerText = prof.tvcache
            child.AppendChild(childchild)
            root.AppendChild(child)
        Next

      

        doc.AppendChild(root)
        Dim saveing As New XmlTextWriter(profilepath, System.Text.Encoding.UTF8)
        saveing.Formatting = Formatting.Indented
        doc.WriteTo(saveing)
        saveing.Close()

        If profile_structure.profilelist.Count > 1 Then
            ProfilesToolStripMenuItem.Visible = True
            ProfilesToolStripMenuItem.Enabled = True
            ProfilesToolStripMenuItem.DropDownItems.Clear()
            For Each prof In profile_structure.profilelist
                If prof.profilename <> Nothing Then
                    ProfilesToolStripMenuItem.DropDownItems.Add(prof.profilename)
                End If
            Next
            For Each item In ProfilesToolStripMenuItem.DropDownItems
                If item.text = workingprofile.profilename Then
                    With item
                        item.checked = True
                    End With
                Else
                    item.checked = False
                End If
            Next
        End If

    End Sub

    Private Sub loadcommandlist()
        For Each com In userprefs.commandlist
            ToolsToolStripMenuItem.DropDownItems.Add(com.title)
        Next
    End Sub

    Private Sub addhtmltemplates()
        templatelist.Clear()
        Dim folder As String = IO.Path.Combine(applicationpath, "html_templates\")
        Dim dir_info As New System.IO.DirectoryInfo(folder)
        tvrebuildlog("Looking in " & folder)
        Dim fs_infos() As System.IO.FileInfo = dir_info.GetFiles("*.txt", SearchOption.TopDirectoryOnly)
        For Each info In fs_infos
            Try
                Dim fullstring As String
                Dim cfg2 As IO.StreamReader = IO.File.OpenText(info.FullName)
                fullstring = cfg2.ReadToEnd
                If fullstring.ToLower.IndexOf("<<mc html page>>") <> -1 And fullstring.ToLower.IndexOf("<</mc html page>>") <> -1 Then
                    Dim tempstring As String = fullstring.Substring(fullstring.IndexOf("<title>") + 7, fullstring.IndexOf("</title>") - 7)
                    Dim template As htmltemplate
                    Dim add As Boolean = True
                    For Each temp In templatelist
                        If temp.title = tempstring Then
                            add = False
                            Exit For
                        End If
                    Next
                    If add = True Then
                        template.title = tempstring
                        template.path = info.FullName
                        template.body = fullstring
                        OutputMovieListAsHTMLToolStripMenuItem.DropDownItems.Add(template.title)
                        templatelist.Add(template)
                    End If
                End If
            Catch ex As Exception
                Dim t As Integer = 0
            End Try
        Next
    End Sub

    Private Sub rebuildactordb()
        actordb.Clear()
        Try
            For Each movie In fullmovielist
                Dim movieadd As New fullmoviedetails
                movieadd = nfofunction.loadfullmovienfo(movie.fullpathandfilename)
                For Each actor In movieadd.listactors
                    Dim newactor As actordatabase
                    newactor.actorname = actor.actorname
                    newactor.movieid = movie.id
                    actordb.Add(newactor)
                Next
            Next
            Call saveactorcache()
        Catch
        End Try
    End Sub

    Private Sub saveactorcache()
        Dim savepath As String = workingprofile.actorcache
        Dim doc As New XmlDocument

        Dim thispref As XmlNode = Nothing
        Dim xmlproc As XmlDeclaration

        xmlproc = doc.CreateXmlDeclaration("1.0", "UTF-8", "yes")
        doc.AppendChild(xmlproc)
        Dim root As XmlElement
        Dim child As XmlElement
        root = doc.CreateElement("actor_cache")

        Dim childchild As XmlElement
        For Each actor In actordb
            child = doc.CreateElement("actor")
            childchild = doc.CreateElement("name")
            childchild.InnerText = actor.actorname
            child.AppendChild(childchild)
            childchild = doc.CreateElement("id")
            childchild.InnerText = actor.movieid
            child.AppendChild(childchild)
            root.AppendChild(child)
        Next
        doc.AppendChild(root)
        Dim output As New XmlTextWriter(savepath, System.Text.Encoding.UTF8)
        output.Formatting = Formatting.Indented
        doc.WriteTo(output)
        output.Close()
    End Sub

    Private Sub loadactorcache()
        actordb.Clear()
        Dim loadpath As String = workingprofile.actorcache
        Dim actorlist As New XmlDocument
        actorlist.Load(loadpath)
        Dim thisresult As XmlNode = Nothing
        For Each thisresult In actorlist("actor_cache")
            Select thisresult.Name
                Case "actor"
                    Dim newactor As New actordatabase
                    newactor.actorname = ""
                    newactor.movieid = ""
                    Dim detail As XmlNode = Nothing
                    For Each detail In thisresult.ChildNodes
                        Select detail.Name
                            Case "name"
                                newactor.actorname = detail.InnerText
                            Case "id"
                                newactor.movieid = detail.InnerText
                        End Select
                        If newactor.actorname <> "" And newactor.movieid <> "" Then
                            actordb.Add(newactor)
                        End If
                    Next
            End Select
        Next
    End Sub

    Private Sub rebuildtvshows()
        tvrebuildlog("Starting TV Show Rebuild" & vbCrLf & vbCrLf, , True)

        totaltvshowcount = 0
        totalepisodecount = 0
        TextBox32.Text = ""
        TextBox33.Text = ""
        Me.Enabled = False
        basictvlist.Clear()
        TreeView1.Nodes.Clear()
        For Each tvfolder In tvfolders
            'tvrebuildlog("Adding " & tvfolder)
            Dim hg As New IO.DirectoryInfo(tvfolder)
            If Not hg.Exists Then
                'Dim newtvshownfo As New basictvshownfo
                'newtvshownfo.title = filefunction.getlastfolder(tvfolder)
                'newtvshownfo.status = "Folder not found"
                'basictvlist.Add(newtvshownfo)
            End If
            Dim shownfopath As String = IO.Path.Combine(tvfolder, "tvshow.nfo")
            'tvrebuildlog("tvshow.nfo path is: " & shownfopath)
            Dim newtvshownfo As basictvshownfo

            newtvshownfo = nfofunction.loadbasictvshownfo(shownfopath)
            If newtvshownfo.title <> Nothing Then
                If newtvshownfo.status.IndexOf("skipthisfile") = -1 Then
                    Dim skip As Boolean = False
                    For Each tvshow In basictvlist
                        If newtvshownfo.fullpath = tvshow.fullpath Then
                            skip = True
                            Exit For
                        End If
                    Next
                    If skip = False Then
                        basictvlist.Add(newtvshownfo)
                    End If
                End If
            End If
            realtvpaths.Add(tvfolder)
            'End If
        Next

        For Each tv In basictvlist
            ListtvFiles(tv, "*.NFO")
        Next


        Call populatetvtree()

        Me.Enabled = True

        Call savetvdata()
    End Sub

    Private Sub autorun()
        If moviefolders.Count = 0 Then
            Me.Close()
        End If
        Call scanfornewmovies()

    End Sub

    Private Sub ListFiles(ByVal lst As String, ByVal pattern As String, ByVal dir_info As System.IO.DirectoryInfo)

        Dim exists As Boolean
        Dim propfile As Boolean = False
        Dim allok As Boolean = False
        Dim fs_infos() As System.IO.FileInfo = dir_info.GetFiles(pattern)

        Dim counter As Integer = 1
        Dim counter2 As Integer = 1
        For Each fs_info As System.IO.FileInfo In fs_infos
            Application.DoEvents()
            exists = (IO.File.Exists(fs_info.FullName))
            If exists = True Then
                workingmovie = nfofunction.loadbasicmovienfo(fs_info.FullName, "movielist")
                If workingmovie.movieset <> Nothing Then
                    Dim add As Boolean = True
                    For Each item In userprefs.moviesets
                        If item = workingmovie.movieset Then
                            add = False
                            Exit For
                        End If
                    Next
                    If add = True Then
                        userprefs.moviesets.Add(workingmovie.movieset)
                        ComboBox3.Items.Add(workingmovie.movieset)
                    End If
                End If
                If workingmovie.title <> Nothing Then
                    workingmovie.foldername = filefunction.getlastfolder(workingmovie.fullpathandfilename)
                    If workingmovie.genre.IndexOf("skipthisfile") = -1 Then
                        Dim skip As Boolean = False
                        For Each movie In fullmovielist
                            If movie.fullpathandfilename = workingmovie.fullpathandfilename Then
                                skip = True
                                Exit For
                            End If
                        Next
                        If skip = False Then
                            Dim completebyte1 As Byte = 0
                            Dim fanartexists As Boolean = IO.File.Exists(filefunction.getfanartpath(workingmovie.fullpathandfilename))
                            Dim posterexists As Boolean = IO.File.Exists(filefunction.getposterpath(workingmovie.fullpathandfilename))
                            If fanartexists = False Then
                                completebyte1 += 1
                            End If
                            If posterexists = False Then
                                completebyte1 += 2
                            End If
                            workingmovie.missingdata1 = completebyte1
                            fullmovielist.Add(workingmovie)
                            'filteredlist.Add(workingmovie)
                        End If
                    End If
                End If
            End If
        Next fs_info

        fs_infos = Nothing

    End Sub

    Private Sub ListtvFiles(ByVal tvshow As basictvshownfo, ByVal pattern As String)
        'ByVal dir_info As System.IO.DirectoryInfo
        Try
            Dim exists As Boolean
            Dim episode As New List(Of basicepisodenfo)
            Dim propfile As Boolean = False
            Dim allok As Boolean = False
           

            Dim newlist As New List(Of String)
            newlist.Clear()

            Try
                newlist = filefunction.EnumerateDirectory2(tvshow.fullpath.Substring(0, tvshow.fullpath.Length - 10), True)
            Catch
            End Try
            newlist.Insert(0, tvshow.fullpath.Substring(0, tvshow.fullpath.Length - 11))
            If newlist.Count > 0 Then
                tvrebuildlog(newlist.Count - 1.ToString & " subfolders found in: " & newlist(0) & vbCrLf)
            End If
            For Each folder In newlist
                tvrebuildlog("Searching: " & vbCrLf & folder & vbCrLf & "for episodes")
                Dim dir_info As New System.IO.DirectoryInfo(folder)
                tvrebuildlog("Looking in " & folder)
                Dim fs_infos() As System.IO.FileInfo = dir_info.GetFiles(pattern, SearchOption.TopDirectoryOnly)
                For Each fs_info As System.IO.FileInfo In fs_infos

                    Try
                        Application.DoEvents()
                        If IO.Path.GetFileName(fs_info.FullName.ToLower) <> "tvshow.nfo" Then
                            tvrebuildlog("possible episode nfo found: " & fs_info.FullName)
                            episode = nfofunction.loadbasicepisodenfo(fs_info.FullName)
                            If Not episode Is Nothing Then
                                For Each ep In episode
                                    If ep.title <> Nothing Then
                                        Dim skip As Boolean = False
                                        For Each eps In tvshow.allepisodes
                                            If eps.seasonno = ep.seasonno And eps.episodeno = ep.episodeno And eps.episodepath = ep.episodepath Then
                                                skip = True
                                                Exit For
                                            End If
                                        Next
                                        If skip = False Then
                                            tvshow.allepisodes.Add(ep)
                                            tvrebuildlog("Episode appears to have loaded ok")
                                        End If
                                    End If
                                Next
                            End If
                        End If
                    Catch ex As Exception
                        tvrebuildlog(ex.ToString)
                    End Try
                Next fs_info
            Next
            tvrebuildlog(vbCrLf & vbCrLf & vbCrLf)
        Catch ex As Exception
            tvrebuildlog(ex.ToString)
        End Try
    End Sub

    Private Sub nfos_to_array(ByVal folderlist As List(Of String))
        Dim tempint As Integer
        Dim dirinfo As String


        Dim pattern As String = "*.nfo"
        dlist.Clear()
        realmoviepaths.Clear()
        For Each moviefolder In folderlist
            Dim hg As New IO.DirectoryInfo(moviefolder)
            If hg.Exists Then
                realmoviepaths.Add(moviefolder)
            End If

        Next


        tempint = realmoviepaths.Count
        If tempint > 0 Then
            Dim newlist As List(Of String)
            ' newlist.Clear()
            For f = 0 To tempint - 1
                newlist = filefunction.EnumerateDirectory(realmoviepaths(f))
            Next
            For Each subfolder In newlist
                realmoviepaths.Add(subfolder)
            Next

            For f = 0 To realmoviepaths.Count - 1
                frmSplash.Label3.Text = "Scanning Folder: " & """" & realmoviepaths(f).ToString & """"
                frmSplash.Label3.Refresh()
                Application.DoEvents()
                Dim subdirs As New System.IO.DirectoryInfo(realmoviepaths(f))
                ListFiles(dirinfo, pattern, subdirs)
            Next
        End If
    End Sub

    Private Sub loadinfofile()

        Dim tempstring As String
        Try
            If Not IsNothing(workingmoviedetails) Then
                If workingmovie.fullpathandfilename <> workingmoviedetails.fileinfo.fullpathandfilename Then
                    Try
                        For i = Panel8.Controls.Count - 1 To 0 Step -1
                            Panel8.Controls.RemoveAt(i)
                        Next
                    Catch
                    End Try
                    Try
                        For i = Panel2.Controls.Count - 1 To 0 Step -1
                            Panel2.Controls.RemoveAt(i)
                        Next
                    Catch
                    End Try
                    Try
                        TextBox8.Text = ""
                    Catch
                    End Try
                End If
            End If
        Catch

        End Try
        'PictureBox1.CancelAsync()
        'PictureBox1.Image = Nothing
        'PictureBox1.Refresh()
        ComboBox5.Text = ""

        Button27.Visible = False
        Button28.Visible = False
        thumbeditsmade = False
        posterthumbeditsmade = False
        CheckBox1.Visible = False
        Button15.Visible = False
        Button9.Visible = False
        Button10.Visible = False
        Label18.Visible = False
        titletxt.Text = ""
        TextBox3.Text = ""
        outlinetxt.Text = ""
        plottxt.Text = ""
        taglinetxt.Text = ""
        genretxt.Text = ""
        creditstxt.Text = ""
        directortxt.Text = ""
        studiotxt.Text = ""
        pathtxt.Text = ""
        'actorarray.Clear()
        actorcb.Items.Clear()
        ratingtxt.Text = ""
        runtimetxt.Text = ""
        votestxt.Text = ""
        certtxt.Text = ""
        PictureBox7.Image = Nothing
        PictureBox2.Image = Nothing
        moviethumb.Image = Nothing
        Label16.Text = ""
        Label17.Text = ""
        PictureBox3.Image = Nothing
        Label19.Text = ""
        TextBox34.Text = ""
        titletxt.Text = ""

        roletxt.Text = ""
        PictureBox1.Image = Nothing

        Me.Refresh()
        Application.DoEvents()
        Try
            If workingmovie.fullpathandfilename <> Nothing Then
                workingmoviedetails = nfofunction.loadfullmovienfo(workingmovie.fullpathandfilename)
                If workingmoviedetails.fullmoviebody.playcount = Nothing Then workingmoviedetails.fullmoviebody.playcount = "0"
                If workingmoviedetails.fullmoviebody.credits = Nothing Then workingmoviedetails.fullmoviebody.credits = ""
                If workingmoviedetails.fullmoviebody.director = Nothing Then workingmoviedetails.fullmoviebody.director = ""
                If workingmoviedetails.fullmoviebody.filename = Nothing Then workingmoviedetails.fullmoviebody.filename = ""
                If workingmoviedetails.fullmoviebody.genre = Nothing Then workingmoviedetails.fullmoviebody.genre = ""
                If workingmoviedetails.fullmoviebody.imdbid = Nothing Then workingmoviedetails.fullmoviebody.imdbid = ""
                If workingmoviedetails.fullmoviebody.mpaa = Nothing Then workingmoviedetails.fullmoviebody.mpaa = ""
                If workingmoviedetails.fullmoviebody.outline = Nothing Then workingmoviedetails.fullmoviebody.outline = ""
                If workingmoviedetails.fullmoviebody.playcount = Nothing Then workingmoviedetails.fullmoviebody.playcount = ""
                If workingmoviedetails.fullmoviebody.plot = Nothing Then workingmoviedetails.fullmoviebody.plot = ""
                If workingmoviedetails.fullmoviebody.premiered = Nothing Then workingmoviedetails.fullmoviebody.premiered = ""
                If workingmoviedetails.fullmoviebody.rating = Nothing Then workingmoviedetails.fullmoviebody.rating = ""
                If workingmoviedetails.fullmoviebody.runtime = Nothing Then workingmoviedetails.fullmoviebody.runtime = ""
                If workingmoviedetails.fullmoviebody.studio = Nothing Then workingmoviedetails.fullmoviebody.studio = ""
                If workingmoviedetails.fullmoviebody.tagline = Nothing Then workingmoviedetails.fullmoviebody.tagline = ""
                If workingmoviedetails.fullmoviebody.title = Nothing Then workingmoviedetails.fullmoviebody.title = ""
                If workingmoviedetails.fullmoviebody.top250 = Nothing Then workingmoviedetails.fullmoviebody.top250 = ""
                If workingmoviedetails.fullmoviebody.trailer = Nothing Then workingmoviedetails.fullmoviebody.trailer = ""
                If workingmoviedetails.fullmoviebody.votes = Nothing Then workingmoviedetails.fullmoviebody.votes = ""
                If workingmoviedetails.fullmoviebody.year = Nothing Then workingmoviedetails.fullmoviebody.year = ""


                titletxt.Items.Clear()
                titletxt.Items.Add(workingmoviedetails.fullmoviebody.title)
                For Each title In workingmoviedetails.alternativetitles
                    titletxt.Items.Add(title)
                Next
                titletxt.Text = workingmoviedetails.fullmoviebody.title '& " (" & workingmoviedetails.fullmoviebody.year & ")"
                TextBox3.Text = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                TextBox7.Text = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                If workingmoviedetails.fullmoviebody.sortorder = "" Then workingmoviedetails.fullmoviebody.sortorder = workingmoviedetails.fullmoviebody.title
                TextBox34.Text = workingmoviedetails.fullmoviebody.sortorder
                outlinetxt.Text = workingmoviedetails.fullmoviebody.outline
                plottxt.Text = workingmoviedetails.fullmoviebody.plot
                taglinetxt.Text = workingmoviedetails.fullmoviebody.tagline
                genretxt.Text = workingmoviedetails.fullmoviebody.genre
                creditstxt.Text = workingmoviedetails.fullmoviebody.credits
                directortxt.Text = workingmoviedetails.fullmoviebody.director
                studiotxt.Text = workingmoviedetails.fullmoviebody.studio
                pathtxt.Text = workingmovie.fullpathandfilename
                ratingtxt.Text = workingmoviedetails.fullmoviebody.rating
                runtimetxt.Text = workingmoviedetails.fullmoviebody.runtime
                votestxt.Text = workingmoviedetails.fullmoviebody.votes
                certtxt.Text = workingmoviedetails.fullmoviebody.mpaa

                workingmoviedetails.fileinfo.fullpathandfilename = workingmovie.fullpathandfilename
                workingmoviedetails.fileinfo.filename = IO.Path.GetFileName(workingmovie.fullpathandfilename)
                workingmoviedetails.fileinfo.path = IO.Path.GetFullPath(workingmovie.fullpathandfilename)
                workingmoviedetails.fileinfo.foldername = workingmovie.foldername
                workingmoviedetails.fileinfo.posterpath = filefunction.getposterpath(workingmovie.fullpathandfilename)
                workingmoviedetails.fileinfo.fanartpath = filefunction.getfanartpath(workingmovie.fullpathandfilename)



                tempstring = filefunction.getstackname(workingmoviedetails.fileinfo.filename, workingmoviedetails.fileinfo.fullpathandfilename)
                If tempstring = "na" Then
                    tempstring = filefunction.cleanfilename(workingmoviedetails.fileinfo.filename)
                End If
                workingmoviedetails.fileinfo.trailerpath = IO.Path.Combine(workingmoviedetails.fileinfo.path.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.path), ""), tempstring & "-trailer.flv")
                Button3.Visible = False
                If IO.File.Exists(workingmoviedetails.fileinfo.trailerpath) Then
                    Button3.Visible = True
                    Button3.Text = "Play Trailer"
                Else
                    If workingmoviedetails.fullmoviebody.trailer <> "" Then
                        Button3.Text = "Download Trailer"
                        Button3.Visible = True
                    End If
                End If







                If workingmoviedetails.fileinfo.posterpath <> Nothing Then
                    Try
                        If IO.File.Exists(workingmoviedetails.fileinfo.posterpath) Then
                        Else
                            If IO.File.Exists(workingmoviedetails.fileinfo.posterpath.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.fanartpath), "folder.jpg")) Then
                                workingmoviedetails.fileinfo.posterpath = workingmoviedetails.fileinfo.posterpath.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.posterpath), "folder.jpg")
                            End If
                        End If
                    Catch ex As Exception
                    End Try
                End If
                If workingmoviedetails.fileinfo.posterpath <> Nothing Then
                    Try
                        If IO.File.Exists(workingmoviedetails.fileinfo.posterpath) Then
                            Dim OriginalImage As New Bitmap(workingmoviedetails.fileinfo.posterpath)
                            Dim Image2 As New Bitmap(OriginalImage)
                            OriginalImage.Dispose()
                            PictureBox3.Image = Image2 '7 - 2
                            moviethumb.Image = Image2 'picturebox3
                            Label19.Text = Image2.Width.ToString & " x " & Image2.Height.ToString
                        Else
                            moviethumb.ImageLocation = defaultposter 'picturebox3
                            PictureBox3.ImageLocation = defaultposter '7 - 2
                        End If
                    Catch ex As Exception

                    End Try
                End If
                If workingmoviedetails.fileinfo.fanartpath <> Nothing Then
                    Try
                        If IO.File.Exists(workingmoviedetails.fileinfo.fanartpath) Then
                            Dim OriginalImage As New Bitmap(workingmoviedetails.fileinfo.fanartpath)
                            Dim Image2 As New Bitmap(OriginalImage)
                            OriginalImage.Dispose()
                            PictureBox2.Image = Image2 'moviethumb - 3
                            PictureBox7.Image = Image2 '2
                            Label16.Text = PictureBox2.Image.Width
                            Label17.Text = PictureBox2.Image.Height
                        Else
                            Label16.Text = ""
                            Label17.Text = ""
                            PictureBox2.ImageLocation = defaultfanart 'moviethumb - 3
                            PictureBox7.ImageLocation = defaultfanart '2
                        End If
                    Catch
                    End Try
                End If

                If Convert.ToInt32(workingmoviedetails.fullmoviebody.playcount) > 0 Then
                    Button13.Text = "&Watched"
                    Button13.BackColor = Color.LawnGreen
                    Button13.Refresh()
                Else
                    Button13.Text = "Un&watched"
                    Button13.BackColor = Color.Red
                    Button13.Refresh()
                End If

                For Each actor In workingmoviedetails.listactors
                    If actor.actorname <> Nothing Then actorcb.Items.Add(actor.actorname)
                Next
                Try
                    actorcb.SelectedIndex = 0
                Catch
                End Try

                If workingmoviedetails.fullmoviebody.movieset <> Nothing Then
                    Dim add As Boolean = True
                    For Each mset In userprefs.moviesets
                        If mset = workingmoviedetails.fullmoviebody.movieset Then
                            add = False
                        End If
                    Next
                    If add = True Then
                        userprefs.moviesets.Add(workingmoviedetails.fullmoviebody.movieset)
                        ComboBox3.Items.Add(workingmoviedetails.fullmoviebody.movieset)
                    End If
                    For f = 0 To ComboBox3.Items.Count - 1
                        If ComboBox3.Items(f) = workingmoviedetails.fullmoviebody.movieset Then
                            ComboBox3.SelectedIndex = f
                            Exit For
                        End If
                    Next
                Else
                    If ComboBox3.Items.Count = 0 Then
                        If userprefs.moviesets.Count > 0 Then
                            For Each mset In userprefs.moviesets
                                ComboBox3.Items.Add(mset)
                            Next
                        End If
                    End If
                    If ComboBox3.Items.Count = 0 Then
                        ComboBox3.Items.Add("None")
                    End If
                    If ComboBox3.Items(0) <> "None" Then
                        ComboBox3.Items.Insert(0, "None")
                    End If
                    ComboBox3.SelectedIndex = 0
                End If

                pathtxt.Text = workingmovie.fullpathandfilename


            End If



            If ratingtxt.Text.IndexOf("/10") <> -1 Then
                ratingtxt.Text = ratingtxt.Text.Replace("/10", "")
                workingmoviedetails.fullmoviebody.rating = ratingtxt.Text
            End If
        Catch
        End Try

    End Sub

    Private Function checkvalidmediafile(ByVal fullpathandfilename As String) As Boolean
        Dim validfile As Boolean = True
        Dim tempint2 As Integer
        Dim tempstring As String

        'if the file is a .vob then check it is not part of a dvd folder (Stop dvdfolders vobs getting seperate nfos)
        If IO.Path.GetExtension(fullpathandfilename) = ".vob" Then
            If IO.File.Exists(fullpathandfilename.Replace(System.IO.Path.GetFileName(fullpathandfilename), "VIDEO_TS.IFO")) Then
                validfile = False
            End If
        End If

        Dim filename2 As String = System.IO.Path.GetFileName(fullpathandfilename).ToLower
        If filename2.IndexOf("cd2") <> -1 Then validfile = False
        If filename2.IndexOf("cd3") <> -1 Then validfile = False
        If filename2.IndexOf("cd4") <> -1 Then validfile = False
        If filename2.IndexOf("cd5") <> -1 Then validfile = False
        If filename2.IndexOf("cd.2") <> -1 Then validfile = False
        If filename2.IndexOf("cd.3") <> -1 Then validfile = False
        If filename2.IndexOf("cd.4") <> -1 Then validfile = False
        If filename2.IndexOf("cd.5") <> -1 Then validfile = False
        If filename2.IndexOf("cd_2") <> -1 Then validfile = False
        If filename2.IndexOf("cd_3") <> -1 Then validfile = False
        If filename2.IndexOf("cd_4") <> -1 Then validfile = False
        If filename2.IndexOf("cd_5") <> -1 Then validfile = False
        If filename2.IndexOf("dvd2") <> -1 Then validfile = False
        If filename2.IndexOf("dvd3") <> -1 Then validfile = False
        If filename2.IndexOf("dvd4") <> -1 Then validfile = False
        If filename2.IndexOf("dvd5") <> -1 Then validfile = False
        If filename2.IndexOf("dvd.2") <> -1 Then validfile = False
        If filename2.IndexOf("dvd.3") <> -1 Then validfile = False
        If filename2.IndexOf("dvd.4") <> -1 Then validfile = False
        If filename2.IndexOf("dvd.5") <> -1 Then validfile = False
        If filename2.IndexOf("dvd_2") <> -1 Then validfile = False
        If filename2.IndexOf("dvd_3") <> -1 Then validfile = False
        If filename2.IndexOf("dvd_4") <> -1 Then validfile = False
        If filename2.IndexOf("dvd_5") <> -1 Then validfile = False
        If filename2.IndexOf("part2") <> -1 Then validfile = False
        If filename2.IndexOf("part3") <> -1 Then validfile = False
        If filename2.IndexOf("part4") <> -1 Then validfile = False
        If filename2.IndexOf("part5") <> -1 Then validfile = False
        If filename2.IndexOf("part.2") <> -1 Then validfile = False
        If filename2.IndexOf("part.3") <> -1 Then validfile = False
        If filename2.IndexOf("part.4") <> -1 Then validfile = False
        If filename2.IndexOf("part.5") <> -1 Then validfile = False
        If filename2.IndexOf("part_2") <> -1 Then validfile = False
        If filename2.IndexOf("part_3") <> -1 Then validfile = False
        If filename2.IndexOf("part_4") <> -1 Then validfile = False
        If filename2.IndexOf("part_5") <> -1 Then validfile = False
        If filename2.IndexOf("disk2") <> -1 Then validfile = False
        If filename2.IndexOf("disk3") <> -1 Then validfile = False
        If filename2.IndexOf("disk4") <> -1 Then validfile = False
        If filename2.IndexOf("disk5") <> -1 Then validfile = False
        If filename2.IndexOf("disk.2") <> -1 Then validfile = False
        If filename2.IndexOf("disk.3") <> -1 Then validfile = False
        If filename2.IndexOf("disk.4") <> -1 Then validfile = False
        If filename2.IndexOf("disk.5") <> -1 Then validfile = False
        If filename2.IndexOf("disk_2") <> -1 Then validfile = False
        If filename2.IndexOf("disk_3") <> -1 Then validfile = False
        If filename2.IndexOf("disk_4") <> -1 Then validfile = False
        If filename2.IndexOf("disk_5") <> -1 Then validfile = False
        If filename2.IndexOf("cd 2") <> -1 Then validfile = False
        If filename2.IndexOf("cd 3") <> -1 Then validfile = False
        If filename2.IndexOf("cd 4") <> -1 Then validfile = False
        If filename2.IndexOf("cd 5") <> -1 Then validfile = False
        If filename2.IndexOf("cd-2") <> -1 Then validfile = False
        If filename2.IndexOf("cd-3") <> -1 Then validfile = False
        If filename2.IndexOf("cd-4") <> -1 Then validfile = False
        If filename2.IndexOf("cd-5") <> -1 Then validfile = False
        If filename2.IndexOf("dvd 2") <> -1 Then validfile = False
        If filename2.IndexOf("dvd 3") <> -1 Then validfile = False
        If filename2.IndexOf("dvd 4") <> -1 Then validfile = False
        If filename2.IndexOf("dvd 5") <> -1 Then validfile = False
        If filename2.IndexOf("dvd-2") <> -1 Then validfile = False
        If filename2.IndexOf("dvd-3") <> -1 Then validfile = False
        If filename2.IndexOf("dvd-4") <> -1 Then validfile = False
        If filename2.IndexOf("dvd-5") <> -1 Then validfile = False
        If filename2.IndexOf("part-2") <> -1 Then validfile = False
        If filename2.IndexOf("part-3") <> -1 Then validfile = False
        If filename2.IndexOf("part-4") <> -1 Then validfile = False
        If filename2.IndexOf("part-5") <> -1 Then validfile = False
        If filename2.IndexOf("part 2") <> -1 Then validfile = False
        If filename2.IndexOf("part 3") <> -1 Then validfile = False
        If filename2.IndexOf("part 4") <> -1 Then validfile = False
        If filename2.IndexOf("part 5") <> -1 Then validfile = False
        If filename2.IndexOf("disk 2") <> -1 Then validfile = False
        If filename2.IndexOf("disk 3") <> -1 Then validfile = False
        If filename2.IndexOf("disk 4") <> -1 Then validfile = False
        If filename2.IndexOf("disk 5") <> -1 Then validfile = False
        If filename2.IndexOf("disk-2") <> -1 Then validfile = False
        If filename2.IndexOf("disk-3") <> -1 Then validfile = False
        If filename2.IndexOf("disk-4") <> -1 Then validfile = False
        If filename2.IndexOf("disk-5") <> -1 Then validfile = False
        If filename2.IndexOf("pt 2") <> -1 Then validfile = False
        If filename2.IndexOf("pt 3") <> -1 Then validfile = False
        If filename2.IndexOf("pt 4") <> -1 Then validfile = False
        If filename2.IndexOf("pt 5") <> -1 Then validfile = False
        If filename2.IndexOf("pt-2") <> -1 Then validfile = False
        If filename2.IndexOf("pt-3") <> -1 Then validfile = False
        If filename2.IndexOf("pt-4") <> -1 Then validfile = False
        If filename2.IndexOf("pt-5") <> -1 Then validfile = False
        If filename2.IndexOf("pt2") <> -1 Then validfile = False
        If filename2.IndexOf("pt3") <> -1 Then validfile = False
        If filename2.IndexOf("pt4") <> -1 Then validfile = False
        If filename2.IndexOf("pt5") <> -1 Then validfile = False
        If filename2.IndexOf("pt_2") <> -1 Then validfile = False
        If filename2.IndexOf("pt_3") <> -1 Then validfile = False
        If filename2.IndexOf("pt_4") <> -1 Then validfile = False
        If filename2.IndexOf("pt_5") <> -1 Then validfile = False
        If filename2.IndexOf("pt.2") <> -1 Then validfile = False
        If filename2.IndexOf("pt.3") <> -1 Then validfile = False
        If filename2.IndexOf("pt.4") <> -1 Then validfile = False
        If filename2.IndexOf("pt.5") <> -1 Then validfile = False
        If filename2.IndexOf("-trailer") <> -1 Then validfile = False
        If filename2.IndexOf(".trailer") <> -1 Then validfile = False
        If filename2.IndexOf("_trailer") <> -1 Then validfile = False
        If filename2.IndexOf("sample") <> -1 And filename2.IndexOf("people") = -1 Then validfile = False


        'check for movies ending a,b,c, etc (moviea, movieb) for multipart. movieb is multipart if moviea exists
        Dim extension As String
        Dim tempname As String
        extension = System.IO.Path.GetExtension(fullpathandfilename)
        tempname = fullpathandfilename.Replace(extension, "")
        If tempname.Substring(tempname.Length - 1) = "b" Or tempname.Substring(tempname.Length - 1) = "c" Or tempname.Substring(tempname.Length - 1) = "d" Or tempname.Substring(tempname.Length - 1) = "e" Or tempname.Substring(tempname.Length - 1) = "B" Or tempname.Substring(tempname.Length - 1) = "C" Or tempname.Substring(tempname.Length - 1) = "D" Or tempname.Substring(tempname.Length - 1) = "E" Then
            tempname = fullpathandfilename.Substring(0, fullpathandfilename.Length - (1 + extension.Length)) & "a" & extension
            If System.IO.File.Exists(tempname) Then validfile = False
        End If

        'now need to deal with multipart rar files
        Dim tempmovie2 As String = fullpathandfilename.Replace(".nfo", ".rar")
        Dim tempmovie As String
        If IO.File.Exists(tempmovie2) = True Then
            If IO.File.Exists(fullpathandfilename) = False Then
                Dim rarname As String = tempmovie2
                Dim SizeOfFile As Integer
                tempint2 = Convert.ToInt32(userprefs.rarsize) * 1048576
                SizeOfFile = FileLen(rarname)
                If SizeOfFile > tempint2 Then
                    Dim mat As Match
                    mat = Regex.Match(rarname, "\.part[0-9][0-9]?[0-9]?[0-9]?.rar")
                    If mat.Success = True Then
                        rarname = mat.Value
                        If rarname.ToLower.IndexOf(".part1.rar") <> -1 Or rarname.ToLower.IndexOf(".part01.rar") <> -1 Or rarname.ToLower.IndexOf(".part001.rar") <> -1 Or rarname.ToLower.IndexOf(".part0001.rar") <> -1 Then
                            Dim stackrarexists As Boolean = False
                            rarname = fullpathandfilename.Replace(".nfo", ".rar")
                            If rarname.ToLower.IndexOf(".part1.rar") <> -1 Then
                                rarname = rarname.Replace(".part1.rar", ".nfo")
                                If IO.File.Exists(rarname) Then
                                    stackrarexists = True
                                    tempmovie = rarname
                                Else
                                    stackrarexists = False
                                    tempmovie = rarname
                                End If
                            End If
                            If rarname.ToLower.IndexOf(".part01.rar") <> -1 Then
                                rarname = rarname.Replace(".part01.rar", ".nfo")
                                If IO.File.Exists(rarname) Then
                                    stackrarexists = True
                                    tempmovie = rarname
                                Else
                                    stackrarexists = False
                                    tempmovie = rarname
                                End If
                            End If
                            If rarname.ToLower.IndexOf(".part001.rar") <> -1 Then
                                rarname = rarname.Replace(".part001.rar", ".nfo")
                                If IO.File.Exists(rarname) Then
                                    tempmovie = rarname
                                    stackrarexists = True
                                Else
                                    stackrarexists = False
                                    tempmovie = rarname
                                End If
                            End If
                            If rarname.ToLower.IndexOf(".part0001.rar") <> -1 Then
                                rarname = rarname.Replace(".part0001.rar", ".nfo")
                                If IO.File.Exists(rarname) Then
                                    tempmovie = rarname
                                    stackrarexists = True
                                Else
                                    stackrarexists = False
                                    tempmovie = rarname
                                End If
                            End If
                            If stackrarexists = True Then
                                Dim allok As Boolean = False
                                Try
                                    Dim filechck As IO.StreamReader = IO.File.OpenText(tempmovie)
                                    Do

                                        tempstring = filechck.ReadLine
                                        If tempstring = Nothing Then Exit Do

                                        If tempstring.IndexOf("<movie>") <> -1 Then
                                            allok = True
                                            Exit Do
                                        End If
                                    Loop Until tempstring.IndexOf("</movie>") <> -1
                                    filechck.Close()
                                Catch
                                Finally
                                End Try
                                If allok = True Then
                                    validfile = False
                                End If
                            End If
                        Else
                            validfile = False
                        End If
                    End If
                Else
                    validfile = False
                End If
            End If
        End If

        'rename fullpathandfilename to that of the nfo file
        fullpathandfilename = fullpathandfilename.Replace(fullpathandfilename.Substring(fullpathandfilename.LastIndexOf("."), fullpathandfilename.Length - fullpathandfilename.LastIndexOf(".")), ".nfo")

        'check for both variations of the filename
        Dim nfopaths(1) As String
        nfopaths(0) = fullpathandfilename
        nfopaths(1) = fullpathandfilename.Replace(IO.Path.GetFileName(fullpathandfilename), "movie.nfo")
        'check if the file exists
        For f = 0 To 1
            If IO.File.Exists(nfopaths(f)) Then
                'if it does check if it is a valid xbmc nfo, if it is not then move it or delete it according to prefs
                Try
                    Dim filechck As IO.StreamReader = IO.File.OpenText(nfopaths(f))
                    tempstring = filechck.ReadToEnd
                    filechck.Close()
                    If tempstring.IndexOf("<movie>") = -1 And tempstring.IndexOf("</movie>") = -1 Then
                        If userprefs.renamenfofiles = True Then
                            Dim fi As New FileInfo(nfopaths(f))
                            Dim newpath As String = nfopaths(f).Replace(nfopaths(f).Substring(nfopaths(f).LastIndexOf("."), nfopaths(f).Length - nfopaths(f).LastIndexOf(".")), ".info")
                            fi.MoveTo(newpath)
                        End If
                    Else
                        validfile = False
                    End If


                Catch

                Finally
                End Try
            End If
        Next
        Return validfile
    End Function

    Private Sub Listmoviefiles(ByVal lst As String, ByVal pattern As String, ByVal dir_info As System.IO.DirectoryInfo)
        Dim moviepattern As String = pattern
        Monitor.Enter(Me)
        Dim tempint2 As Integer
        Dim tempstring As String
        Try
            Dim fs_infos() As System.IO.FileInfo = dir_info.GetFiles(moviepattern)
            Dim tempmovie As String
            Dim dofilter As Boolean = False
            Dim dvdfiles As Boolean
            For Each fs_info As System.IO.FileInfo In fs_infos

                Dim newmoviedetails As NewMovie
                Dim title As String
                Dim remove As Boolean = False
                dvdfiles = False
                dofilter = False
                tempmovie = fs_info.FullName.Replace(System.IO.Path.GetExtension(fs_info.FullName), ".nfo")
                newmoviedetails.mediapathandfilename = fs_info.FullName
                newmoviedetails.nfopathandfilename = tempmovie
                Dim basicmoviename As String = tempmovie.Replace(IO.Path.GetFileName(tempmovie), "movie.nfo")
                'If IO.File.Exists(basicmoviename) Then
                '    remove = True
                'End If
                basicmoviename = filefunction.getstackname(IO.Path.GetFileName(fs_info.FullName), fs_info.FullName)
                Dim otherformat As String = tempmovie.Replace(IO.Path.GetFileName(tempmovie), basicmoviename & ".nfo")
                If IO.File.Exists(otherformat) Then
                    Dim allok2 As Boolean = False
                    Try
                        Dim filechck As IO.StreamReader = IO.File.OpenText(otherformat)
                        Do

                            tempstring = filechck.ReadLine
                            If tempstring = Nothing Then Exit Do

                            If tempstring.IndexOf("<movie>") <> -1 Then
                                allok2 = True
                                Exit Do
                            End If
                        Loop Until tempstring.IndexOf("</movie>") <> -1
                        filechck.Close()
                    Catch
                    End Try
                    If allok2 = True Then
                        remove = True
                    End If
                End If

                If moviepattern = "*.vob" Then
                    Dim lonevobfile As String = tempmovie.Replace(System.IO.Path.GetFileName(tempmovie), "VIDEO_TS.IFO")
                    dvdfiles = System.IO.File.Exists(lonevobfile)
                End If

                If dvdfiles = False Then
                    If IO.File.Exists(tempmovie) = True Then


                        Dim allok As Boolean = False
                        Try
                            Dim filechck As IO.StreamReader = IO.File.OpenText(tempmovie)
                            Do

                                tempstring = filechck.ReadLine
                                If tempstring = Nothing Then Exit Do

                                If tempstring.IndexOf("<movie>") <> -1 Then
                                    allok = True
                                    Exit Do
                                End If
                            Loop Until tempstring.IndexOf("</movie>") <> -1
                            filechck.Close()
                        Catch
                        Finally
                        End Try

                        If allok = False Then
                            dofilter = True
                            title = fs_info.FullName
                        End If
                    Else
                        dofilter = True
                        title = fs_info.FullName
                    End If


                    If dofilter = True Then
                        If title <> Nothing Then
                            Dim searchboolean As Boolean = False
                            Dim filename2 As String = System.IO.Path.GetFileName(title).ToLower
                            If filename2.IndexOf("cd2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd.2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd.3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd.4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd.5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd_9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd5") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd5", "dvd1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd9") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd9", "dvd1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd.2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd.3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd.4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd.5") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd.5", "dvd.1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd.6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd.7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd.8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd.9") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd.9", "dvd.1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd_2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd_3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd_4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd_5") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd_5", "dvd_1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd_6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd_7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd_8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd_9") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd_9", "dvd_1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("part2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part.2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part.3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part.4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part.5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part_9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk.9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk_9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd 9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("cd-9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 5") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd 5", "dvd 1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd 6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd 9") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd 9", "dvd 1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd-2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd-3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd-4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd-5") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd-5", "dvd-1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("dvd-6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd-7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd-8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("dvd-9") <> -1 Then
                                Dim tempfile As String = title.Replace("dvd-9", "dvd-1")
                                If IO.File.Exists(tempfile) Then
                                    searchboolean = True
                                End If
                            End If
                            If filename2.IndexOf("part-2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part-9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("part 9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk 9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("disk-9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt 9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt-9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt_9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.2") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.3") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.4") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.5") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.6") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.7") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.8") <> -1 Then searchboolean = True
                            If filename2.IndexOf("pt.9") <> -1 Then searchboolean = True
                            If filename2.IndexOf("-trailer") <> -1 Then searchboolean = True
                            If filename2.IndexOf(".trailer") <> -1 Then searchboolean = True
                            If filename2.IndexOf("_trailer") <> -1 Then searchboolean = True
                            If filename2.IndexOf("sample") <> -1 And filename2.IndexOf("people") = -1 Then searchboolean = True

                            Dim tempname As String
                            Dim extension As String
                            extension = System.IO.Path.GetExtension(filename2)
                            tempname = filename2.Replace(extension, "")
                            If tempname.Substring(tempname.Length - 1) = "b" Or tempname.Substring(tempname.Length - 1) = "c" Or tempname.Substring(tempname.Length - 1) = "d" Or tempname.Substring(tempname.Length - 1) = "e" Or tempname.Substring(tempname.Length - 1) = "B" Or tempname.Substring(tempname.Length - 1) = "C" Or tempname.Substring(tempname.Length - 1) = "D" Or tempname.Substring(tempname.Length - 1) = "E" Then
                                'tempname = tempname.Substring(tempname.Length - 1)
                                tempname = newmoviedetails.nfopathandfilename.Substring(0, newmoviedetails.nfopathandfilename.Length - (1 + extension.Length)) & "a" & extension
                                Dim newtempboolean As Boolean = False
                                newtempboolean = System.IO.File.Exists(tempname)
                                If newtempboolean = True Then searchboolean = True
                                If newtempboolean = False Then
                                End If
                            End If
                            If searchboolean = True Then
                                remove = True
                            End If
                        End If
                    End If
                End If


                Dim tempmovie2 As String = fs_info.FullName
                If IO.Path.GetExtension(tempmovie2).ToLower = ".rar" Then
                    If IO.File.Exists(tempmovie2) = True Then
                        If IO.File.Exists(tempmovie) = False Then
                            Dim rarname As String = tempmovie2
                            Dim SizeOfFile As Integer
                            tempint2 = Convert.ToInt32(userprefs.rarsize) * 1048576
                            SizeOfFile = FileLen(rarname)
                            If SizeOfFile > tempint2 Then
                                Dim mat As Match
                                mat = Regex.Match(rarname, "\.part[0-9][0-9]?[0-9]?[0-9]?.rar")
                                If mat.Success = True Then
                                    rarname = mat.Value
                                    If rarname.ToLower.IndexOf(".part1.rar") <> -1 Or rarname.ToLower.IndexOf(".part01.rar") <> -1 Or rarname.ToLower.IndexOf(".part001.rar") <> -1 Or rarname.ToLower.IndexOf(".part0001.rar") <> -1 Then
                                        Dim stackrarexists As Boolean = False
                                        rarname = tempmovie.Replace(".nfo", ".rar")
                                        If rarname.ToLower.IndexOf(".part1.rar") <> -1 Then
                                            rarname = rarname.Replace(".part1.rar", ".nfo")
                                            If IO.File.Exists(rarname) Then
                                                stackrarexists = True
                                                tempmovie = rarname
                                            Else
                                                stackrarexists = False
                                                tempmovie = rarname
                                            End If
                                        End If
                                        If rarname.ToLower.IndexOf(".part01.rar") <> -1 Then
                                            rarname = rarname.Replace(".part01.rar", ".nfo")
                                            If IO.File.Exists(rarname) Then
                                                stackrarexists = True
                                                tempmovie = rarname
                                            Else
                                                stackrarexists = False
                                                tempmovie = rarname
                                            End If
                                        End If
                                        If rarname.ToLower.IndexOf(".part001.rar") <> -1 Then
                                            rarname = rarname.Replace(".part001.rar", ".nfo")
                                            If IO.File.Exists(rarname) Then
                                                tempmovie = rarname
                                                stackrarexists = True
                                            Else
                                                stackrarexists = False
                                                tempmovie = rarname
                                            End If
                                        End If
                                        If rarname.ToLower.IndexOf(".part0001.rar") <> -1 Then
                                            rarname = rarname.Replace(".part0001.rar", ".nfo")
                                            If IO.File.Exists(rarname) Then
                                                tempmovie = rarname
                                                stackrarexists = True
                                            Else
                                                stackrarexists = False
                                                tempmovie = rarname
                                            End If
                                        End If
                                        If stackrarexists = True Then
                                            Dim allok As Boolean = False
                                            Try
                                                Dim filechck As IO.StreamReader = IO.File.OpenText(tempmovie)
                                                Do

                                                    tempstring = filechck.ReadLine
                                                    If tempstring = Nothing Then Exit Do

                                                    If tempstring.IndexOf("<movie>") <> -1 Then
                                                        allok = True
                                                        Exit Do
                                                    End If
                                                Loop Until tempstring.IndexOf("</movie>") <> -1
                                                filechck.Close()
                                            Catch
                                            Finally
                                            End Try
                                            If allok = True Then
                                                remove = True
                                            Else
                                                title = tempmovie
                                            End If
                                        Else
                                            title = tempmovie
                                        End If
                                    Else
                                        remove = True
                                    End If
                                Else
                                    'remove = True
                                End If
                            Else
                                remove = True
                            End If
                        End If
                    End If
                End If
                If remove = True Then
                    remove = False
                    title = Nothing
                    newmoviedetails.mediapathandfilename = Nothing
                    newmoviedetails.nfopath = Nothing
                    newmoviedetails.nfopathandfilename = Nothing
                    newmoviedetails.title = Nothing
                Else
                    If title <> Nothing Then

                        Dim extension As String
                        Dim filename2 As String
                        newmoviedetails.nfopathandfilename = title
                        extension = System.IO.Path.GetExtension(title)
                        filename2 = System.IO.Path.GetFileName(title)
                        newmoviedetails.nfopath = title.Replace(filename2, "")
                        newmoviedetails.title = filename2.Replace(extension, "")
                        If extension <> ".IFO" And extension <> "ttt" Then
                            'newmoviedetails.mediapathandfilename = title
                            newmoviedetails.nfopathandfilename = newmoviedetails.nfopathandfilename.Replace(extension, ".nfo")
                        End If
                        'If dvdfolder = True Then
                        If extension.ToLower = ".ifo" Then
                            newmoviedetails.mediapathandfilename = title
                            newmoviedetails.nfopathandfilename = newmoviedetails.mediapathandfilename.Replace(extension, ".nfo")
                            If IO.File.Exists(newmoviedetails.nfopathandfilename) = False Then
                                Dim paths() As String
                                If newmoviedetails.nfopathandfilename.IndexOf("\") <> -1 Then
                                    paths = newmoviedetails.nfopathandfilename.Split("\")
                                ElseIf newmoviedetails.nfopathandfilename.IndexOf("/") <> -1 Then
                                    paths = newmoviedetails.nfopathandfilename.Split("/")
                                End If
                                Dim depthecount As Integer
                                depthecount = paths.GetUpperBound(0)
                                newmoviedetails.title = Nothing

                                For h = depthecount To 0 Step -1
                                    Dim temppath As String
                                    temppath = paths(h)
                                    paths(h) = paths(h).ToLower
                                    If paths(h).IndexOf("video_ts") = -1 Then
                                        newmoviedetails.title = temppath
                                    End If
                                    If newmoviedetails.title <> Nothing Then Exit For
                                Next
                            Else
                                newmoviedetails.nfopathandfilename = Nothing
                                newmoviedetails.title = Nothing
                            End If
                        End If

                        'End If




                        'filenamekeeper = ""
                        If userprefs.usefoldernames = True And newmoviedetails.title <> Nothing Then
                            Dim tempstring4 As String
                            tempstring4 = newmoviedetails.nfopathandfilename.ToLower
                            If tempstring4.IndexOf("video_ts") = -1 Then
                                newmoviedetails.title = newmoviedetails.nfopath.Substring(0, newmoviedetails.nfopath.Length - 1)
                                newmoviedetails.title = newmoviedetails.title.Substring(newmoviedetails.title.LastIndexOf("\") + 1, newmoviedetails.title.Length - newmoviedetails.title.LastIndexOf("\") - 1)
                                newmoviedetails.title = filefunction.getlastfolder(newmoviedetails.nfopathandfilename)
                            End If
                        End If
                        Dim alreadyadded As Boolean = False
                        For Each newmovie In newmovielist
                            If newmovie.nfopathandfilename = newmoviedetails.nfopathandfilename Then
                                alreadyadded = True
                                Exit For
                            End If
                        Next
                        If alreadyadded = False Then
                            newmovielist.Add(newmoviedetails)
                        Else
                            alreadyadded = False
                        End If
                    End If
                End If
                Application.DoEvents()
            Next fs_info
            fs_infos = Nothing


        Catch
        Finally
            Monitor.Exit(Me)
        End Try

    End Sub

    Private Sub scanfornewmovies()
        If Not BckWrkScnMovies.IsBusy Then
            If scrapeandquit = False Then
                ToolStripStatusLabel1.Visible = True
                ToolStripProgressBar1.Visible = True
            End If
            BckWrkScnMovies.RunWorkerAsync()
        Else
            MsgBox("The Movie Scraper is Already Running")
        End If
    End Sub

#Region "Auxiliary Procedures for Multithreading of Rescraping Movies Procedure Below"

    Private Sub XBMC_Movie_Scraping_Initialization()
        Dim NewMoviesFolders As List(Of String)
        Dim Extensions(100) As String
        Dim ExtensionCount As Integer = 0
        Dim Progress As Integer = 0
        Dim ProgressText As String = ""
        Dim MoviePattern As String = ""
        Dim DirPath As String = ""
        Dim DirInfo As String = ""
        Dim TempInt As Integer = 0
        Dim Extension As String = ""
        Dim Filename2 As String = ""
        Dim TempString As String = ""
        Dim TempLabel As String = ""
        Dim TempProgressBarValue As Integer = 0

        TempProgressBarValue = ToolStripProgressBar1.Maximum
        TempLabel = ToolStripStatusLabel6.Text

        Extensions(1) = "*.avi"
        Extensions(2) = "*.xvid"
        Extensions(3) = "*.divx"
        Extensions(4) = "*.img"
        Extensions(5) = "*.mpg"
        Extensions(6) = "*.mpeg"
        Extensions(7) = "*.mov"
        Extensions(8) = "*.rm"
        Extensions(9) = "*.3gp"
        Extensions(10) = "*.m4v"
        Extensions(11) = "*.wmv"
        Extensions(12) = "*.asf"
        Extensions(13) = "*.mp4"
        Extensions(14) = "*.mkv"
        Extensions(15) = "*.nrg"
        Extensions(16) = "*.iso"
        Extensions(17) = "*.rmvb"
        Extensions(18) = "*.ogm"
        Extensions(19) = "*.bin"
        Extensions(20) = "*.ts"
        Extensions(21) = "*.vob"
        Extensions(22) = "*.m2ts"
        Extensions(23) = "*.rar"
        Extensions(24) = "*.dvr-ms"
        Extensions(25) = "VIDEO_TS.IFO"
        ExtensionCount = 25

        NewMoviesFolders = filefunction.FindAllFolders(moviefolders)
        '--------------------------Begin Search for New Media in Offline Folders
        For Each moviefolder In userprefs.offlinefolders
            Dim hg As New IO.DirectoryInfo(moviefolder)
            If hg.Exists Then
                scraperlog = scraperlog & "found" & hg.FullName.ToString & vbCrLf
                scraperlog = scraperlog & "Checking for subfolders" & vbCrLf
                Dim newlist As List(Of String)
                Try
                    newlist = filefunction.EnumerateDirectory3(moviefolder)
                    For Each subfolder In newlist
                        scraperlog = scraperlog & "Subfolder added :- " & subfolder.ToString & vbCrLf
                        Dim temge22 As String = filefunction.getlastfolder(subfolder & "\whatever") & ".avi"
                        Dim sTempFileName22 As String = IO.Path.Combine(subfolder, temge22)
                        Dim newtemp1 As String = sTempFileName22.Replace(IO.Path.GetExtension(sTempFileName22), ".nfo")
                        If Not IO.File.Exists(newtemp1) Then
                            If Not IO.File.Exists(IO.Path.Combine(subfolder, "tempoffline.ttt")) Then
                                Dim sTempFileName As String = IO.Path.Combine(subfolder, "tempoffline.ttt")
                                Dim fsTemp As New System.IO.FileStream(sTempFileName, IO.FileMode.Create)
                                fsTemp.Close()
                            End If
                            If Not IO.File.Exists(sTempFileName22) Then
                                Dim temge As String = filefunction.getlastfolder(subfolder & "\whatever") & ".avi"
                                Dim sTempFileName2 As String = IO.Path.Combine(subfolder, temge)
                                Dim fsTemp2 As New System.IO.FileStream(sTempFileName2, IO.FileMode.Create)
                                fsTemp2.Close()
                            End If
                            NewMoviesFolders.Add(subfolder)
                        End If
                    Next
                Catch
                End Try
            End If
        Next
        '--------------------------End Search for New Media in Offline Folders
        newmovielist.Clear()
        Dim mediacounter As Integer = newmovielist.Count
        For g = 0 To NewMoviesFolders.Count - 1
            Progress = ((100 / NewMoviesFolders.Count) * g) * 10
            ProgressText = String.Concat("Scanning folder " & g & " of " & NewMoviesFolders.Count)
            ToolStripProgressBar1.Visible = True
            ToolStripProgressBar1.Value = Progress
            ToolStripProgressBar1.ProgressBar.Refresh()
            ToolStripProgressBar1.ProgressBar.PerformStep()
            ToolStripStatusLabel1.Visible = True
            ToolStripStatusLabel1.Text = ProgressText

            For f = 1 To ExtensionCount
                MoviePattern = Extensions(f)

                DirPath = NewMoviesFolders(g)
                Dim Dir_Info As New System.IO.DirectoryInfo(DirPath)
                Listmoviefiles(DirInfo, MoviePattern, Dir_Info)
            Next f
            TempInt = newmovielist.Count - mediacounter
            mediacounter = newmovielist.Count
        Next



        Dim movieyear As String = ""
        Dim newmoviecount As Integer = 0
        newmoviecount = newmovielist.Count.ToString
        scraperlog = scraperlog & vbCrLf & vbCrLf & "Starting Main Scraper Process" & vbCrLf & vbCrLf
        ToolStripProgressBar1.Maximum = newmovielist.Count + 1
        For f = 0 To newmovielist.Count - 1
            Try
                While NovaThread.IsAlive
                    Application.DoEvents()
                End While
            Catch
            End Try
            NewMovieFoundTitle = newmovielist(f).title.ToString
            NewMovieFoundFilename = newmovielist(f).mediapathandfilename.ToString
            NovaThread = New Thread(New ThreadStart(AddressOf TempStartMoviesScraping))
            NovaThread.SetApartmentState(ApartmentState.STA)
            NovaThread.Start()

            ToolStripProgressBar1.Value = f
            ToolStripProgressBar1.ProgressBar.Refresh()
            ToolStripProgressBar1.ProgressBar.PerformStep()
            ToolStripStatusLabel1.Text = "Scraping " & (f + 1).ToString & " of " & newmovielist.Count.ToString
            ToolStripStatusLabel6.Visible = True
            ToolStripStatusLabel6.Text = "Movie Name : " & NewMovieFoundTitle


        Next
        Try
            While NovaThread.IsAlive
                Application.DoEvents()
            End While
        Catch
        End Try
        ToolStripProgressBar1.Visible = False
        ToolStripStatusLabel6.Visible = False
        ToolStripStatusLabel1.Visible = False
        ToolStripProgressBar1.Maximum = TempProgressBarValue
        ToolStripStatusLabel6.Text = TempLabel
    End Sub
    Private Sub TempStartMoviesScraping()
        Dim FullFileContent As String = ""
        Dim Scraper As String = userprefs.XBMC_Scraper
        FullFileContent = Start_XBMC_MoviesScraping(Scraper, NewMovieFoundTitle, NewMovieFoundFilename)
        If FullFileContent.ToLower <> "error" Then
            Dim Teste As Boolean = CreateMovieNfo(filefunction.getfilename(NewMovieFoundFilename), FullFileContent)
            If Teste = True Then AddScrapedMovietoDB(NewMovieFoundFilename)
            ApplyFilters()
            If messbox.Visible = True Then messbox.Close()
            If Me.Cursor = Cursors.WaitCursor Then Me.Cursor = Cursors.Default
        End If
    End Sub
    Private Sub AddScrapedMovietoDB(ByVal Filename As String)
        Dim ExtensionPosition As Integer = Filename.LastIndexOf(".")
        Dim nfoFilename As String = Filename.Remove(ExtensionPosition, (Filename.Length - ExtensionPosition))
        nfoFilename &= ".nfo"
        Dim TempMovieToAdd As New FullMovieDetails
        TempMovieToAdd = nfofunction.loadfullmovienfo(nfoFilename)
        Dim movietoadd As New ComboList

        Dim filecreation As New FileInfo(nfoFilename)
        Dim myDate As Date = filecreation.LastWriteTime
        Try
            movietoadd.filedate = Format(myDate, "yyyyMMddHHmmss").ToString
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try
        movietoadd.createdate = TempMovieToAdd.fileinfo.createdate
        movietoadd.filename = TempMovieToAdd.fileinfo.filename
        movietoadd.foldername = TempMovieToAdd.fileinfo.foldername
        movietoadd.fullpathandfilename = TempMovieToAdd.fileinfo.fullpathandfilename
        movietoadd.genre = TempMovieToAdd.fullmoviebody.genre
        movietoadd.id = TempMovieToAdd.fullmoviebody.imdbid
        movietoadd.missingdata1 = "0"
        If TempMovieToAdd.fullmoviebody.movieset Is Nothing Then
            movietoadd.movieset = ""
        Else
            movietoadd.movieset = TempMovieToAdd.fullmoviebody.movieset
        End If
        movietoadd.outline = TempMovieToAdd.fullmoviebody.outline
        movietoadd.playcount = TempMovieToAdd.fullmoviebody.playcount
        movietoadd.rating = TempMovieToAdd.fullmoviebody.rating
        movietoadd.runtime = TempMovieToAdd.fullmoviebody.runtime
        movietoadd.sortorder = TempMovieToAdd.fullmoviebody.sortorder
        movietoadd.title = TempMovieToAdd.fullmoviebody.title
        movietoadd.titleandyear = TempMovieToAdd.fullmoviebody.title & " (" & TempMovieToAdd.fullmoviebody.year & ")"
        movietoadd.top250 = TempMovieToAdd.fullmoviebody.top250
        movietoadd.year = TempMovieToAdd.fullmoviebody.year
        fullmovielist.Add(movietoadd)

    End Sub

#End Region


    Private Sub startnewmovies()
        Dim dft As New List(Of String)
        Dim moviepattern As String
        Dim tempint As Integer
        Dim tempstring As String
        Dim errorcounter As Integer = 0
        Dim trailer As String
        Dim newmoviecount As Integer
        Dim dirinfo As String
        newmovielist.Clear()
        Dim newmoviefolders As New List(Of String)
        Dim progress As Integer
        progress = 0
        Dim progresstext As String
        scraperlog = ""
        Dim dirpath As String


        If userprefs.movies_useXBMC_Scraper = True Then
           XBMC_Movie_Scraping_Initialization()
        Else

            If BckWrkScnMovies.CancellationPending Then
                scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                Exit Sub
            End If


            progresstext = String.Concat("Scanning Folders For New Movies")
            BckWrkScnMovies.ReportProgress(progress, progresstext)


            scraperlog = "Starting Folder Scan" & vbCrLf & vbCrLf

            Dim extension As String
            Dim filename2 As String
            Dim extensions(100) As String
            Dim extensioncount As Integer
            extensions(1) = "*.avi"
            extensions(2) = "*.xvid"
            extensions(3) = "*.divx"
            extensions(4) = "*.img"
            extensions(5) = "*.mpg"
            extensions(6) = "*.mpeg"
            extensions(7) = "*.mov"
            extensions(8) = "*.rm"
            extensions(9) = "*.3gp"
            extensions(10) = "*.m4v"
            extensions(11) = "*.wmv"
            extensions(12) = "*.asf"
            extensions(13) = "*.mp4"
            extensions(14) = "*.mkv"
            extensions(15) = "*.nrg"
            extensions(16) = "*.iso"
            extensions(17) = "*.rmvb"
            extensions(18) = "*.ogm"
            extensions(19) = "*.bin"
            extensions(20) = "*.ts"
            extensions(21) = "*.vob"
            extensions(22) = "*.m2ts"
            extensions(23) = "*.rar"
            extensions(24) = "*.dvr-ms"
            extensions(25) = "VIDEO_TS.IFO"
            extensioncount = 25

            For Each moviefolder In moviefolders
                Dim hg As New IO.DirectoryInfo(moviefolder)
                If hg.Exists Then
                    scraperlog = scraperlog & "found" & hg.FullName.ToString & vbCrLf
                    newmoviefolders.Add(moviefolder)
                    scraperlog = scraperlog & "Checking for subfolders" & vbCrLf
                    Dim newlist As List(Of String)
                    Try
                        newlist = filefunction.EnumerateDirectory2(moviefolder)
                        For Each subfolder In newlist
                            scraperlog = scraperlog & "Subfolder added :- " & subfolder.ToString & vbCrLf
                            newmoviefolders.Add(subfolder)
                        Next
                    Catch
                    End Try
                End If
            Next
            For Each moviefolder In userprefs.offlinefolders
                Dim hg As New IO.DirectoryInfo(moviefolder)
                If hg.Exists Then
                    scraperlog = scraperlog & "found" & hg.FullName.ToString & vbCrLf
                    'newmoviefolders.Add(moviefolder)
                    scraperlog = scraperlog & "Checking for subfolders" & vbCrLf
                    Dim newlist As List(Of String)
                    Try
                        newlist = filefunction.EnumerateDirectory3(moviefolder)
                        For Each subfolder In newlist
                            'If subfolder.IndexOf(".actors") = -1 Then
                            scraperlog = scraperlog & "Subfolder added :- " & subfolder.ToString & vbCrLf
                            Dim temge22 As String = filefunction.getlastfolder(subfolder & "\whatever") & ".avi"
                            Dim sTempFileName22 As String = IO.Path.Combine(subfolder, temge22)
                            Dim newtemp1 As String = sTempFileName22.Replace(IO.Path.GetExtension(sTempFileName22), ".nfo")
                            If Not IO.File.Exists(newtemp1) Then
                                If Not IO.File.Exists(IO.Path.Combine(subfolder, "tempoffline.ttt")) Then
                                    Dim sTempFileName As String = IO.Path.Combine(subfolder, "tempoffline.ttt")
                                    Dim fsTemp As New System.IO.FileStream(sTempFileName, IO.FileMode.Create)
                                    fsTemp.Close()
                                End If
                                If Not IO.File.Exists(sTempFileName22) Then
                                    Dim temge As String = filefunction.getlastfolder(subfolder & "\whatever") & ".avi"
                                    Dim sTempFileName2 As String = IO.Path.Combine(subfolder, temge)
                                    Dim fsTemp2 As New System.IO.FileStream(sTempFileName2, IO.FileMode.Create)
                                    fsTemp2.Close()
                                End If
                                newmoviefolders.Add(subfolder)
                            End If
                            'End If
                        Next
                    Catch
                    End Try
                End If
            Next
            Application.DoEvents()
            Dim mediacounter As Integer = newmovielist.Count
            For g = 0 To newmoviefolders.Count - 1
                If BckWrkScnMovies.CancellationPending Then
                    scraperlog = scraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                    Exit Sub
                End If
                Try
                    progress = ((100 / newmoviefolders.Count) * g) * 10
                    progresstext = String.Concat("Scanning folder " & g & " of " & newmoviefolders.Count)
                    BckWrkScnMovies.ReportProgress(progress, progresstext)
                    If BckWrkScnMovies.CancellationPending Then
                        scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                        Exit Sub
                    End If

                    For f = 1 To extensioncount
                        If BckWrkScnMovies.CancellationPending Then
                            scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                            Exit Sub
                        End If
                        moviepattern = extensions(f)

                        dirpath = newmoviefolders(g)
                        Dim dir_info As New System.IO.DirectoryInfo(dirpath)
                        Listmoviefiles(dirinfo, moviepattern, dir_info)
                    Next f
                    tempint = newmovielist.Count - mediacounter

                    scraperlog = scraperlog & tempint.ToString & " New movies found in directory:- " & dirpath & vbCrLf & vbCrLf
                    mediacounter = newmovielist.Count
                Catch ex As Exception

                End Try

            Next g
            scraperlog = scraperlog & vbCrLf & vbCrLf & newmovielist.Count & " Movies found in all folders" & vbCrLf



            scraperlog = scraperlog & "Obtaining Title for each movie found, from path and filename" & vbCrLf & vbCrLf
            For Each movie In newmovielist
                Try
                    If BckWrkScnMovies.CancellationPending Then
                        scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                        Exit Sub
                    End If
                    extension = System.IO.Path.GetExtension(movie.nfopathandfilename)
                    filename2 = System.IO.Path.GetFileName(movie.nfopathandfilename)
                    scraperlog = scraperlog & "" & vbCrLf
                    movie.nfopath = movie.nfopathandfilename.Replace(filename2, "")
                    movie.title = filename2.Replace(extension, "")
                    If extension.ToLower <> ".ifo" Then
                        Try
                            movie.nfopathandfilename = movie.nfopathandfilename.Replace(extension, ".nfo")
                        Catch
                            scraperlog = scraperlog & "Unable to get movie title, stage1" & vbCrLf
                            scraperlog = scraperlog & "Path is: " & movie.nfopathandfilename & vbCrLf
                        End Try
                    End If

                    'If dvdfolder = True Then
                    If extension.ToLower = ".ifo" Or userprefs.usefoldernames = True Then
                        Try
                            movie.nfopathandfilename = movie.nfopathandfilename.Replace(extension, ".nfo")
                            movie.title = filefunction.getlastfolder(movie.nfopathandfilename)
                        Catch
                            scraperlog = scraperlog & "Unable to get movie title, stage2" & vbCrLf
                            scraperlog = scraperlog & "Path is: " & movie.nfopathandfilename & vbCrLf
                        End Try
                    End If


                    If movie.title <> Nothing Then
                        If movie.title <> "" Then
                            tempstring = filefunction.cleanfilename(movie.title, False)
                            If tempstring <> Nothing Then
                                If tempstring <> "" Then
                                    If tempstring <> "error" Then
                                        movie.title = tempstring
                                    Else
                                        scraperlog = scraperlog & "Unable to clean title: " & movie.title & vbCrLf
                                    End If
                                Else
                                    scraperlog = scraperlog & "Cleaning title returns blank: " & movie.title & vbCrLf
                                End If
                            Else
                                scraperlog = scraperlog & "Cleaning title returns nothing: " & movie.title & vbCrLf
                            End If
                        End If
                    End If


                    scraperlog = scraperlog & "Filename is: " & movie.mediapathandfilename & vbCrLf
                    scraperlog = scraperlog & "Title according to settings is: """ & movie.title & """" & vbCrLf
                Catch

                End Try

            Next


            '--------------------------
            Dim movieyear As String = ""
            newmoviecount = newmovielist.Count.ToString
            scraperlog = scraperlog & vbCrLf & vbCrLf & "Starting Main Scraper Process" & vbCrLf & vbCrLf
            For f = 0 To newmovielist.Count - 1
                If BckWrkScnMovies.CancellationPending Then
                    scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                    Exit Sub
                End If
                Dim stage As Integer = 0
                Dim bodyok As Boolean = True
                'stage 0 = starting scraper
                'Try
                Dim title As String = ""
                Dim nfopath As String = ""
                Dim fanartpath As String = ""
                Dim posterpath As String = ""
                Dim year As String = ""
                Dim thumbstring As New XmlDocument
                progress = ((100 / newmoviecount) * (f + 1) * 10)
                progresstext = String.Concat("Scraping Movie " & f + 1 & " of " & newmoviecount)
                BckWrkScnMovies.ReportProgress(progress, progresstext)
                If newmovielist(f).title = Nothing Then
                    scraperlog = scraperlog & "No Filename found for" & newmovielist(f).nfopathandfilename & vbCrLf
                End If
                Dim extrapossibleID As String = Nothing
                If newmovielist(f).title <> Nothing Then
                    title = newmovielist(f).title
                    scraperlog = scraperlog & "Scraping Title:- " & newmovielist(f).title & vbCrLf
                    Application.DoEvents()
                    nfopath = newmovielist(f).nfopathandfilename
                    If userprefs.basicsavemode = True Then
                        nfopath = newmovielist(f).nfopathandfilename.Replace(IO.Path.GetFileName(newmovielist(f).nfopathandfilename), "movie.nfo")
                    End If
                    scraperlog = scraperlog & "Output filename:- " & nfopath & vbCrLf
                    posterpath = filefunction.getposterpath(nfopath)
                    fanartpath = filefunction.getfanartpath(nfopath)
                    scraperlog = scraperlog & "Poster Path:- " & posterpath & vbCrLf
                    scraperlog = scraperlog & "Fanart Path:- " & fanartpath & vbCrLf

                    extrapossibleID = Nothing
                    Dim T As String
                    Dim mat As Match

                    If IO.File.Exists(nfopath) Then
                        scraperlog = scraperlog & "nfo file exists, checking for IMDB ID" & vbCrLf
                        Dim tempinfo As String = ""
                        Dim objReader As New System.IO.StreamReader(nfopath)
                        tempinfo = objReader.ReadToEnd
                        objReader.Close()
                        extrapossibleID = Nothing
                        T = tempinfo
                        mat = Nothing
                        mat = Regex.Match(T, "(tt\d{7})")
                        If mat.Success = True Then
                            scraperlog = scraperlog & "IMDB ID found in nfo file:- " & mat.Value & vbCrLf
                            extrapossibleID = mat.Value
                        Else
                            scraperlog = scraperlog & "No IMDB ID found" & vbCrLf
                            extrapossibleID = Nothing
                        End If
                        'If userprefs.renamenfofiles = True Then
                        Try
                            If Not IO.File.Exists(nfopath.Replace(".nfo", ".info")) Then
                                IO.File.Move(nfopath, nfopath.Replace(".nfo", ".info"))
                                scraperlog = scraperlog & "renaming nfo file to:- " & nfopath.Replace(".nfo", ".info") & vbCrLf
                            Else
                                scraperlog = scraperlog & "Unable to rename file, """ & nfopath & """ already exists" & vbCrLf
                            End If
                        Catch
                            scraperlog = scraperlog & "Unable to rename file, """ & nfopath & """ already exists" & vbCrLf
                        End Try
                        'Else
                        '    scraperlog = scraperlog & "Current nfo file will be overwritten" & vbCrLf
                        'End If
                    Else
                        Dim stackname As String = filefunction.getstackname(nfopath, nfopath.Replace(IO.Path.GetFileName(nfopath), ""))
                        Dim path As String = stackname & ".nfo"
                        If IO.File.Exists(path) Then
                            scraperlog = scraperlog & "nfo file exists, checking for IMDB ID" & vbCrLf
                            Dim tempinfo As String = ""
                            Dim objReader As New System.IO.StreamReader(path)
                            tempinfo = objReader.ReadToEnd
                            objReader.Close()
                            extrapossibleID = Nothing
                            T = tempinfo
                            mat = Nothing
                            mat = Regex.Match(T, "(tt\d{7})")
                            If mat.Success = True Then
                                scraperlog = scraperlog & "IMDB ID found in nfo file:- " & mat.Value & vbCrLf
                                extrapossibleID = mat.Value
                            Else
                                scraperlog = scraperlog & "No IMDB ID found" & vbCrLf
                                extrapossibleID = Nothing
                            End If
                        Else
                            scraperlog = scraperlog & "NFO does not exist" & vbCrLf
                        End If

                    End If


                    If extrapossibleID = Nothing Then
                        scraperlog = scraperlog & "Checking filename for IMDB ID" & vbCrLf
                        mat = Nothing
                        T = newmovielist(f).nfopathandfilename
                        mat = Regex.Match(T, "(tt\d{7})")
                        If mat.Success = True Then
                            scraperlog = scraperlog & "IMDB ID found in filename:- " & mat.Value & vbCrLf
                            extrapossibleID = mat.Value
                        Else
                            extrapossibleID = Nothing
                            scraperlog = scraperlog & "No IMDB ID found" & vbCrLf
                        End If
                    End If

                    If extrapossibleID = Nothing Then
                        scraperlog = scraperlog & "Checking for Movie year in filename" & vbCrLf
                        If extrapossibleID = Nothing Then
                            Dim M As Match
                            M = Regex.Match(newmovielist(f).nfopathandfilename, "(\([\d]{4}\))")
                            If M.Success = True Then
                                movieyear = M.Value
                            Else
                                movieyear = Nothing
                            End If
                            If movieyear = Nothing Then
                                M = Regex.Match(newmovielist(f).nfopathandfilename, "(\[[\d]{4}\])")
                                If M.Success = True Then
                                    movieyear = M.Value
                                Else
                                    movieyear = Nothing
                                End If
                            End If
                        End If

                        If movieyear = Nothing Then
                            scraperlog = scraperlog & "No year found in filename" & vbCrLf
                        Else
                            movieyear = movieyear.Replace("(", "")
                            movieyear = movieyear.Replace(")", "")
                            movieyear = movieyear.Replace("[", "")
                            movieyear = movieyear.Replace("]", "")
                            scraperlog = scraperlog & "Year found for movie:- " & movieyear.ToString & vbCrLf
                        End If
                    End If
                    title = filefunction.cleanfilename(title, False)
                    scraperlog = scraperlog & "Cleaned Title for search :- " & title & vbCrLf
                    Dim newmovie As New fullmoviedetails
                    '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
                    Dim scraperfunction As New Classimdb
                    Dim body As String
                    Dim actors As String
                    Dim trailerurl As String
                    Dim actorlist As String
                    Dim thumblist As String
                    Dim certificates As New List(Of String)
                    stage = 1
                    'stage 1 = get movie body
                    If BckWrkScnMovies.CancellationPending Then
                        scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                        Exit Sub
                    End If

                    imdbcounter += 1

                    'Dim newscraper As New Classimdb
                    'body = newscraper.getimdbbody(title, movieyear, extrapossibleID, userprefs.imdbmirror, imdbcounter)


                    body = scraperfunction.getimdbbody(title, movieyear, extrapossibleID, userprefs.imdbmirror, imdbcounter)
                    If BckWrkScnMovies.CancellationPending Then Exit Sub
                    Dim thisresult As XmlNode = Nothing
                    If body = "MIC" Then
                        scraperlog = scraperlog & "Unable to scrape body with refs """ & title & """, """ & movieyear & """, """ & extrapossibleID & """, """ & userprefs.imdbmirror & """" & vbCrLf
                        If imdbcounter < 50 Then
                            scraperlog = scraperlog & "Searching using Google" & vbCrLf
                        Else
                            scraperlog = scraperlog & "Google session limit reached, Searching using IMDB" & vbCrLf
                        End If
                        scraperlog = scraperlog & "To add the movie manually, go to the movie edit page and select ""Change Movie"" to manually select the correct movie" & vbCrLf
                        newmovie.fullmoviebody.genre = "problem"
                        If newmovie.fullmoviebody.title = Nothing Then
                            newmovie.fullmoviebody.title = "Unknown Title"
                        End If
                        If newmovie.fullmoviebody.title = "" Then
                            newmovie.fullmoviebody.title = "Unknown Title"
                        End If
                        If newmovie.fullmoviebody.year = Nothing Then
                            newmovie.fullmoviebody.year = "0000"
                        End If
                        If newmovie.fullmoviebody.rating = Nothing Then
                            newmovie.fullmoviebody.rating = "0"
                        End If
                        If newmovie.fullmoviebody.top250 = Nothing Then
                            newmovie.fullmoviebody.top250 = "0"
                        End If
                        If newmovie.fullmoviebody.playcount = Nothing Then
                            newmovie.fullmoviebody.playcount = "0"
                        End If
                        If newmovie.fullmoviebody.title = "Unknown Title" Then
                            newmovie.fullmoviebody.plot = "This Movie has could not be identified by Media Companion, to add the movie manually, go to the movie edit page and select ""Change Movie"" to manually select the correct movie"
                            If title <> Nothing Then
                                If title = "" Then
                                    title = "Unknown Title"
                                End If
                            Else
                                title = "Unknown Title"
                            End If
                            newmovie.fullmoviebody.title = title
                        End If
                        If newmovie.fullmoviebody.title = "Unknown Title" Then
                            newmovie.fullmoviebody.genre = "Problem"
                        End If
                        If BckWrkScnMovies.CancellationPending Then
                            scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                            Exit Sub
                        End If
                        Dim myDate2 As Date = System.DateTime.Now
                        Try
                            newmovie.fileinfo.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        Catch ex2 As Exception
                        End Try
                        nfofunction.savemovienfo(nfopath, newmovie, True)

                        Dim movietoadd As New combolist
                        movietoadd.fullpathandfilename = nfopath
                        movietoadd.filename = IO.Path.GetFileName(newmovielist(f).nfopathandfilename)
                        movietoadd.foldername = filefunction.getlastfolder(newmovielist(f).nfopathandfilename)
                        movietoadd.title = newmovie.fullmoviebody.title
                        If newmovie.fullmoviebody.title <> Nothing Then
                            If newmovie.fullmoviebody.year <> Nothing Then
                                movietoadd.titleandyear = newmovie.fullmoviebody.title & " (" & newmovie.fullmoviebody.year & ")"
                            Else
                                movietoadd.titleandyear = newmovie.fullmoviebody.title & " (0000)"
                            End If
                        Else
                            movietoadd.titleandyear = "Unknown (0000)"
                        End If

                        movietoadd.year = newmovie.fullmoviebody.year

                        Dim filecreation As New FileInfo(newmovielist(f).nfopathandfilename)
                        Dim myDate As Date = filecreation.LastWriteTime
                        Try
                            movietoadd.filedate = Format(myDate, "yyyyMMddHHmmss").ToString
                        Catch ex As Exception
                            'MsgBox(ex.ToString)
                        End Try
                        myDate2 = System.DateTime.Now
                        Try
                            movietoadd.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        Catch ex2 As Exception
                        End Try
                        movietoadd.sortorder = newmovie.fullmoviebody.title
                        movietoadd.outline = newmovie.fullmoviebody.outline
                        movietoadd.id = newmovie.fullmoviebody.imdbid
                        movietoadd.rating = newmovie.fullmoviebody.rating
                        movietoadd.top250 = newmovie.fullmoviebody.top250
                        movietoadd.genre = newmovie.fullmoviebody.genre
                        movietoadd.playcount = newmovie.fullmoviebody.playcount
                        movietoadd.missingdata1 = 3
                        movietoadd.runtime = "0"
                        fullmovielist.Add(movietoadd)
                        If BckWrkScnMovies.CancellationPending Then
                            scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                            Exit Sub
                        End If
                    Else
                        Try
                            scraperlog = scraperlog & "Movie Body Scraped OK"
                            thumbstring.LoadXml(body)
                            For Each thisresult In thumbstring("movie")
                                Select Case thisresult.Name
                                    Case "title"
                                        If userprefs.keepfoldername = False Then
                                            newmovie.fullmoviebody.title = thisresult.InnerText
                                        Else
                                            If userprefs.usefoldernames = False Then
                                                tempstring = IO.Path.GetFileName(newmovielist(f).nfopathandfilename)
                                                newmovie.fullmoviebody.title = filefunction.cleanfilename(tempstring, False)
                                            Else
                                                newmovie.fullmoviebody.title = filefunction.cleanfilename(filefunction.getlastfolder(newmovielist(f).nfopathandfilename), False)
                                            End If
                                        End If
                                    Case "alternativetitle"
                                        newmovie.alternativetitles.Add(thisresult.InnerText)
                                    Case "country"
                                        newmovie.fullmoviebody.country = thisresult.InnerText
                                    Case "credits"
                                        newmovie.fullmoviebody.credits = thisresult.InnerText
                                    Case "director"
                                        newmovie.fullmoviebody.director = thisresult.InnerText
                                    Case "genre"
                                        Dim strarr() As String
                                        strarr = thisresult.InnerText.Split("/")
                                        For count = 0 To strarr.Length - 1
                                            strarr(count) = strarr(count).Replace(" ", "")
                                        Next
                                        If strarr.Length <= userprefs.maxmoviegenre Then
                                            newmovie.fullmoviebody.genre = thisresult.InnerText
                                        Else
                                            For g = 0 To userprefs.maxmoviegenre - 1
                                                If g = 0 Then
                                                    newmovie.fullmoviebody.genre = strarr(g)
                                                Else
                                                    newmovie.fullmoviebody.genre += " / " & strarr(g)
                                                End If
                                            Next
                                        End If
                                    Case "mpaa"
                                        newmovie.fullmoviebody.mpaa = thisresult.InnerText
                                    Case "outline"
                                        newmovie.fullmoviebody.outline = thisresult.InnerText
                                    Case "plot"
                                        newmovie.fullmoviebody.plot = thisresult.InnerText
                                    Case "premiered"
                                        newmovie.fullmoviebody.premiered = thisresult.InnerText
                                    Case "rating"
                                        newmovie.fullmoviebody.rating = thisresult.InnerText
                                    Case "runtime"
                                        newmovie.fullmoviebody.runtime = thisresult.InnerText
                                        If newmovie.fullmoviebody.runtime.IndexOf(":") <> -1 Then
                                            Try
                                                newmovie.fullmoviebody.runtime = newmovie.fullmoviebody.runtime.Substring(newmovie.fullmoviebody.runtime.IndexOf(":") + 1, newmovie.fullmoviebody.runtime.Length - newmovie.fullmoviebody.runtime.IndexOf(":") - 1)
                                            Catch ex As Exception

                                            End Try
                                        End If
                                    Case "studio"
                                        newmovie.fullmoviebody.studio = thisresult.InnerText
                                    Case "tagline"
                                        newmovie.fullmoviebody.tagline = thisresult.InnerText
                                    Case "top250"
                                        newmovie.fullmoviebody.top250 = thisresult.InnerText
                                    Case "votes"
                                        newmovie.fullmoviebody.votes = thisresult.InnerText
                                    Case "year"
                                        newmovie.fullmoviebody.year = thisresult.InnerText
                                    Case "id"
                                        newmovie.fullmoviebody.imdbid = thisresult.InnerText
                                    Case "cert"
                                        certificates.Add(thisresult.InnerText)
                                End Select
                            Next
                        Catch ex As Exception
                            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                            scraperlog = scraperlog & "An error was encountered at stage 1, Downloading Movie Body" & vbCrLf
                            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf
                            errorcounter += 1
                            If userprefs.usefoldernames = False Then
                                tempstring = IO.Path.GetFileName(newmovielist(f).nfopathandfilename)
                                newmovie.fullmoviebody.title = filefunction.cleanfilename(tempstring, False)
                            Else
                                newmovie.fullmoviebody.title = filefunction.cleanfilename(filefunction.getlastfolder(newmovielist(f).nfopathandfilename), False)
                            End If
                        End Try
                        If newmovie.fullmoviebody.playcount = Nothing Then newmovie.fullmoviebody.playcount = "0"
                        If newmovie.fullmoviebody.top250 = Nothing Then newmovie.fullmoviebody.top250 = "0"

                        Dim done As Boolean = False
                        For g = 0 To UBound(userprefs.certificatepriority)
                            For Each cert In certificates
                                If cert.IndexOf(userprefs.certificatepriority(g)) <> -1 Then
                                    newmovie.fullmoviebody.mpaa = cert.Substring(cert.IndexOf("|") + 1, cert.Length - cert.IndexOf("|") - 1)
                                    done = True
                                    Exit For
                                End If
                            Next
                            If done = True Then Exit For
                        Next
                        If userprefs.keepfoldername = True Then
                            If userprefs.usefoldernames = False Then
                                tempstring = IO.Path.GetFileName(newmovielist(f).nfopathandfilename)
                                newmovie.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                            Else
                                newmovie.fullmoviebody.title = filefunction.cleanfilename(filefunction.getlastfolder(newmovielist(f).nfopathandfilename))
                            End If
                        End If
                        stage = 2
                        'stage 2 = get movie actors
                        actorlist = scraperfunction.getimdbactors(userprefs.imdbmirror, newmovie.fullmoviebody.imdbid, newmovie.fullmoviebody.title, userprefs.maxactors)
                        Try
                            thumbstring.LoadXml(actorlist)
                            thisresult = Nothing
                            Dim actorcount As Integer = 0
                            For Each thisresult In thumbstring("actorlist")
                                Select Case thisresult.Name
                                    Case "actor"
                                        If actorcount > userprefs.maxactors Then
                                            Exit For
                                        End If
                                        actorcount += 1
                                        Dim newactor As New movieactors
                                        Dim detail As XmlNode = Nothing
                                        For Each detail In thisresult.ChildNodes
                                            Select Case detail.Name
                                                Case "name"
                                                    newactor.actorname = detail.InnerText
                                                Case "role"
                                                    newactor.actorrole = detail.InnerText
                                                Case "thumb"
                                                    newactor.actorthumb = detail.InnerText
                                                Case "actorid"
                                                    If newactor.actorthumb <> Nothing Then
                                                        If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                            Dim workingpath As String = newmovielist(f).nfopathandfilename.Replace(IO.Path.GetFileName(newmovielist(f).nfopathandfilename), "")
                                                            workingpath = workingpath & ".actors\"
                                                            Dim hg As New IO.DirectoryInfo(workingpath)
                                                            Dim destsorted As Boolean = False
                                                            If Not hg.Exists Then
                                                                Try
                                                                    IO.Directory.CreateDirectory(workingpath)
                                                                    destsorted = True
                                                                Catch ex As Exception

                                                                End Try
                                                            Else
                                                                destsorted = True
                                                            End If
                                                            If destsorted = True Then
                                                                Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                                filename = filename & ".tbn"
                                                                filename = IO.Path.Combine(workingpath, filename)
                                                                If Not IO.File.Exists(filename) Then
                                                                    Try
                                                                        Dim buffer(4000000) As Byte
                                                                        Dim size As Integer = 0
                                                                        Dim bytesRead As Integer = 0
                                                                        Dim thumburl As String = newactor.actorthumb
                                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                                        Dim contents As Stream = res.GetResponseStream()
                                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                        While bytesToRead > 0
                                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                            If size = 0 Then Exit While
                                                                            bytesToRead -= size
                                                                            bytesRead += size
                                                                        End While

                                                                        Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                        fstrm.Write(buffer, 0, bytesRead)
                                                                        contents.Close()
                                                                        fstrm.Close()
                                                                    Catch
                                                                    End Try
                                                                End If
                                                            End If
                                                        End If
                                                        If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                            Dim workingpath As String = ""
                                                            Dim networkpath As String = Form1.userprefs.actorsavepath
                                                            Try
                                                                tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                Dim hg As New IO.DirectoryInfo(tempstring)
                                                                If Not hg.Exists Then
                                                                    IO.Directory.CreateDirectory(tempstring)
                                                                End If
                                                                workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                If Not IO.File.Exists(workingpath) Then
                                                                    Dim buffer(4000000) As Byte
                                                                    Dim size As Integer = 0
                                                                    Dim bytesRead As Integer = 0
                                                                    Dim thumburl As String = newactor.actorthumb
                                                                    Dim req As HttpWebRequest = req.Create(thumburl)
                                                                    Dim res As HttpWebResponse = req.GetResponse()
                                                                    Dim contents As Stream = res.GetResponseStream()
                                                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                    While bytesToRead > 0
                                                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                        If size = 0 Then Exit While
                                                                        bytesToRead -= size
                                                                        bytesRead += size
                                                                    End While

                                                                    Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                    fstrm.Write(buffer, 0, bytesRead)
                                                                    contents.Close()
                                                                    fstrm.Close()
                                                                End If
                                                                newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                    newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                Else
                                                                    newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                End If
                                                            Catch
                                                            End Try
                                                        End If
                                                    End If
                                            End Select
                                        Next
                                        newmovie.listactors.Add(newactor)

                                End Select
                            Next

                            scraperlog = scraperlog & "Actors scraped OK"
                            While newmovie.listactors.Count > userprefs.maxactors
                                newmovie.listactors.RemoveAt(newmovie.listactors.Count - 1)
                            End While
                            For Each actor In newmovie.listactors
                                Dim actornew As New actordatabase
                                actornew.actorname = actor.actorname
                                actornew.movieid = newmovie.fullmoviebody.imdbid
                                actordb.Add(actornew)
                            Next
                        Catch ex As Exception
                            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                            scraperlog = scraperlog & "An error was encountered at stage 2, Downloading Actors" & vbCrLf
                            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf
                            errorcounter += 1
                            newmovie.listactors.Clear()
                        End Try


                        stage = 3
                        'stage 3 = get movie trailer
                        If BckWrkScnMovies.CancellationPending Then
                            scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                            Exit Sub
                        End If
                        Try
                            If userprefs.gettrailer = True Then
                                trailer = scraperfunction.gettrailerurl(newmovie.fullmoviebody.imdbid, userprefs.imdbmirror)
                                If trailer <> Nothing Then
                                    newmovie.fullmoviebody.trailer = trailer
                                    scraperlog = scraperlog & "Trailer URL Scraped OK" & vbCrLf
                                End If
                            End If
                        Catch
                        End Try
                        stage = 4
                        'stage 4 = get movie thumblist(for nfo)
                        If BckWrkScnMovies.CancellationPending Then
                            scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                            Exit Sub
                        End If
                        If userprefs.nfoposterscraper <> 0 Then
                            Dim thumbs As String = ""
                            If userprefs.nfoposterscraper = 1 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 15 Then
                                Dim newobject3 As New IMPA.getimpaposters
                                Dim teststring As New XmlDocument
                                Dim testthumbs As String
                                Try
                                    testthumbs = newobject3.getimpathumbs(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                    Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                    teststring.LoadXml(testthumbs2)
                                    thumbs = thumbs & testthumbs.ToString
                                Catch ex As Exception
                                    Thread.Sleep(1)
                                End Try
                            End If

                            If userprefs.nfoposterscraper = 2 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                Dim newobject2 As New tmdb_posters.Class1
                                Dim teststring As New XmlDocument
                                Dim testthumbs As String
                                Try
                                    testthumbs = newobject2.gettmdbposters_newapi(newmovie.fullmoviebody.imdbid)
                                    Dim bannerslist As New XmlDocument
                                    bannerslist.LoadXml(testthumbs)
                                    Dim templist As String = ""
                                    For Each item In bannerslist("tmdb_posterlist")
                                        Select Case item.name
                                            Case "poster"
                                                For Each img In item
                                                    If img.childnodes(0).innertext = "original" Then
                                                        templist = templist & "<thumbs>" & img.childnodes(1).innertext & "</thumbs>"
                                                    End If
                                                Next
                                        End Select
                                    Next
                                    thumbs = thumbs & templist.ToString
                                Catch ex As Exception
                                    Thread.Sleep(1)
                                End Try
                            End If

                            If userprefs.nfoposterscraper = 4 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                Dim newobject As New class_mpdb_thumbs.Class1
                                Dim teststring As New XmlDocument
                                Dim testthumbs As String
                                Try
                                    testthumbs = newobject.get_mpdb_thumbs(newmovie.fullmoviebody.imdbid)
                                    Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                    teststring.LoadXml(testthumbs2)
                                    thumbs = thumbs & testthumbs.ToString
                                Catch ex As Exception
                                    Thread.Sleep(1)
                                End Try
                            End If

                            If userprefs.nfoposterscraper = 8 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                Dim thumbscraper As New imdb_thumbs.Class1
                                Dim teststring As New XmlDocument
                                Try
                                    Dim testthumbs As String
                                    testthumbs = thumbscraper.getimdbthumbs(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year, newmovie.fullmoviebody.imdbid)
                                    Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                    teststring.LoadXml(testthumbs2)
                                    thumbs = thumbs & testthumbs.ToString
                                Catch ex As Exception
                                    Thread.Sleep(1)
                                End Try
                            End If




                            thumbs = "<thumblist>" & thumbs & "</thumblist>"

                            Try
                                thumbstring.LoadXml(thumbs)



                                For Each thisresult In thumbstring("thumblist")
                                    Select Case thisresult.Name
                                        Case "thumb"
                                            newmovie.listthumbs.Add(thisresult.InnerText)
                                    End Select
                                Next
                                scraperlog = scraperlog & "Poster URLs Scraped OK" & vbCrLf
                            Catch ex As Exception
                                scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                                scraperlog = scraperlog & "An error was encountered at stage 4, Downloading poster list for nfo file" & vbCrLf
                                scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf
                                errorcounter += 1
                                newmovie.listthumbs.Clear()
                            End Try
                        End If
                        stage = 5
                        'stage 5 = get hd tags
                        Try
                            Dim tempsa As String = IO.Path.GetFileName(newmovielist(f).mediapathandfilename)
                            Dim tempsb As String = newmovielist(f).mediapathandfilename.Replace(IO.Path.GetFileName(newmovielist(f).mediapathandfilename), "")
                            tempsb = IO.Path.Combine(tempsb, "tempoffline.ttt")
                            If Not IO.File.Exists(tempsb) Then

                                newmovie.filedetails = filefunction.get_hdtags(newmovielist(f).mediapathandfilename)
                                If newmovie.filedetails.filedetails_video.duration <> Nothing Then
                                    Try
                                        '1h 24mn 48s 546ms
                                        Dim hours As Integer
                                        Dim minutes As Integer
                                        tempstring = newmovie.filedetails.filedetails_video.duration
                                        tempint = tempstring.IndexOf("h")
                                        If tempint <> -1 Then
                                            hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                            tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                            tempstring = Trim(tempstring)
                                        End If
                                        tempint = tempstring.IndexOf("mn")
                                        If tempint <> -1 Then
                                            minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                                        End If
                                        If hours <> 0 Then
                                            hours = hours * 60
                                        End If
                                        minutes = minutes + hours
                                        If minutes = 0 Then
                                            If tempstring.IndexOf("min") <> -1 Then
                                                tempstring = tempstring.Replace("min", "")
                                                tempstring = tempstring.Replace(" ", "")
                                                If IsNumeric(tempstring) Then
                                                    minutes = Convert.ToInt32(tempstring)
                                                End If
                                            End If
                                        End If
                                        newmovie.fullmoviebody.runtime = minutes.ToString & " min"
                                        scraperlog = scraperlog & "HD Tags Added OK" & vbCrLf
                                    Catch ex As Exception
                                        scraperlog = scraperlog & "Error getting HD Tags:- " & ex.Message.ToString & vbCrLf
                                    End Try
                                End If
                            End If
                        Catch ex As Exception
                            scraperlog = scraperlog & "Error getting HD Tags:- " & ex.Message.ToString & vbCrLf
                        End Try

                        If newmovie.fullmoviebody.title = Nothing Then
                            newmovie.fullmoviebody.title = "Unknown Title"
                        End If
                        If newmovie.fullmoviebody.title = "" Then
                            newmovie.fullmoviebody.title = "Unknown Title"
                        End If
                        If newmovie.fullmoviebody.year = Nothing Then
                            newmovie.fullmoviebody.year = "0000"
                        End If
                        If newmovie.fullmoviebody.rating = Nothing Then
                            newmovie.fullmoviebody.rating = "0"
                        End If
                        If newmovie.fullmoviebody.top250 = Nothing Then
                            newmovie.fullmoviebody.top250 = "0"
                        End If
                        If newmovie.fullmoviebody.playcount = Nothing Then
                            newmovie.fullmoviebody.playcount = "0"
                        End If
                        If newmovie.fullmoviebody.title = "Unknown Title" Then
                            newmovie.fullmoviebody.plot = "This Movie has could not be identified by Media Companion, to add the movie manually, go to the movie edit page and select ""Change Movie"" to manually select the correct movie"
                            If title <> Nothing Then
                                If title = "" Then
                                    title = "Unknown Title"
                                End If
                            Else
                                title = "Unknown Title"
                            End If
                            newmovie.fullmoviebody.title = title
                        End If
                        If newmovie.fullmoviebody.title = "Unknown Title" Then
                            newmovie.fullmoviebody.genre = "Problem"
                        End If
                        Dim myDate2 As Date = System.DateTime.Now
                        Try
                            newmovie.fileinfo.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        Catch ex2 As Exception
                        End Try
                        nfofunction.savemovienfo(nfopath, newmovie, True)



                        Dim movietoadd As New combolist
                        movietoadd.fullpathandfilename = nfopath
                        movietoadd.filename = IO.Path.GetFileName(newmovielist(f).nfopathandfilename)
                        movietoadd.foldername = filefunction.getlastfolder(newmovielist(f).nfopathandfilename)
                        movietoadd.title = newmovie.fullmoviebody.title
                        movietoadd.sortorder = newmovie.fullmoviebody.sortorder
                        movietoadd.runtime = newmovie.fullmoviebody.runtime
                        If newmovie.fullmoviebody.title <> Nothing Then
                            If newmovie.fullmoviebody.year <> Nothing Then
                                '                            If newmovie.fullmoviebody.title.ToLower.IndexOf("the") = 0 Then
                                '                                movietoadd.titleandyear = newmovie.fullmoviebody.title.Substring(4, newmovie.fullmoviebody.title.Length - 4) & ", The (" & newmovie.fullmoviebody.year & ")"
                                '                            Else
                                movietoadd.titleandyear = newmovie.fullmoviebody.title & " (" & newmovie.fullmoviebody.year & ")"
                                '                            End If
                            Else
                                movietoadd.titleandyear = newmovie.fullmoviebody.title & " (0000)"
                            End If
                        Else
                            movietoadd.titleandyear = "Unknown (0000)"
                        End If
                        movietoadd.outline = newmovie.fullmoviebody.outline
                        movietoadd.year = newmovie.fullmoviebody.year



                        Dim filecreation As New FileInfo(newmovielist(f).nfopathandfilename)
                        Dim myDate As Date = filecreation.LastWriteTime
                        Try
                            movietoadd.filedate = Format(myDate, "yyyyMMddHHmmss").ToString
                        Catch ex As Exception
                            'MsgBox(ex.ToString)
                        End Try
                        myDate2 = System.DateTime.Now
                        Try
                            movietoadd.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        Catch ex2 As Exception
                        End Try



                        movietoadd.id = newmovie.fullmoviebody.imdbid
                        movietoadd.rating = newmovie.fullmoviebody.rating
                        movietoadd.top250 = newmovie.fullmoviebody.top250
                        movietoadd.genre = newmovie.fullmoviebody.genre
                        movietoadd.playcount = newmovie.fullmoviebody.playcount

                        If BckWrkScnMovies.CancellationPending Then Exit Sub



                        stage = 6
                        'stage 6 = download movieposter
                        Dim moviethumburl As String = ""
                        If userprefs.scrapemovieposters = True And userprefs.overwritethumbs = True Or IO.File.Exists(filefunction.getposterpath(newmovielist(f).nfopathandfilename)) = False Then
                            Try
                                If BckWrkScnMovies.CancellationPending Then
                                    scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                                    Exit Sub
                                End If
                                Select Case userprefs.moviethumbpriority(0)
                                    Case "Internet Movie Poster Awards"
                                        moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                    Case "IMDB"
                                        moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                    Case "Movie Poster DB"
                                        moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                    Case "themoviedb.org"
                                        moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                End Select
                            Catch
                                moviethumburl = "na"
                            End Try
                            Try
                                If BckWrkScnMovies.CancellationPending Then
                                    scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                                    Exit Sub
                                End If
                                If moviethumburl = "na" Then
                                    Select Case userprefs.moviethumbpriority(1)
                                        Case "Internet Movie Poster Awards"
                                            moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                        Case "IMDB"
                                            moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "Movie Poster DB"
                                            moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "themoviedb.org"
                                            moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                    End Select
                                End If
                            Catch
                                moviethumburl = "na"
                            End Try
                            Try
                                If BckWrkScnMovies.CancellationPending Then
                                    scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                                    Exit Sub
                                End If
                                If moviethumburl = "na" Then
                                    Select Case userprefs.moviethumbpriority(2)
                                        Case "Internet Movie Poster Awards"
                                            moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                        Case "IMDB"
                                            moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "Movie Poster DB"
                                            moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "themoviedb.org"
                                            moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                    End Select
                                End If
                            Catch
                                moviethumburl = "na"
                            End Try
                            Try
                                If BckWrkScnMovies.CancellationPending Then
                                    scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                                    Exit Sub
                                End If
                                If moviethumburl = "na" Then
                                    Select Case userprefs.moviethumbpriority(3)
                                        Case "Internet Movie Poster Awards"
                                            moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                        Case "IMDB"
                                            moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "Movie Poster DB"
                                            moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "themoviedb.org"
                                            moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                    End Select
                                End If
                            Catch
                                moviethumburl = "na"
                            End Try
                            Try
                                If BckWrkScnMovies.CancellationPending Then
                                    scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                                    Exit Sub
                                End If
                                If moviethumburl <> "" And moviethumburl <> "na" Then
                                    Dim newmoviethumbpath As String = filefunction.getposterpath(newmovielist(f).nfopathandfilename)
                                    Try
                                        Dim buffer(4000000) As Byte
                                        Dim size As Integer = 0
                                        Dim bytesRead As Integer = 0
                                        Dim thumburl As String = moviethumburl
                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                        Dim res As HttpWebResponse = req.GetResponse()
                                        Dim contents As Stream = res.GetResponseStream()
                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                        While bytesToRead > 0
                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                            If size = 0 Then Exit While
                                            bytesToRead -= size
                                            bytesRead += size
                                        End While
                                        'scraperlog = scraperlog & "Downloading Movie Thumbnail at URL :- " & newmoviethumbpath & vbCrLf
                                        'scraperlog = scraperlog & "Unable to Download Thumb" & vbCrLf
                                        'scraperlog = scraperlog & "Saving Thumbnail To Path :- " & newmoviethumbpath & vbCrLf
                                        Dim fstrm As New FileStream(posterpath, FileMode.OpenOrCreate, FileAccess.Write)
                                        fstrm.Write(buffer, 0, bytesRead)
                                        contents.Close()
                                        fstrm.Close()
                                        scraperlog = scraperlog & "Poster scraped and saved OK" & vbCrLf

                                        Dim temppath As String = newmoviethumbpath.Replace(System.IO.Path.GetFileName(newmoviethumbpath), "folder.jpg")
                                        If Form1.userprefs.createfolderjpg = True Then
                                            If Form1.userprefs.overwritethumbs = True Or System.IO.File.Exists(temppath) = False Then
                                                scraperlog = scraperlog & "Saving folder.jpg To Path :- " & temppath & vbCrLf
                                                Dim fstrm2 As New FileStream(temppath, FileMode.OpenOrCreate, FileAccess.Write)
                                                fstrm2.Write(buffer, 0, bytesRead)
                                                contents.Close()
                                                fstrm2.Close()
                                                scraperlog = scraperlog & "Poster also saved as ""folder.jpg"" OK" & vbCrLf
                                            Else
                                                scraperlog = scraperlog & "folder.jpg Not Saved to :- " & temppath & ", file already exists" & vbCrLf
                                            End If
                                        End If
                                    Catch ex As Exception
                                        scraperlog = scraperlog & "Problem Saving Thumbnail" & vbCrLf
                                        scraperlog = scraperlog & "Error Returned :- " & ex.ToString & vbCrLf & vbCrLf
                                    End Try
                                End If
                            Catch
                            End Try
                        End If




                        stage = 7
                        'stage 7 = download fanart
                        If Form1.userprefs.overwritethumbs = True Or Form1.userprefs.overwritethumbs = False And IO.File.Exists(filefunction.getfanartpath(newmovielist(f).nfopathandfilename)) = False Then
                            If Form1.userprefs.savefanart = False Then
                                'scraperlog = scraperlog & "Fanart Not Downloaded - Disabled in preferences, use browser to find and add Fanart" & vbCrLf
                            Else
                                Try
                                    If BckWrkScnMovies.CancellationPending Then
                                        scraperlog = scraperlog & vbCrLf & "Operation cancelled by user"
                                        Exit Sub
                                    End If
                                    Dim moviefanartexists As Boolean
                                    Dim fanarturlpath As String = filefunction.getfanartpath(newmovielist(f).nfopathandfilename)

                                    moviethumburl = ""
                                    moviefanartexists = System.IO.File.Exists(fanarturlpath)
                                    If moviefanartexists = False Or Form1.userprefs.overwritethumbs = True Then

                                        Dim temp As String = newmovie.fullmoviebody.imdbid

                                        Dim fanarturl As String = "http://api.themoviedb.org/2.1/Movie.imdbLookup/en/xml/3f026194412846e530a208cf8a39e9cb/" & temp
                                        Dim apple2(2000) As String
                                        Dim fanartlinecount As Integer = 0
                                        Try
                                            Dim wrGETURL As WebRequest

                                            wrGETURL = WebRequest.Create(fanarturl)
                                            Dim myProxy As New WebProxy("myproxy", 80)
                                            myProxy.BypassProxyOnLocal = True
                                            Dim objStream As Stream
                                            objStream = wrGETURL.GetResponse.GetResponseStream()
                                            Dim objReader As New StreamReader(objStream)
                                            Dim sLine As String = ""
                                            fanartlinecount = 0

                                            Do While Not sLine Is Nothing
                                                fanartlinecount += 1
                                                sLine = objReader.ReadLine
                                                apple2(fanartlinecount) = sLine
                                            Loop

                                            fanartlinecount -= 1
                                            Dim fanartfound As Boolean = False
                                            For g = 1 To fanartlinecount
                                                ' vou mudar para ser compativel com api 2.1'                                           If apple2(g).IndexOf("<backdrop size=""original"">") <> -1 Then
                                                If apple2(g).IndexOf("<image type=""backdrop""") <> -1 Then
                                                    If apple2(g).IndexOf("size=""original""") <> -1 Then
                                                        Dim StartofURL As Integer = apple2(g).IndexOf("url=""") + 5
                                                        Dim EndofURL As Integer = apple2(g).IndexOf("size=""original""") - 2

                                                        '                                                    apple2(g) = apple2(g).Replace("<image type=""backdrop""", "")
                                                        '                                                    apple2(g) = apple2(g).Replace("</backdrop>", "")
                                                        '                                                    apple2(g) = apple2(g).Replace("  ", "")
                                                        apple2(g) = apple2(g).Substring(StartofURL, (EndofURL - StartofURL))
                                                        '                                                    Dim teste1 As String = apple2(g).Substring(posicaoinicial, 10)
                                                        '                                                    Dim teste2 As String = apple2(g).Substring(posicaoinicial, posicaofinal)
                                                        '                                                    Dim teste3 As String = apple2(g).Substring(posicaoinicial, ((posicaofinal - posicaoinicial) - 15))

                                                        apple2(g) = apple2(g).Trim
                                                        If apple2(g).ToLower.IndexOf("http") <> -1 And apple2(g).ToLower.IndexOf(".jpg") <> -1 Or apple2(g).IndexOf(".jpeg") <> -1 Or apple2(g).IndexOf(".png") <> -1 Then
                                                            moviethumburl = apple2(g)
                                                            fanartfound = True
                                                        End If
                                                    End If
                                                    Exit For
                                                End If
                                            Next
                                            If fanartfound = False Then moviethumburl = ""
                                        Catch
                                        End Try

                                        If moviethumburl <> "" Then
                                            'scraperlog = scraperlog & "Fanart URL is " & fanarturl & vbCrLf
                                            scraperlog = scraperlog & "Saving Fanart As :- " & fanarturlpath & vbCrLf

                                            'need to resize thumbs

                                            Try
                                                Dim buffer(8000000) As Byte
                                                Dim size As Integer = 0
                                                Dim bytesRead As Integer = 0

                                                Dim thumburl As String = moviethumburl
                                                Dim req As HttpWebRequest = req.Create(thumburl)
                                                Dim res As HttpWebResponse = req.GetResponse()
                                                Dim contents As Stream = res.GetResponseStream()
                                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                                Dim bmp As New Bitmap(contents)



                                                While bytesToRead > 0
                                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                                    If size = 0 Then Exit While
                                                    bytesToRead -= size
                                                    bytesRead += size
                                                End While



                                                If Form1.userprefs.resizefanart = 1 Then
                                                    bmp.Save(fanartpath, Imaging.ImageFormat.Jpeg)
                                                    scraperlog = scraperlog & "Fanart not resized" & vbCrLf
                                                ElseIf Form1.userprefs.resizefanart = 2 Then
                                                    If bmp.Width > 1280 Or bmp.Height > 720 Then
                                                        Dim bm_source As New Bitmap(bmp)
                                                        Dim bm_dest As New Bitmap(1280, 720)
                                                        Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                        gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                                        bm_dest.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                        scraperlog = scraperlog & "Farart Resized to 1280x720" & vbCrLf
                                                    Else
                                                        scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                                        bmp.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                    End If
                                                ElseIf Form1.userprefs.resizefanart = 3 Then
                                                    If bmp.Width > 960 Or bmp.Height > 540 Then
                                                        Dim bm_source As New Bitmap(bmp)
                                                        Dim bm_dest As New Bitmap(960, 540)
                                                        Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                        gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                                        bm_dest.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                        scraperlog = scraperlog & "Farart Resized to 960x540" & vbCrLf
                                                    Else
                                                        scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                                        bmp.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                    End If

                                                End If
                                            Catch ex As Exception
                                                Try
                                                    scraperlog = scraperlog & "Fanart Not Saved to :- " & fanarturlpath & vbCrLf
                                                    scraperlog = scraperlog & "Error received :- " & ex.ToString & vbCrLf & vbCrLf
                                                Catch
                                                End Try
                                            End Try

                                        Else
                                            'scraperlog = scraperlog & "No Fanart is Available For This Movie" & moviethumbpath & vbCrLf
                                        End If
                                    Else
                                        'scraperlog = scraperlog & "Fanart Not Saved to :- " & moviethumbpath & ", file already exists" & vbCrLf
                                    End If

                                Catch
                                End Try
                            End If

                        End If
                        Dim tempst As String = movietoadd.fullpathandfilename
                        tempst = tempst.Replace(IO.Path.GetFileName(tempst), "tempoffline.ttt")
                        If IO.File.Exists(tempst) Then
                            IO.File.Delete(tempst)
                            Call offlinedvd(movietoadd.fullpathandfilename, movietoadd.title, filefunction.getfilename(movietoadd.fullpathandfilename))
                        End If
                        Dim completebyte1 As Byte = 0
                        Dim fanartexists As Boolean = IO.File.Exists(filefunction.getfanartpath(movietoadd.fullpathandfilename))
                        Dim posterexists As Boolean = IO.File.Exists(filefunction.getposterpath(movietoadd.fullpathandfilename))
                        If fanartexists = False Then
                            completebyte1 += 1
                        End If
                        If posterexists = False Then
                            completebyte1 += 2
                        End If
                        movietoadd.missingdata1 = completebyte1
                        fullmovielist.Add(movietoadd)
                    End If

                    scraperlog = scraperlog & "Movie added to list" & vbCrLf
                    progress = 999999
                    progresstext = String.Concat("Scraping Movie " & f + 1 & " of " & newmoviecount)
                    BckWrkScnMovies.ReportProgress(progress, progresstext)
                End If



                'Catch ex As Exception
                '    Dim stagestring As String = ""
                '    Select Case stage
                '        Case 0
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "An error was encountered at stage 0, Starting movie scraper" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 1
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 1, scraping the main movie body" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 2
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 2, scraping the movie actors" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 3
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 3, scraping the movie trailer" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 4
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 4, scraping list of movie posters" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 5
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 5, creating HD tags" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 6
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 6, downloading poster" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '        Case 7
                '            scraperlog = scraperlog & "Error with " & newmovielist(f).nfopathandfilename & vbCrLf
                '            scraperlog = scraperlog & "And error was encountered at stage 7, downloading fanart" & vbCrLf
                '            scraperlog = scraperlog & ex.Message.ToString & vbCrLf & vbCrLf & vbCrLf
                '            errorcounter += 1
                '    End Select
                '    progress = 999999
                '    progresstext = String.Concat("Scraping Movie " & f + 1 & " of " & newmoviecount)
                '    BckWrkScnMovies.ReportProgress(progress, progresstext)
                'End Try
                scraperlog = scraperlog & vbCrLf & vbCrLf & vbCrLf

            Next
        End If
    End Sub

    Private Sub ReloadMovieCacheToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ReloadMovieCacheToolStripMenuItem.Click
        Call reloadmoviecache()
    End Sub

    Private Sub reloadmoviecache()
        Dim movielist As New XmlDocument
        dlist.Clear()
        fullmovielist.Clear()
        filteredlist.Clear()


        movielist.Load(workingprofile.moviecache)
        Dim thisresult As XmlNode = Nothing
        For Each thisresult In movielist("movie_cache")
            Select Case thisresult.Name
                Case "movie"
                    Dim newmovie As New combolist
                    Dim detail As XmlNode = Nothing
                    For Each detail In thisresult.ChildNodes
                        Select Case detail.Name
                            Case "filedate"
                                newmovie.filedate = detail.InnerText
                            Case "filename"
                                newmovie.filename = detail.InnerText
                            Case "foldername"
                                newmovie.foldername = detail.InnerText
                            Case "fullpathandfilename"
                                newmovie.fullpathandfilename = detail.InnerText
                            Case "genre"
                                newmovie.genre = detail.InnerText
                            Case "id"
                                newmovie.id = detail.InnerText
                            Case "playcount"
                                newmovie.playcount = detail.InnerText
                            Case "rating"
                                newmovie.rating = detail.InnerText
                            Case "title"
                                newmovie.title = detail.InnerText
                            Case "titleandyear"
                                newmovie.titleandyear = detail.InnerText
                            Case "top250"
                                newmovie.top250 = detail.InnerText
                            Case "runtime"
                                newmovie.runtime = detail.InnerText
                            Case "outline"
                                newmovie.outline = detail.InnerText
                            Case "year"
                                newmovie.year = detail.InnerText
                                'Dim allok As Boolean = False
                                'If IO.File.Exists(newmovie.fullpathandfilename) Then
                                fullmovielist.Add(newmovie)
                                filteredlist.Add(newmovie)
                                'End If
                            Case "set"
                                newmovie.movieset = detail.InnerText
                            Case "sortorder"
                                newmovie.sortorder = detail.InnerText
                        End Select

                    Next
            End Select
        Next

        If fullmovielist.Count = 0 Then
            Call rebuildmovies(moviefolders)
            Exit Sub
        End If

        Call sortorder()
        Call loadmovielist()
        Try
            'ignore = False
            ComboBox1.SelectedIndex = 0
            If ComboBox1.SelectedItem.value <> "" Then
                'loadinfofile()
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub rebuildmovies(ByVal folderlist As List(Of String))
        Me.Enabled = False
        dlist.Clear()
        fullmovielist.Clear()
        filteredlist.Clear()

        Call nfos_to_array(moviefolders)
        Call nfos_to_array(userprefs.offlinefolders)
        Try
            For Each movie In fullmovielist
                Try
                    If userprefs.usefoldernames = False Then
                        If movie.filename <> Nothing Then
                            movie.filename = movie.filename.Replace(".nfo", "")
                            Dim tempstring4 As String = ""
                            tempstring4 = movie.fullpathandfilename.ToLower
                        End If
                    End If
                Catch
                    Exit For
                End Try
            Next
        Catch
        End Try
      
        Call savedata()

        Call sortorder()

        Call applyfilters()
        Call loadinfofile()
        Try
            ComboBox1.SelectedIndex = 0
        Catch ex As Exception

        End Try
   
        Me.Enabled = True
    End Sub

    Private Sub videomode1(ByVal tempstring As String)
        Dim action As String
        Dim errors As String
        Try
            Dim myProc As Process = Process.Start(tempstring)
        Catch ex As Exception
            errors = ex.ToString
            action = "Dim myProc As Process = Process.Start(" & tempstring & ")"
            Call errorlog(action, errors)
        End Try
    End Sub

    Private Sub videomode2(ByVal tempstring As String)
        Dim action As String
        Dim errors As String
        Try
            Dim thePSI As New System.Diagnostics.ProcessStartInfo("wmplayer")
            thePSI.Arguments = """" & tempstring & """"
            System.Diagnostics.Process.Start(thePSI)
        Catch ex As Exception
            errors = ex.ToString
            action = "Dim thePSI As New System.Diagnostics.ProcessStartInfo(""wmplayer"")" & vbCrLf & "thePSI.Arguments = "" & tempstring & """ & vbCrLf & "System.Diagnostics.Process.Start(thePSI)"
            Call errorlog(action, errors)
        End Try
    End Sub

    Private Sub videomode4(ByVal tempstring As String)
        Dim action As String
        Dim errors As String
        Try
            Dim myProc As Process = Process.Start("""" & userprefs.selectedvideoplayer & """", """" & tempstring & """")
        Catch ex As Exception
            errors = ex.ToString
            action = "Dim myProc As Process = Process.Start(""" & userprefs.selectedvideoplayer & """," & """" & tempstring & """)"
            Call errorlog(action, errors)
        End Try
    End Sub

    Private Sub errorlog(ByVal action As String, Optional ByVal errors As String = "")
        Dim errpath As String = applicationpath & "\error.log"
        Try

            Dim objWriter As New System.IO.StreamWriter(errpath, True)
            objWriter.WriteLine(errors)
            objWriter.WriteLine(action)
            objWriter.WriteLine() '(Chr(13))
            objWriter.Close()
        Catch ex As Exception
            MsgBox("Error, cant write to " & errpath & vbCrLf & vbCrLf & ex.ToString)
        End Try

    End Sub

    Public Sub tvrebuildlog(ByVal action As String, Optional ByVal errors As String = "", Optional ByVal clear As Boolean = False)
        If userprefs.tvshowrebuildlog = False Then
            Exit Sub
        End If

        Dim errpath As String = IO.Path.Combine(applicationpath, "tvrebuild.log")
        If clear = True Then
            If IO.File.Exists(errpath) Then
                Try
                    IO.File.Delete(errpath)
                Catch ex As Exception
                    MsgBox("Error deleting: " & errpath & vbCrLf & vbCrLf & ex.ToString)
                End Try
            End If
        End If
        Try

            Dim objWriter As New System.IO.StreamWriter(errpath, True)
            objWriter.WriteLine(action)
            If errors <> "" Then
                objWriter.WriteLine(errors)
            End If
            'objWriter.WriteLine() '(Chr(13))
            'objWriter.WriteLine()
            objWriter.Close()
        Catch ex As Exception
            MsgBox("Error, cant write to " & errpath & vbCrLf & vbCrLf & ex.ToString)
        End Try

    End Sub

    Private Sub _Downloader_FileDownloadSizeObtained(ByVal iFileSize As Long) Handles _Downloader.FileDownloadSizeObtained
        ProgBar.Value = 0
        ProgBar.Maximum = Convert.ToInt32(iFileSize)
    End Sub

    'FIRES WHEN DOWNLOAD IS COMPLETE
    Private Sub _Downloader_FileDownloadComplete() Handles _Downloader.FileDownloadComplete
        ProgBar.Value = ProgBar.Maximum
        ' message_box.Show("File Download Complete")
        trailerdownloadpanel.Visible = False
        lblProgress.Text = " Please Wait, attempting to connect....."
        Button3.Text = "Play Trailer"
    End Sub

    'FIRES WHEN DOWNLOAD FAILES. PASSES IN EXCEPTION INFO
    Private Sub _Downloader_FileDownloadFailed(ByVal ex As System.Exception) Handles _Downloader.FileDownloadFailed
        'message_box.Show("An error has occured during download: " & ex.Message)
    End Sub

    'FIRES WHEN MORE OF THE FILE HAS BEEN DOWNLOADED
    Private Sub _Downloader_AmountDownloadedChanged(ByVal iNewProgress As Long) Handles _Downloader.AmountDownloadedChanged
        ProgBar.Value = Convert.ToInt32(iNewProgress)
        lblProgress.Text = WebFileDownloader.FormatFileSize(iNewProgress) & " of " & WebFileDownloader.FormatFileSize(ProgBar.Maximum) & " downloaded"
        ProgBar.Refresh()
        lblProgress.Refresh()
        Application.DoEvents()
    End Sub

    Private Sub ToolStripButton1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Call preferences()
    End Sub

    Private Sub preferences()
        'If formsize2 = False Then options.chk_rememberformsize.CheckState = CheckState.Unchecked
        Dim movielistcheck As New List(Of String)
        Dim tvlistcheck As New List(Of String)

        For Each folder In moviefolders
            movielistcheck.Add(folder)
        Next

        For Each folder In tvfolders
            tvlistcheck.Add(folder)
        Next

        Dim save As New _preferences
        'Call save.saveconfig()
        Dim MyFormObject As New frmOptions
        MyFormObject.ShowDialog()

        Call saveregex()

        Dim load As New _preferences
        userprefs.moviesets.Clear()
        moviefolders.Clear()
        tvfolders.Clear()
        Call load.loadconfig()
        Dim result As Boolean = True

        If movielistcheck.Count <> moviefolders.Count Then
            result = False
        End If

        If result = True Then
            For f = 0 To movielistcheck.Count - 1
                If movielistcheck(f) <> moviefolders(f) Then
                    result = False
                    Exit For
                End If
            Next
        End If

        If result = False Then
            Dim messbox As message_box = New message_box("Please wait, Movie Folders have Changed", "", "Rebuilding Movie DB")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            Me.Refresh()
            messbox.Refresh()
            Call rebuildmovies(moviefolders)
            messbox.Close()
        End If

        result = True
        If tvlistcheck.Count <> tvfolders.Count Then
            result = False
        End If
        If result = True Then
            For f = 0 To tvlistcheck.Count - 1
                If tvlistcheck(f) <> tvfolders(f) Then
                    result = False
                    Exit For
                End If
            Next
        End If
        If result = False Then
            Dim messbox As message_box = New message_box("Please wait, TV Folders have Changed", "", "Rebuilding TV DB")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            Me.Refresh()
            messbox.Refresh()
            Call rebuildtvshows()
            messbox.Close()
        End If


    End Sub

    Private Function getmovietags(ByVal text As String, ByVal movie As ComboList, ByVal counter As Integer, Optional ByVal thumbpath As String = "")
        If text.IndexOf("<<smallimage>>") And thumbpath <> "" Then
            Dim filename As String = filefunction.GetCRC32(movie.fullpathandfilename)
            If IO.File.Exists(IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")) Then
                Try
                    IO.File.Copy(IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg"), IO.Path.Combine(thumbpath, filename & ".jpg"))
                Catch
                End Try
                Try
                    text = text.Replace("<<smallimage>>", "images/" & filename & ".jpg")
                Catch ex As Exception
                    MsgBox(ex.ToString)
                End Try
                Dim tempstring As String = text
            Else
                If IO.File.Exists(filefunction.getposterpath(movie.fullpathandfilename)) Then
                    Try
                        Dim bitmap As New Bitmap(filefunction.getposterpath(movie.fullpathandfilename))
                        Dim bitmap2 As New Bitmap(bitmap)
                        bitmap.Dispose()
                        bitmap2 = imagefunctions.ResizeImage(bitmap2, 150, 200)
                        bitmap2.Save(IO.Path.Combine(thumbpath, filename & ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg)
                    Catch
                    End Try
                Else
                    Try
                        Dim bitmap As New Bitmap(defaultposter)
                        Dim bitmap2 As New Bitmap(bitmap)
                        bitmap.Dispose()
                        bitmap2 = imagefunctions.ResizeImage(bitmap2, 150, 200)
                        bitmap2.Save(IO.Path.Combine(thumbpath, filename & ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg)
                    Catch
                    End Try
                End If
            End If
            '<img border="0" src="images/tt1175491.jpg" width="150" height="200">
            text = text.Replace("<<smallimage>>", "images/" & filename & ".jpg")
        End If


        If text.IndexOf("<<fullplot>>") <> -1 Or text.IndexOf("<<director>>") <> -1 Or text.IndexOf("<<writer>>") <> -1 Or text.IndexOf("<<moviegenre>>") <> -1 Then
            Dim newplotdeetails As FullMovieDetails
            newplotdeetails = nfofunction.loadfullmovienfo(movie.fullpathandfilename)
            If text.IndexOf("<<fullplot>>") <> -1 Then
                text = text.Replace("<<fullplot>>", newplotdeetails.fullmoviebody.plot)
            End If
            If text.IndexOf("<<director>>") <> -1 Then
                text = text.Replace("<<director>>", newplotdeetails.fullmoviebody.director)
            End If
            If text.IndexOf("<<writer>>") <> -1 Then
                text = text.Replace("<<writer>>", newplotdeetails.fullmoviebody.credits)
            End If
            If text.IndexOf("<<moviegenre>>") <> -1 Then
                text = text.Replace("<<moviegenre>>", newplotdeetails.fullmoviebody.genre)
            End If
        End If
        Try
            text = text.Replace("<<moviecount>>", filteredlist.Count.ToString)
        Catch
            text = text.Replace("<<moviecount>>", "0000")
        End Try
        Try
            text = text.Replace("<<counter>>", counter.ToString)
        Catch
        End Try
        If movie.title <> Nothing Then
            text = text.Replace("<<title>>", movie.title)
        Else
            text = text.Replace("<<title>>", "")
        End If
        If movie.title <> Nothing And movie.year <> Nothing Then
            text = text.Replace("<<movietitleandyear>>", movie.title & " (" & movie.year.ToString & ")")
        ElseIf movie.title <> Nothing And movie.year = Nothing Then
            text = text.Replace("<<movietitleandyear>>", movie.title & " (0000)")
        ElseIf movie.title = Nothing And movie.year <> Nothing Then
            text = text.Replace("<<movietitleandyear>>", "" & " (" & movie.year.ToString & ")")
        End If
        If movie.runtime <> Nothing Then
            text = text.Replace("<<runtime>>", movie.runtime)
        Else
            text = text.Replace("<<runtime>>", "")
        End If
        If movie.rating <> Nothing Then
            text = text.Replace("<<rating>>", movie.rating)
        Else
            text = text.Replace("<<rating>>", "")
        End If
        If movie.outline <> Nothing Then
            text = text.Replace("<<outline>>", movie.outline)
        Else
            text = text.Replace("<<outline>>", "")
        End If
        If movie.id <> Nothing Then
            text = text.Replace("<<imdb_url>>", userprefs.imdbmirror & "title/" & movie.id & "/")
        Else
            text = text.Replace("<<imdb_url>>", userprefs.imdbmirror)
        End If
        If movie.fullpathandfilename <> Nothing Then
            text = text.Replace("<<fullpathandfilename>>", movie.fullpathandfilename)
        Else
            text = text.Replace("<<fullpathandfilename>>", "")
        End If
        If movie.year <> Nothing Then
            text = text.Replace("<<movieyear>>", movie.year)
        Else
            text = text.Replace("<<movieyear>>", "")
        End If

        Return text
    End Function

    Private Sub BckWrkScnMovies_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles BckWrkScnMovies.DoWork
        'ToolStripButton10.Visible = True
        globalthreadcounter += 1
        Call startnewmovies()
    End Sub

    Private Sub BckWrkScnMovies_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles BckWrkScnMovies.ProgressChanged
        If scrapeandquit = False Then
            If e.ProgressPercentage <> 999999 Then
                ToolStripProgressBar1.Value = e.ProgressPercentage
                ToolStripProgressBar1.ProgressBar.Refresh()
                ToolStripProgressBar1.ProgressBar.PerformStep()
                ToolStripStatusLabel1.Text = e.UserState
            Else
                Call applyfilters()
            End If
        End If
    End Sub

    Private Sub BckWrkScnMovies_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles BckWrkScnMovies.RunWorkerCompleted
        If scrapeandquit = True Then
            Me.Close()
        End If


        If Not (e.Error Is Nothing) Then
            scraperlog = scraperlog & vbCrLf
            scraperlog = scraperlog & "Error, exiting movie scraper" & vbCrLf
            scraperlog = scraperlog & "Error:-" & vbCrLf
            scraperlog = scraperlog & e.Error.ToString & vbCrLf
        End If


        ToolStripProgressBar1.Value = 0
        ToolStripProgressBar1.ProgressBar.Refresh()
        ToolStripProgressBar1.Visible = False
        ToolStripStatusLabel1.Text = "Movie Scan Progress"
        ToolStripStatusLabel1.Visible = False
        TabPage14.Text = "Search for new movies"
        TabPage14.ToolTipText = "Scan movie folders for new media files"
        If userprefs.disablelogfiles = False Then
            Dim MyFormObject As New frmoutputlog(scraperlog, True)
            Try
                MyFormObject.ShowDialog()
            Catch ex As ObjectDisposedException
            End Try
        End If

        globalthreadcounter -= 1
        Call checkforrunningthreads()

    End Sub

    Private Sub checkforrunningthreads()
        'If globalthreadcounter = 0 Then
        '    ToolStripButton10.Visible = False
        'Else
        '    ToolStripButton10.Visible = True
        'End If
    End Sub

    Private Sub btnmoviescrapercancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        BckWrkScnMovies.CancelAsync()
    End Sub

    Private Sub ToolStripButton2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If outlinetxt.Text = "MC cannot find this file, either the file no longer exists, or MC cannot access the file path" Then
            MsgBox("MC cannot find this file, either the file no longer exists, or MC cannot access the file path")
            Exit Sub
        End If
        Dim t As New frmCoverArt
        t.ShowDialog()
    End Sub

    Private Sub ToolStripButton9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If outlinetxt.Text = "MC cannot find this file, either the file no longer exists, or MC cannot access the file path" Then
            MsgBox("MC cannot find this file, either the file no longer exists, or MC cannot access the file path")
            Exit Sub
        End If
        Dim t As New frmMovieFanart
        t.ShowDialog()
        Try
            If IO.File.Exists(workingmoviedetails.fileinfo.fanartpath) Then
                PictureBox7.ImageLocation = workingmoviedetails.fileinfo.fanartpath
            Else
                PictureBox7.Image = Nothing
            End If

        Catch
        End Try
    End Sub

    'paypal
    Private Sub ToolStripButton11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Dim webAddress As String = "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=4696771"
        Process.Start(webAddress)
    End Sub

    Private Sub exitallthreads()
        Dim busy As Boolean = False
        Try
            If bckgrounddroppedfiles.IsBusy Then
                busy = True
                bckgrounddroppedfiles.CancelAsync()
            End If
            If bckgroundfanart.IsBusy Then
                busy = True
                bckgroundfanart.CancelAsync()
            End If
            If bckgroundscanepisodes.IsBusy Then
                busy = True
                bckgroundscanepisodes.CancelAsync()
            End If
            If bckgrounddroppedfiles.IsBusy Then
                busy = True
                bckgrounddroppedfiles.CancelAsync()
            End If
            If bckrescrapewizard.IsBusy Then
                busy = True
                bckrescrapewizard.CancelAsync()
            End If
            If BckWrkScnMovies.IsBusy Then
                busy = True
                BckWrkScnMovies.CancelAsync()
            End If
            If bckepisodethumb.IsBusy Then
                busy = True
                bckepisodethumb.CancelAsync()
            End If

            Dim exitnowok As Boolean = False
            If busy = True Then
                messbox.TextBox1.Text = "Please Wait"
                messbox.TextBox2.Text = ""
                messbox.TextBox3.Text = "Stopping threads when it is Safe to do so"
                messbox.Refresh()
                messbox.Visible = True
            End If
            Do Until busy = False
                If Not bckgroundfanart.IsBusy And Not bckepisodethumb.IsBusy And Not bckgroundscanepisodes.IsBusy And Not bckgrounddroppedfiles.IsBusy And Not bckrescrapewizard.IsBusy And Not BckWrkScnMovies.IsBusy Then
                    busy = False
                    Exit Do
                End If
                Threading.Thread.Sleep(100)
                Application.DoEvents()
            Loop
            messbox.Visible = False
        Catch
        Finally

        End Try
    End Sub

    Private Sub ToolStripButton10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Call exitallthreads()
    End Sub

    Public Sub setuppreferences()
        userprefs.ignorearticle = False
        userprefs.movies_useXBMC_Scraper = False
        userprefs.tvshow_useXBMC_Scraper = False
        userprefs.eprenamelowercase = False
        userprefs.intruntime = False
        userprefs.autorenameepisodes = False
        userprefs.autoepisodescreenshot = False
        userprefs.tvshowautoquick = False
        userprefs.actorseasy = True
        userprefs.copytvactorthumbs = True
        userprefs.startuptab = 0
        userprefs.font = "Times New Roman, 9pt"
        userprefs.moviedefaultlist = 0
        userprefs.moviesortorder = 0
        userprefs.enabletvhdtags = True
        userprefs.tvshowrebuildlog = False
        userprefs.seasonall = "none"
        userprefs.tvrename = 0
        userprefs.externalbrowser = False
        userprefs.videoplaybackmode = "1"
        userprefs.backgroundcolour = "Silver"
        userprefs.forgroundcolour = "#D3D9DC"
        userprefs.formheight = "600"
        userprefs.formwidth = "800"
        userprefs.fanartnotstacked = False
        userprefs.posternotstacked = False
        userprefs.disablelogfiles = False
        userprefs.startupcache = True
        userprefs.rarsize = True = "8"
        userprefs.ignoreactorthumbs = False
        userprefs.actorsave = False
        userprefs.actorsavepath = ""
        userprefs.actornetworkpath = ""
        userprefs.tvfanart = True
        userprefs.tvposter = True
        userprefs.postertype = "poster"
        userprefs.downloadtvseasonthumbs = True
        userprefs.usefanart = True
        userprefs.ignoretrailers = False
        userprefs.keepfoldername = False
        userprefs.enablehdtags = True
        userprefs.renamenfofiles = False
        userprefs.checkinfofiles = True
        userprefs.savefanart = True
        userprefs.scrapemovieposters = True
        userprefs.dontdisplayposter = False
        userprefs.resizefanart = 1
        userprefs.overwritethumbs = False
        userprefs.startupmode = 1
        userprefs.maxactors = 9999
        userprefs.maxmoviegenre = 99
        userprefs.usetransparency = False
        userprefs.transparencyvalue = 255
        userprefs.defaulttvthumb = "poster"
        userprefs.imdbmirror = "http://www.imdb.com/"
        userprefs.usefoldernames = False
        userprefs.createfolderjpg = False
        userprefs.basicsavemode = False               'movie.nfo, movie.tbn, fanart.jpg
        userprefs.namemode = "1"
        userprefs.tvdblanguage = "English"
        userprefs.tvdblanguagecode = "en"
        userprefs.sortorder = "default"
        userprefs.tvdbactorscrape = 0
        userprefs.maximumthumbs = 10
        userprefs.gettrailer = False
        ReDim userprefs.certificatepriority(33)
        userprefs.certificatepriority(0) = "MPAA"
        userprefs.certificatepriority(1) = "UK"
        userprefs.certificatepriority(2) = "USA"
        userprefs.certificatepriority(3) = "Ireland"
        userprefs.certificatepriority(4) = "Australia"
        userprefs.certificatepriority(5) = "New Zealand"
        userprefs.certificatepriority(6) = "Norway"
        userprefs.certificatepriority(7) = "Singapore"
        userprefs.certificatepriority(8) = "South Korea"
        userprefs.certificatepriority(9) = "Philippines"
        userprefs.certificatepriority(10) = "Brazil"
        userprefs.certificatepriority(11) = "Netherlands"
        userprefs.certificatepriority(12) = "Malaysia"
        userprefs.certificatepriority(13) = "Argentina"
        userprefs.certificatepriority(14) = "Iceland"
        userprefs.certificatepriority(15) = "Canada (Quebec)"
        userprefs.certificatepriority(16) = "Canada (British Columbia/Ontario)"
        userprefs.certificatepriority(17) = "Canada (Alberta/Manitoba/Nova Scotia)"
        userprefs.certificatepriority(18) = "Peru"
        userprefs.certificatepriority(19) = "Sweden"
        userprefs.certificatepriority(20) = "Portugal"
        userprefs.certificatepriority(21) = "South Africa"
        userprefs.certificatepriority(22) = "Denmark"
        userprefs.certificatepriority(23) = "Hong Kong"
        userprefs.certificatepriority(24) = "Finland"
        userprefs.certificatepriority(25) = "India"
        userprefs.certificatepriority(26) = "Mexico"
        userprefs.certificatepriority(27) = "France"
        userprefs.certificatepriority(28) = "Italy"
        userprefs.certificatepriority(29) = "Switzerland (canton of Vaud)"
        userprefs.certificatepriority(30) = "Switzerland (canton of Geneva)"
        userprefs.certificatepriority(31) = "Germany"
        userprefs.certificatepriority(32) = "Greece"
        userprefs.certificatepriority(33) = "Austria"
        ReDim userprefs.moviethumbpriority(3)
        userprefs.moviethumbpriority(0) = "Internet Movie Poster Awards"
        userprefs.moviethumbpriority(1) = "themoviedb.org"
        userprefs.moviethumbpriority(2) = "Movie Poster DB"
        userprefs.moviethumbpriority(3) = "IMDB"
        userprefs.maximagecount = 10
        userprefs.lastpath = Application.StartupPath
        userprefs.videomode = 1
        userprefs.locx = 0
        userprefs.locy = 0
        userprefs.formheight = 725
        userprefs.formwidth = 1060
        moviefolders.Clear()
        tvfolders.Clear()
        userprefs.splt5 = 0
        generalprefschanged = False
    End Sub

    Private Sub actorcb_MouseEnter(ByVal sender As Object, ByVal e As System.EventArgs) Handles actorcb.MouseEnter
        actorcb.Focus()
    End Sub

    'Browse Actors
    Private Sub actorcb_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles actorcb.SelectedIndexChanged


        For Each actor In workingmoviedetails.listactors
            If actor.actorname = actorcb.SelectedItem Then
                If actor.actorrole <> "" Then
                    roletxt.Text = actor.actorrole
                End If
                Dim temppath As String = workingmoviedetails.fileinfo.fullpathandfilename.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename), "")
                Dim tempname As String = actor.actorname.Replace(" ", "_") & ".tbn"
                temppath = temppath & ".actors\" & tempname
                If IO.File.Exists(temppath) Then
                    PictureBox1.ImageLocation = temppath
                    Exit Sub
                End If
                If actor.actorthumb <> Nothing Then
                    Dim actorthumbpath As String = filefunction.getactorthumbpath(actor.actorthumb)
                    If actorthumbpath <> "none" Then
                        If IO.File.Exists(actorthumbpath) Or actorthumbpath.ToLower.IndexOf("http") <> -1 Then
                            PictureBox1.ImageLocation = actorthumbpath
                        Else
                            PictureBox1.ImageLocation = defaultactor
                        End If
                    Else
                        PictureBox1.ImageLocation = defaultactor
                    End If
                Else
                    PictureBox1.ImageLocation = defaultactor
                End If
                Exit For
            Else
                PictureBox1.ImageLocation = defaultactor
            End If
        Next
    End Sub

    Private Sub ApplyFilters(Optional ByVal Filter As String = "blabla")
        Monitor.Enter(Me)
        Try
            Dim tempint2 As Integer = filteredlist.Count - 1
            For f = tempint2 To 0 Step -1
                filteredlist.RemoveAt(f)
            Next
            Dim dupes2 As Boolean = False
            Dim top250 As Boolean = False
            Dim offline As Boolean = False
            Dim watched As Boolean = False
            Dim unwatched As Boolean = False
            Dim missposters As Boolean = False
            Dim missfanart As Boolean = False
            Dim oktoadd As Boolean = True
            Dim tempint As Integer = fullmovielist.Count - 1

            For f = 0 To tempint
                dupes2 = False
                offline = False
                top250 = False
                watched = False
                unwatched = False
                missposters = False
                missfanart = False
                oktoadd = True
                If Filter.ToLower = "duplicates" Then dupes2 = True
                If Filter.ToLower = "offline movies" Then offline = True
                If Filter.ToLower = "watched" Then watched = True
                If Filter.ToLower = "unwatched" Then unwatched = True
                If Filter.ToLower = "missing posters" Then missposters = True
                If Filter.ToLower = "missing fanart" Then missfanart = True
                If oktoadd = True And top250 = True Then
                    If fullmovielist(f).top250 = "0" Then
                        oktoadd = False
                    End If
                End If
                If oktoadd = True And missposters = True Then
                    If fullmovielist(f).missingdata1 <> 2 And fullmovielist(f).missingdata1 <> 3 Then
                        oktoadd = False
                    End If
                End If
                If oktoadd = True And missfanart = True Then
                    If fullmovielist(f).missingdata1 <> 1 And fullmovielist(f).missingdata1 <> 3 Then
                        oktoadd = False
                    End If
                End If
                If oktoadd = True And watched = True Then
                    If fullmovielist(f).playcount <> Nothing Then
                        If Convert.ToInt32(fullmovielist(f).playcount) = 0 Then
                            oktoadd = False
                        End If
                    Else
                        oktoadd = False
                    End If
                Else
                End If
                If oktoadd = True And unwatched = True Then
                    If fullmovielist(f).playcount <> Nothing Then
                        If Convert.ToInt32(fullmovielist(f).playcount) <> 0 Then
                            oktoadd = False
                        End If
                    End If
                End If
                If oktoadd = True And offline = True Then
                    For Each paths In userprefs.offlinefolders
                        If fullmovielist(f).fullpathandfilename.IndexOf(paths) = -1 Then
                            oktoadd = False
                            Exit For
                        End If
                    Next
                End If
                If oktoadd = True Then
                    filteredlist.Add(fullmovielist(f))
                End If
            Next
            Dim add As Boolean = False
            Dim newlist As New List(Of ComboList)
            For Each movie In filteredlist
                Dim tempstring As String
                If RadioButton1.Checked = True And ComboBox10.SelectedItem = "List" Then tempstring = movie.titleandyear.ToLower
                If RadioButton2.Checked = True And ComboBox10.SelectedItem = "List" Then tempstring = movie.filename.ToLower
                If RadioButton6.Checked = True And ComboBox10.SelectedItem = "List" Then tempstring = movie.foldername.ToLower
                If RadioButton19.Checked = True And ComboBox10.SelectedItem = "List" Then tempstring = movie.sortorder.ToLower
                If ComboBox10.SelectedItem = "Outline" Then tempstring = movie.outline
                If ComboBox10.SelectedItem = "Year" Then tempstring = movie.year
                If ComboBox10.SelectedItem = "IMDB ID" Then tempstring = movie.id
                If ComboBox10.SelectedItem = "Filename" Then tempstring = movie.filename
                If ComboBox10.SelectedItem = "Foldername" Then tempstring = movie.foldername
                If ComboBox10.SelectedItem = "Genre" Then tempstring = movie.genre
                If ComboBox10.SelectedItem = "Rating" Then tempstring = movie.rating
                If ComboBox10.SelectedItem = "Runtime" Then tempstring = movie.runtime
                If TextBox1.Text = "" And txt_titlesearch.Text = "" Then
                    add = True
                ElseIf TextBox1.Text <> "" And txt_titlesearch.Text = "" Then
                    If tempstring.ToLower.IndexOf(TextBox1.Text.ToLower) = 0 Then
                        add = True
                    End If
                ElseIf TextBox1.Text = "" And txt_titlesearch.Text <> "" Then
                    If tempstring.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                        add = True
                    End If
                ElseIf TextBox1.Text <> "" And txt_titlesearch.Text <> "" Then
                    If tempstring.ToLower.IndexOf(TextBox1.Text.ToLower) = 0 And tempstring.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                        add = True
                    End If
                End If
                If add = True Then
                    add = False
                    newlist.Add(movie)
                End If
            Next
            filteredlist = newlist
            '----------------------------------------------------------------------------------------------------
            Dim ValuetoSearch As String = ComboBox11.SelectedItem.ToString.ToLower
            Dim newlist1 As New List(Of ComboList)
            For Each movie In filteredlist
                Select Case ValuetoSearch.ToLower
                    Case "all"
                        TextBox_GenreFilter.Enabled = True
                        newlist1.Add(movie)
                    Case "dvdrip"
                        If movie.filename.ToLower.IndexOf("dvdrip") <> -1 Then
                            newlist1.Add(movie)
                        End If
                    Case "dvdr5"
                        If (movie.filename.ToLower.IndexOf("dvdr5") <> -1) Or (movie.filename.ToLower.IndexOf(".r5") <> -1) Then
                            newlist1.Add(movie)
                        End If
                    Case "dvdscreener"
                        If (movie.filename.ToLower.IndexOf("dvdscreener") <> -1) Or (movie.filename.ToLower.IndexOf("dvdscr") <> -1) Or _
                        (movie.filename.ToLower.IndexOf("screener") <> -1) Then
                            newlist1.Add(movie)
                        End If
                    Case "bluray"
                        If (movie.filename.ToLower.IndexOf("bluray") <> -1) Or (movie.filename.ToLower.IndexOf("brrip") <> -1) Or _
                        (movie.filename.ToLower.IndexOf("bdrip") <> -1) Then
                            newlist1.Add(movie)
                        End If
                    Case "telesync"
                        If (movie.filename.ToLower.IndexOf("telesync") <> -1) Or (movie.filename.ToLower.IndexOf(".ts") <> -1) Then
                            newlist1.Add(movie)
                        End If
                    Case "cam"
                        If (movie.filename.ToLower.IndexOf("cam") <> -1) Then
                            newlist1.Add(movie)
                        End If
                    Case "pdtv"
                        If (movie.filename.ToLower.IndexOf("pdtv") <> -1) Or (movie.filename.ToLower.IndexOf("ppvrip") <> -1) Then
                            newlist1.Add(movie)
                        End If
                End Select
            Next
            filteredlist = newlist1

            '----------------------------------------------------------------------------------------------------


            Dim genres As New List(Of String)
            Dim newlist2 As New List(Of ComboList)
            TextBox_GenreFilter.Text = ""
            For Each CheckBox In CheckedListBox1.CheckedItems
                genres.Add(CheckBox.ToString.ToLower)
                If Len(TextBox_GenreFilter.Text) = 0 Then
                    TextBox_GenreFilter.Text = CheckBox.ToString
                Else
                    TextBox_GenreFilter.Text = TextBox_GenreFilter.Text & ", " & CheckBox.ToString
                End If
                If CheckBox.ToString.ToLower = "duplicates" Then dupes2 = True
            Next
            If genres.Count = 0 Then TextBox_GenreFilter.Text = "Genre Filter (AND)"
            oktoadd = True
            tempint = filteredlist.Count - 1
            For f = 0 To tempint
                top250 = False
                watched = False
                unwatched = False
                oktoadd = True
                For Each gen In genres
                    If gen <> Nothing Then
                        If filteredlist(f).genre.ToLower.IndexOf(gen) = -1 Then
                            oktoadd = False
                        End If
                    End If
                Next
                If oktoadd = True Then
                    newlist2.Add(filteredlist(f))
                End If
            Next
            filteredlist = newlist2
            '----------------------------------------------------------------------------------------------------
            If dupes2 = True Then
                Dim dupelist As New List(Of ComboList)
                For f = 0 To filteredlist.Count - 1
                    For g = 0 To filteredlist.Count - 1
                        If g <> f Then
                            If filteredlist(f).id = filteredlist(g).id And filteredlist(g).id <> "" Then
                                Dim exists As Boolean = False
                                For Each movie In filteredlist
                                    If movie.fullpathandfilename = filteredlist(f).fullpathandfilename Then exists = True
                                    If movie.fullpathandfilename = filteredlist(g).fullpathandfilename Then exists = True
                                Next
                                If exists = False Then
                                    dupelist.Add(filteredlist(f))
                                    dupelist.Add(filteredlist(g))
                                End If
                            End If
                        End If
                    Next
                Next
                filteredlist = dupelist
            End If
            'Call applyotherfilters()
            Call sortorder()
        Catch ex As Exception
            MsgBox(ex.ToString)
        Finally
            Monitor.Exit(Me)
        End Try
    End Sub

    'create list to browse
    Private Sub loadmovielist()
        Dim tempint As Integer = ComboBox1.SelectedIndex
        Dim oldmovie As String = ""
        Try
            oldmovie = CType(ComboBox1.SelectedItem, ValueDescriptionPair).Value
        Catch
        End Try
        ComboBox1.Items.Clear()

        For Each movie In filteredlist
            If RadioButton21.Checked = False And RadioButton7.Checked = False And RadioButton4.Checked = False Then
                If RadioButton1.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.titleandyear))
                ElseIf RadioButton2.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.filename))
                ElseIf RadioButton6.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.foldername))
                End If
            ElseIf RadioButton21.Checked = True Then

                Dim tempstring As String = movie.runtime
                Try
                    If tempstring = "" Then tempstring = "00 mins"
                    tempstring = tempstring.Substring(0, tempstring.IndexOf("min"))
                    tempstring = tempstring.Replace(" ", "")
                    Do Until IsNumeric(tempstring.Substring(0, 1))
                        If Not IsNumeric(tempstring.Substring(0, 1)) Then
                            tempstring = tempstring.Substring(1, tempstring.Length - 1)
                        End If
                    Loop
                    tempstring = tempstring.Replace(" min", "")
                    If IsNumeric(tempstring) Then
                        If tempstring.Length = 1 Then
                            tempstring = "00" & tempstring
                        End If
                        If tempstring.Length = 2 Then
                            tempstring = "0" & tempstring
                        End If
                    Else
                        tempstring = "000"
                    End If
                    tempstring = tempstring & " min - "
                Catch
                    tempstring = "000 min - "
                End Try
                If RadioButton1.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.titleandyear))
                ElseIf RadioButton2.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.filename))
                ElseIf RadioButton6.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.foldername))
                End If
            ElseIf RadioButton7.Checked = True Then
                Dim tempstring As String = movie.rating
                If tempstring = "" Then tempstring = "0.0"
                Try
                    Do Until IsNumeric(tempstring.Substring(0, 1))
                        If Not IsNumeric(tempstring.Substring(0, 1)) Then
                            tempstring = tempstring.Substring(1, tempstring.Length - 1)
                        End If
                    Loop
                Catch
                    tempstring = 0.0
                End Try
                If IsNumeric(tempstring) Then
                    If tempstring.Length = 1 Then
                        tempstring = "0" & tempstring
                    End If
                    If tempstring.Length = 0 Then
                        tempstring = "00" & tempstring
                    End If
                Else
                    tempstring = "00"
                End If
                tempstring = tempstring & " - "
                If RadioButton1.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.titleandyear))
                ElseIf RadioButton2.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.filename))
                ElseIf RadioButton6.Checked = True Then
                    ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.foldername))
                End If
            ElseIf RadioButton4.Checked = True Then
                    Dim tempstring As String = movie.year
                    Try
                        Do Until IsNumeric(tempstring.Substring(0, 1))
                            If Not IsNumeric(tempstring.Substring(0, 1)) Then
                                tempstring = tempstring.Substring(1, tempstring.Length - 1)
                            End If
                        Loop
                    Catch
                        tempstring = "0000"
                    End Try
                    If IsNumeric(tempstring) Then
                        If tempstring.Length = 1 Then
                            tempstring = "0000"
                        End If
                        If tempstring.Length = 0 Then
                            tempstring = "0000" & tempstring
                        End If
                        If tempstring.Length = 3 Then
                            tempstring = "0000"
                        End If
                        If tempstring.Length = 2 Then
                            tempstring = "0000"
                        End If
                    Else
                        tempstring = "0000"
                    End If
                    tempstring = tempstring & " - "
                    If RadioButton1.Checked = True Then
                        ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.title))
                    ElseIf RadioButton2.Checked = True Then
                        ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.filename))
                    ElseIf RadioButton6.Checked = True Then
                        ComboBox1.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring & movie.foldername))
                    End If
            End If

        Next
        If oldmovie <> "" Then
            Dim counted As Integer = ComboBox1.Items.Count - 1
            For f = 0 To counted
                If CType(ComboBox1.Items(f), ValueDescriptionPair).Value = oldmovie Then
                    ComboBox1.SelectedIndex = f
                    Exit For
                End If
            Next
            If ComboBox1.SelectedIndex = -1 Then
                Try
                    ComboBox1.SelectedIndex = tempint
                Catch ex As Exception
                    Try
                        ComboBox1.SelectedIndex = tempint - 1
                    Catch
                        Try
                            ComboBox1.SelectedIndex = 0
                        Catch
                        End Try
                    End Try
                End Try
            End If
        End If
        Label39.Text = "Displaying " & filteredlist.Count & " of " & fullmovielist.Count & " movies"
    End Sub

    'View Title, Filename, or Foldername
    Private Sub sortorder()
        Monitor.Enter(Me)
        'Try
        Dim comboarray2 As New List(Of ComboList)
        If RadioButton3.Checked = True Then
            ListBox2.Items.Clear()
            For Each movie In filteredlist
                If RadioButton1.Checked = True Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.titleandyear))
                ElseIf RadioButton2.Checked = True Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.filename))
                ElseIf RadioButton6.Checked = True Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.foldername))
                End If
            Next
            ListBox2.Sorted = True
            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next
            Next
        End If

        If RadioButton4.Checked = True Then
            ComboBox1.Sorted = False
            ListBox2.Items.Clear()
            For Each movie In filteredlist
                ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.year))
            Next
            ListBox2.Sorted = True

            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next
            Next
        End If

        If RadioButton21.Checked = True Then
            ComboBox1.Sorted = False
            ListBox2.Items.Clear()
            For Each movie In filteredlist
                Dim tempstring As String = movie.runtime
                If tempstring = "" Then tempstring = "00 mins"
                Try
                    tempstring = tempstring.Substring(0, tempstring.IndexOf("min"))
                    tempstring = tempstring.Replace(" ", "")
                    Do Until IsNumeric(tempstring.Substring(0, 1))
                        If Not IsNumeric(tempstring.Substring(0, 1)) Then
                            tempstring = tempstring.Substring(1, tempstring.Length - 1)
                        End If
                    Loop
                    tempstring = tempstring.Replace(" min", "")
                    If IsNumeric(tempstring) Then
                        If tempstring.Length = 1 Then
                            tempstring = "00" & tempstring
                        End If
                        If tempstring.Length = 2 Then
                            tempstring = "0" & tempstring
                        End If
                    Else
                        tempstring = "000"
                    End If
                Catch
                    tempstring = "- mins"
                End Try
                ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, tempstring))
            Next
            ListBox2.Sorted = True

            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next
            Next
        End If




        If RadioButton20.Checked = True Then
            ComboBox1.Sorted = False
            ListBox2.Items.Clear()
            For Each movie In filteredlist
                If IsNumeric(movie.createdate) Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.createdate))
                Else
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.filedate))
                End If
            Next
            ListBox2.Sorted = True

            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next

            Next
        End If



        If RadioButton19.Checked = True Then
            ComboBox1.Sorted = False
            ListBox2.Items.Clear()
            For Each movie In filteredlist
                If movie.sortorder <> Nothing Then
                    If movie.sortorder <> "" Then
                        ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.sortorder))
                    Else
                        ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.title))
                    End If
                Else
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.title))
                End If
            Next
            ListBox2.Sorted = True

            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next
            Next
        End If




        If RadioButton5.Checked = True Then
            ComboBox1.Sorted = False
            ListBox2.Items.Clear()
            For Each movie In filteredlist
                ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.filedate.ToString))
            Next
            ListBox2.Sorted = True


            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next
            Next

        End If
        If RadioButton7.Checked = True Then
            ComboBox1.Sorted = False
            ListBox2.Items.Clear()
            ListBox2.Sorted = False
            For Each movie In filteredlist
                If RadioButton1.Checked = True Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.rating & " - " & movie.title))
                ElseIf RadioButton2.Checked = True Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.rating & " - " & movie.filename))
                ElseIf RadioButton6.Checked = True Then
                    ListBox2.Items.Add(New ValueDescriptionPair(movie.fullpathandfilename, movie.rating & " - " & movie.foldername))
                End If
            Next
            ListBox2.Sorted = True
            ComboBox1.Sorted = False

            For Each movie In ListBox2.Items
                For Each film In filteredlist
                    If film.fullpathandfilename Is CType(movie, ValueDescriptionPair).Value Then
                        comboarray2.Add(film)
                        Exit For
                    End If
                Next
            Next

        End If
        'filteredlist.Clear()

        If RadioButton5.Checked = False And RadioButton4.Checked = False And RadioButton7.Checked = False And RadioButton20.Checked = False Then
            If btnreverse.CheckState = CheckState.Unchecked Then
                filteredlist = comboarray2
            Else
                filteredlist.Clear()
                For f = comboarray2.Count - 1 To 0 Step -1
                    Dim movietoadd As New ComboList
                    movietoadd.fullpathandfilename = comboarray2(f).fullpathandfilename
                    movietoadd.titleandyear = comboarray2(f).titleandyear
                    movietoadd.filename = comboarray2(f).filename
                    movietoadd.year = comboarray2(f).year
                    movietoadd.filedate = comboarray2(f).filedate
                    movietoadd.foldername = comboarray2(f).foldername
                    movietoadd.runtime = comboarray2(f).runtime
                    movietoadd.outline = comboarray2(f).outline
                    movietoadd.rating = comboarray2(f).rating
                    If comboarray2(f).sortorder = Nothing Then
                        movietoadd.sortorder = comboarray2(f).sortorder
                    ElseIf comboarray2(f).sortorder = "" Then
                        movietoadd.sortorder = comboarray2(f).sortorder
                    Else
                        movietoadd.sortorder = comboarray2(f).sortorder
                    End If
                    movietoadd.createdate = comboarray2(f).createdate
                    movietoadd.id = comboarray2(f).id
                    movietoadd.genre = comboarray2(f).genre
                    movietoadd.sortorder = comboarray2(f).sortorder
                    movietoadd.title = comboarray2(f).title
                    movietoadd.movieset = comboarray2(f).movieset
                    movietoadd.filedate = comboarray2(f).filedate

                    filteredlist.Add(movietoadd)
                Next
            End If
        Else
            If btnreverse.CheckState = CheckState.Checked Then
                filteredlist = comboarray2
            Else
                filteredlist.Clear()
                For f = comboarray2.Count - 1 To 0 Step -1
                    Dim movietoadd As New ComboList
                    movietoadd.fullpathandfilename = comboarray2(f).fullpathandfilename
                    movietoadd.titleandyear = comboarray2(f).titleandyear
                    movietoadd.filename = comboarray2(f).filename
                    movietoadd.year = comboarray2(f).year
                    movietoadd.filedate = comboarray2(f).filedate
                    movietoadd.foldername = comboarray2(f).foldername
                    movietoadd.rating = comboarray2(f).rating
                    movietoadd.top250 = comboarray2(f).top250
                    movietoadd.createdate = comboarray2(f).createdate
                    movietoadd.id = comboarray2(f).id
                    movietoadd.outline = comboarray2(f).outline
                    movietoadd.rating = comboarray2(f).rating
                    movietoadd.genre = comboarray2(f).genre
                    movietoadd.runtime = comboarray2(f).runtime
                    movietoadd.title = comboarray2(f).title
                    If comboarray2(f).sortorder = Nothing Then
                        movietoadd.sortorder = comboarray2(f).sortorder
                    ElseIf comboarray2(f).sortorder = "" Then
                        movietoadd.sortorder = comboarray2(f).sortorder
                    Else
                        movietoadd.sortorder = comboarray2(f).sortorder
                    End If
                    movietoadd.movieset = comboarray2(f).movieset
                    movietoadd.filedate = comboarray2(f).filedate
                    filteredlist.Add(movietoadd)
                Next
            End If
        End If
        loadmovielist()
        'Catch
        'Finally
        Monitor.Exit(Me)
        'End Try

    End Sub

    'zoom images
    Private Sub moviethumb_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles moviethumb.DoubleClick
        If workingmoviedetails.fileinfo.posterpath <> Nothing Then
            If IO.File.Exists(workingmoviedetails.fileinfo.posterpath) Then
                Me.ControlBox = False
                MenuStrip1.Enabled = False
                'ToolStrip1.Enabled = False
                Dim newimage As New Bitmap(workingmoviedetails.fileinfo.posterpath)
                Call zoomimage(newimage)
            End If
        End If
    End Sub

    Private Sub PictureBox7_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles PictureBox7.DoubleClick
        If workingmoviedetails.fileinfo.fanartpath <> Nothing Then
            If IO.File.Exists(workingmoviedetails.fileinfo.fanartpath) Then
                Me.ControlBox = False
                MenuStrip1.Enabled = False
                'ToolStrip1.Enabled = False
                Dim newimage As New Bitmap(workingmoviedetails.fileinfo.fanartpath)
                Call zoomimage(newimage)
            End If
        End If
    End Sub

    Private Sub zoomimage(ByVal file As Bitmap)
        bigpanel = New Panel
        With bigpanel
            .Width = Me.Width
            .Height = Me.Height
            .BringToFront()
            .Dock = DockStyle.Fill
        End With

        bigpicbox = New PictureBox()

        With bigpicbox
            .Location = New Point(0, 0)
            .Width = bigpanel.Width
            .Height = bigpanel.Height
            .SizeMode = PictureBoxSizeMode.Zoom
            '.Image = sender.image
            .Image = file
            .Visible = True
            .BorderStyle = BorderStyle.Fixed3D
            AddHandler bigpicbox.DoubleClick, AddressOf closepicbox
            .Dock = DockStyle.Fill
        End With

        'Dim sizex As Integer = bigpicbox.Width
        'Dim sizey As Integer = bigpicbox.Height

        Dim bigpanellabel As Label
        bigpanellabel = New Label
        With bigpanellabel
            .Location = New Point(20, 200)
            .Width = 150
            .Height = 50
            .Visible = True
            .Text = "Double Click Image To" & vbCrLf & "Return To Browser"
            '   .BringToFront()
        End With

        Me.bigpanel.Controls.Add(bigpanellabel)
        bigpanellabel.BringToFront()
        Application.DoEvents()



        If Not bigpicbox.Image Is Nothing And bigpicbox.Image.Width > 20 Then

            Dim sizey As Integer = bigpicbox.Image.Height
            Dim sizex As Integer = bigpicbox.Image.Width
            Dim tempstring As String
            tempstring = "Full Image Resolution :- " & sizex.ToString & " x " & sizey.ToString
            Dim resolutionlbl As New Label
            With resolutionlbl
                .Location = New Point(20, 450)
                .Width = 180
                .Text = tempstring
                .BackColor = Color.Transparent
            End With

            Me.bigpanel.Controls.Add(resolutionlbl)
            resolutionlbl.BringToFront()
            Me.Refresh()
            Application.DoEvents()
            Dim tempstring2 As String = resolutionlbl.Text
        Else
            'bigpicbox.ImageLocation = posterurls(rememberint + 1, 1)
        End If


        Me.Controls.Add(bigpanel)
        bigpanel.BringToFront()
        Me.bigpanel.Controls.Add(bigpicbox)
        Me.Refresh()
    End Sub

    Private Sub bigpicbox_LoadCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs) Handles bigpicbox.LoadCompleted
        Dim bigpanellabel As Label
        bigpanellabel = New Label
        Dim resolutionlbl As Label
        With bigpanellabel
            .Location = New Point(20, 200)
            .Width = 150
            .Height = 50
            .Visible = True
            .Text = "Double Click Image To" & vbCrLf & "Return To Browser"
            '   .BringToFront()
        End With

        Me.bigpanel.Controls.Add(bigpanellabel)
        bigpanellabel.BringToFront()
        Application.DoEvents()



        If Not bigpicbox.Image Is Nothing And bigpicbox.Image.Width > 20 Then

            Dim sizey As Integer = bigpicbox.Image.Height
            Dim sizex As Integer = bigpicbox.Image.Width
            Dim tempstring As String
            tempstring = "Full Image Resolution :- " & sizex.ToString & " x " & sizey.ToString
            resolutionlbl = New Label
            With resolutionlbl
                .Location = New Point(20, 450)
                .Width = 180
                .Text = tempstring
                .BackColor = Color.Transparent
            End With

            Me.bigpanel.Controls.Add(resolutionlbl)
            resolutionlbl.BringToFront()
            Me.Refresh()
            Application.DoEvents()
            Dim tempstring2 As String = resolutionlbl.Text
        Else
            'bigpicbox.ImageLocation = posterurls(rememberint + 1, 1)
        End If
    End Sub

    Private Sub closepicbox()
        Me.Controls.Remove(bigpanel)
        bigpanel = Nothing
        Me.Controls.Remove(bigpicbox)
        bigpicbox = Nothing
        Me.ControlBox = True
        MenuStrip1.Enabled = True
        'ToolStrip1.Enabled = True
    End Sub

    'reset all filters
    Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click
        filteroverride = False
        TextBox1.Text = ""
        txt_titlesearch.Text = ""
        txt_titlesearch.BackColor = Color.White
        TextBox1.BackColor = Color.White
        For i = 0 To CheckedListBox1.Items.Count - 1
            CheckedListBox1.SetItemChecked(i, False)
        Next
        Call applyfilters()
    End Sub

    'Medianfo.dll to outputlog
    Private Sub filedetails()
        Dim tempstring As String = ""
        Dim exists As Boolean
        Dim movieinfo As String
        Dim medianfoexists As Boolean = False
        If applicationpath.IndexOf("/") <> -1 Then tempstring = applicationpath & "/" & "MediaInfo.dll"
        If applicationpath.IndexOf("\") <> -1 Then tempstring = applicationpath & "\" & "MediaInfo.dll"
        exists = IO.File.Exists(tempstring)
        If exists = True Then
            medianfoexists = True
        End If
        If medianfoexists = False Then
            MsgBox("Unable to find th file ""MediaInfo.dll""" & vbCrLf & vbCrLf & "Please make sure this file is available in the programs root directory")
            Exit Sub
        End If
        Dim To_Display As String = ""
        Dim tempstring5 As String
        Dim tempstring6 As String
        Dim MI As mediainfo
        MI = New mediainfo
        tempstring5 = MI.Option_("Info_Version", "0.7.0.0;MediaInfoDLL_Example_MSVB;0.7.0.0")
        If (tempstring5.Length() = 0) Then
            TextBox1.Text = "MediaInfo.Dll: this version of the DLL is not compatible"
            Exit Sub
        End If
        'Try
        tempstring = filefunction.getfilename(pathtxt.Text)
        If IO.Path.GetFileName(tempstring).ToLower = "video_ts.ifo" Then
            Dim temppath As String = tempstring.Replace(IO.Path.GetFileName(tempstring), "VTS_01_0.IFO")
            If IO.File.Exists(temppath) Then
                tempstring = temppath
            End If
        End If
        If IO.File.Exists(tempstring) Then
            'If tempint = True Then
            MI.Open(tempstring)
            To_Display = MI.Inform
            movieinfo = To_Display
            MI.Close()
        End If

        TextBox8.Text = movieinfo




        'Dim MyFormObject As New frmoutputlog(movieinfo, True)
        'Try
        '    MyFormObject.ShowDialog()
        'Catch ex As ObjectDisposedException
        'End Try
        'Catch
        '    MsgBox("Can't find media file To Open")
        'End Try
    End Sub

#Region "Auxiliary Procedures for Multithreading of Rescraping Movies Procedure Below"

    Private Sub TempStartMoviesReScraping()
        Dim FullFileContent As String = ""
        Dim Scraper As String = userprefs.XBMC_Scraper
        FullFileContent = Start_XBMC_MoviesReScraping(Scraper, workingmoviedetails.fullmoviebody.imdbid, filefunction.getfilename(CType(ComboBox1.SelectedItem, ValueDescriptionPair).Value))
        If FullFileContent.ToLower <> "error" Then
            Dim Teste As Boolean = CreateMovieNfo(filefunction.getfilename(CType(ComboBox1.SelectedItem, ValueDescriptionPair).Value), FullFileContent)
            RefreshMovieList()
        End If
        If messbox.Visible = True Then messbox.Close()
        If Me.Cursor = Cursors.WaitCursor Then Me.Cursor = Cursors.Default
    End Sub
    Private Sub RefreshMovieList()
        Call loadinfofile()

        For f = 0 To fullmovielist.Count - 1
            If fullmovielist(f).fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename Then

                Dim newfullmovie As ComboList
                newfullmovie = fullmovielist(f)
                '-------------- Aqui
                If userprefs.ignorearticle = True Then
                    If workingmoviedetails.fullmoviebody.title.ToLower.IndexOf("the ") = 0 Then
                        newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title.Substring(4, workingmoviedetails.fullmoviebody.title.Length - 4) & ", The" & " (" & workingmoviedetails.fullmoviebody.year & ")"
                    Else
                        newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                    End If
                Else
                    newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                End If
                newfullmovie.genre = workingmoviedetails.fullmoviebody.genre
                Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                Dim myDate2 As Date = filecreation2.LastWriteTime
                Try
                    newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                Catch ex2 As Exception
                End Try
                If workingmoviedetails.fileinfo.createdate <> Nothing Then
                    newfullmovie.createdate = workingmoviedetails.fileinfo.createdate
                ElseIf workingmoviedetails.fileinfo.createdate <> "" Then
                    newfullmovie.createdate = workingmoviedetails.fileinfo.createdate = workingmoviedetails.fileinfo.createdate
                Else
                    newfullmovie.createdate = newfullmovie.filedate
                End If
                newfullmovie.outline = workingmoviedetails.fullmoviebody.outline
                newfullmovie.playcount = workingmoviedetails.fullmoviebody.playcount
                newfullmovie.rating = workingmoviedetails.fullmoviebody.rating
                newfullmovie.top250 = workingmoviedetails.fullmoviebody.top250
                newfullmovie.runtime = workingmoviedetails.fullmoviebody.runtime
                If workingmoviedetails.fullmoviebody.runtime.IndexOf(":") <> -1 Then
                    Try
                        workingmoviedetails.fullmoviebody.runtime = workingmoviedetails.fullmoviebody.runtime.Substring(workingmoviedetails.fullmoviebody.runtime.IndexOf(":") + 1, workingmoviedetails.fullmoviebody.runtime.Length - workingmoviedetails.fullmoviebody.runtime.IndexOf(":") - 1)
                    Catch ex As Exception

                    End Try
                End If
                fullmovielist.RemoveAt(f)
                fullmovielist.Add(newfullmovie)
                Exit For
            End If
        Next

        Call ApplyFilters()
        If messbox.Visible = True Then messbox.Close()

        If Me.Cursor = Cursors.WaitCursor Then Me.Cursor = Cursors.Default

    End Sub
#End Region

    Private Sub rescrapemovie()
        Dim tempstring As String = ""
        Dim tempint As Integer
        If outlinetxt.Text = "MC cannot find this file, either the file no longer exists, or MC cannot access the file path" Then
            MsgBox("MC cannot find this file, either the file no longer exists, or MC cannot access the file path")
            Exit Sub
        End If
        tempint = MessageBox.Show("Rescraping the movie will Overwrite all the current details" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
        If tempint = DialogResult.No Then
            Exit Sub
        End If
        messbox = New message_box("The Selected Movie is being Rescraped", "", "Please Wait")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()
        If userprefs.movies_useXBMC_Scraper = True Then
            If workingmoviedetails.fullmoviebody.title = Nothing And workingmoviedetails.fullmoviebody.imdbid = Nothing Then
                messbox.Close()
                MsgBox("Can't rescrape this movie because it doesn't have any NFO File" & vbCrLf & "rebuild movie database, and search for new movies", MsgBoxStyle.OkOnly, "Error")
                Exit Sub
            Else
                ' If NovaThread.IsAlive Then NovaThread.Abort()
                NovaThread = New Thread(New ThreadStart(AddressOf TempStartMoviesReScraping))
                NovaThread.SetApartmentState(ApartmentState.STA)
                NovaThread.Start()
            End If
        Else
            Try
                If workingmoviedetails Is Nothing Then Exit Sub
                If workingmoviedetails.fullmoviebody.title = Nothing And workingmoviedetails.fullmoviebody.imdbid = Nothing Then Exit Sub
                Me.Cursor = Cursors.WaitCursor
                'Dim scraper As New imdb.Classimdbscraper
                Dim scraper As New Classimdb
                Dim body As String
                Dim actorlist As String
                Dim trailer As String
                Dim thumbstring As New XmlDocument
                Dim thisresult As XmlNode = Nothing
                workingmoviedetails.alternativetitles.Clear()
                workingmoviedetails.fullmoviebody.credits = Nothing
                workingmoviedetails.fullmoviebody.director = Nothing
                workingmoviedetails.fullmoviebody.genre = Nothing
                workingmoviedetails.fullmoviebody.mpaa = Nothing
                workingmoviedetails.fullmoviebody.outline = Nothing
                workingmoviedetails.fullmoviebody.plot = Nothing
                workingmoviedetails.fullmoviebody.premiered = Nothing
                workingmoviedetails.fullmoviebody.rating = Nothing
                workingmoviedetails.fullmoviebody.runtime = Nothing
                workingmoviedetails.fullmoviebody.studio = Nothing
                workingmoviedetails.fullmoviebody.tagline = Nothing
                workingmoviedetails.fullmoviebody.thumbnails = Nothing
                workingmoviedetails.fullmoviebody.title = Nothing
                workingmoviedetails.fullmoviebody.top250 = Nothing
                workingmoviedetails.fullmoviebody.trailer = Nothing
                workingmoviedetails.fullmoviebody.votes = Nothing
                workingmoviedetails.fullmoviebody.year = Nothing
                workingmoviedetails.fullmoviebody.sortorder = Nothing
                workingmoviedetails.fullmoviebody.country = Nothing

                'Dim newscraper As New Classimdb
                'body = newscraper.getimdbbody(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year, workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)
                'trailer = newscraper.gettrailerurl(workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)
                body = scraper.getimdbbody(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year, workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)
                trailer = scraper.gettrailerurl(workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)
                Dim actors As String
                actors = scraper.getimdbactors(userprefs.imdbmirror, workingmoviedetails.fullmoviebody.imdbid, workingmoviedetails.fullmoviebody.title)
                If body = "MIC" Then
                    workingmoviedetails.fullmoviebody.genre = "problem"
                Else

                    thumbstring.LoadXml(body)



                    Dim certificates As New List(Of String)

                    For Each thisresult In thumbstring("movie")
                        Select Case thisresult.Name
                            Case "title"
                                If userprefs.keepfoldername = False Then
                                    workingmoviedetails.fullmoviebody.title = thisresult.InnerText
                                Else
                                    If userprefs.usefoldernames = False Then
                                        tempstring = IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename)
                                        workingmoviedetails.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                                    Else
                                        workingmoviedetails.fullmoviebody.title = filefunction.cleanfilename(workingmoviedetails.fileinfo.foldername, False)
                                    End If
                                End If
                            Case "country"
                                workingmoviedetails.fullmoviebody.country = thisresult.InnerText
                            Case "alternativetitle"
                                workingmoviedetails.alternativetitles.Add(thisresult.InnerText)
                            Case "credits"
                                workingmoviedetails.fullmoviebody.credits = thisresult.InnerText
                            Case "director"
                                workingmoviedetails.fullmoviebody.director = thisresult.InnerText
                            Case "genre"
                                Dim strarr() As String
                                strarr = thisresult.InnerText.Split("/")
                                For count = 0 To strarr.Length - 1
                                    strarr(count) = strarr(count).Replace(" ", "")
                                Next
                                If strarr.Length <= userprefs.maxmoviegenre Then
                                    workingmoviedetails.fullmoviebody.genre = thisresult.InnerText
                                Else
                                    For f = 0 To userprefs.maxmoviegenre - 1
                                        If f = 0 Then
                                            workingmoviedetails.fullmoviebody.genre = strarr(f)
                                        Else
                                            workingmoviedetails.fullmoviebody.genre += " / " & strarr(f)
                                        End If
                                    Next
                                End If
                            Case "mpaa"
                                workingmoviedetails.fullmoviebody.mpaa = thisresult.InnerText
                            Case "outline"
                                workingmoviedetails.fullmoviebody.outline = thisresult.InnerText
                            Case "plot"
                                workingmoviedetails.fullmoviebody.plot = thisresult.InnerText
                            Case "premiered"
                                workingmoviedetails.fullmoviebody.premiered = thisresult.InnerText
                            Case "rating"
                                workingmoviedetails.fullmoviebody.rating = thisresult.InnerText
                            Case "runtime"
                                workingmoviedetails.fullmoviebody.runtime = thisresult.InnerText
                                If workingmoviedetails.fullmoviebody.runtime.IndexOf(":") <> -1 Then
                                    Try
                                        workingmoviedetails.fullmoviebody.runtime = workingmoviedetails.fullmoviebody.runtime.Substring(workingmoviedetails.fullmoviebody.runtime.IndexOf(":") + 1, workingmoviedetails.fullmoviebody.runtime.Length - workingmoviedetails.fullmoviebody.runtime.IndexOf(":") - 1)
                                    Catch ex As Exception

                                    End Try
                                End If
                            Case "studio"
                                workingmoviedetails.fullmoviebody.studio = thisresult.InnerText
                            Case "tagline"
                                workingmoviedetails.fullmoviebody.tagline = thisresult.InnerText
                            Case "top250"
                                workingmoviedetails.fullmoviebody.top250 = thisresult.InnerText
                            Case "votes"
                                workingmoviedetails.fullmoviebody.votes = thisresult.InnerText
                            Case "year"
                                workingmoviedetails.fullmoviebody.year = thisresult.InnerText
                            Case "cert"
                                certificates.Add(thisresult.InnerText)
                            Case "id"
                                workingmoviedetails.fullmoviebody.imdbid = thisresult.InnerText
                        End Select
                    Next
                    Try
                        If userprefs.gettrailer = True Then
                            If trailer <> Nothing Then
                                workingmoviedetails.fullmoviebody.trailer = trailer
                            End If
                        End If
                    Catch
                    End Try
                    actorlist = scraper.getimdbactors(userprefs.imdbmirror, workingmoviedetails.fullmoviebody.imdbid, workingmoviedetails.fullmoviebody.title, userprefs.maxactors)
                    'actorlist = getimdbactors(userprefs.imdbmirror, workingmoviedetails.fullmoviebody.imdbid, workingmoviedetails.fullmoviebody.title, userprefs.maxactors)
                    Dim done As Boolean = False
                    For f = 0 To UBound(userprefs.certificatepriority)
                        Try
                            For Each cert In certificates
                                If cert.IndexOf(userprefs.certificatepriority(f)) <> -1 Then
                                    workingmoviedetails.fullmoviebody.mpaa = cert.Substring(cert.IndexOf("|") + 1, cert.Length - cert.IndexOf("|") - 1)
                                    done = True
                                    Exit For
                                End If
                            Next
                        Catch
                        End Try
                        If done = True Then Exit For
                    Next
                End If
                'userprefs.certificatepriority(1)
                workingmoviedetails.listthumbs.Clear()
                If userprefs.nfoposterscraper <> 0 Then
                    Dim thumbs As String = ""

                    If userprefs.nfoposterscraper = 1 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 15 Then
                        Dim newobject3 As New IMPA.getimpaposters
                        tempstring = newobject3.getimpathumbs(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                        If tempstring <> Nothing Then thumbs = thumbs & tempstring
                    End If

                    If userprefs.nfoposterscraper = 2 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                        Dim newobject2 As New tmdb_posters.Class1
                        tempstring = newobject2.gettmdbposters(workingmoviedetails.fullmoviebody.imdbid)
                        If tempstring <> Nothing Then thumbs = thumbs & tempstring
                    End If

                    If userprefs.nfoposterscraper = 4 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                        Dim newobject As New class_mpdb_thumbs.Class1
                        tempstring = newobject.get_mpdb_thumbs(workingmoviedetails.fullmoviebody.imdbid)
                        If tempstring <> Nothing Then thumbs = thumbs & tempstring
                    End If

                    If userprefs.nfoposterscraper = 8 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                        Dim thumbscraper As New imdb_thumbs.Class1
                        tempstring = thumbscraper.getimdbthumbs(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year, workingmoviedetails.fullmoviebody.imdbid)
                        If tempstring <> Nothing Then thumbs = thumbs & tempstring
                    End If



                    thumbs = "<thumblist>" & thumbs & "</thumblist>"

                    Try
                        thumbstring.LoadXml(thumbs)



                        For Each thisresult In thumbstring("thumblist")
                            Select Case thisresult.Name
                                Case "thumb"
                                    workingmoviedetails.listthumbs.Add(thisresult.InnerText)
                            End Select
                        Next
                    Catch
                    End Try
                End If

                workingmoviedetails.listactors.Clear()
                If actorlist <> Nothing Then
                    Try
                        thumbstring.LoadXml(actorlist)
                        thisresult = Nothing
                        Dim actorcount As Integer = 0
                        For Each thisresult In thumbstring("actorlist")
                            Select Case thisresult.Name
                                Case "actor"
                                    If actorcount > userprefs.maxactors Then
                                        Exit For
                                    End If
                                    actorcount += 1
                                    Dim newactor As New movieactors
                                    Dim detail As XmlNode = Nothing
                                    For Each detail In thisresult.ChildNodes
                                        Select Case detail.Name
                                            Case "name"
                                                newactor.actorname = detail.InnerText
                                            Case "role"
                                                newactor.actorrole = detail.InnerText
                                            Case "thumb"
                                                newactor.actorthumb = detail.InnerText
                                            Case "actorid"
                                                If newactor.actorthumb <> Nothing Then
                                                    If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                        Dim workingpath As String = workingmoviedetails.fileinfo.fullpathandfilename.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename), "")
                                                        workingpath = workingpath & ".actors\"
                                                        Dim hg As New IO.DirectoryInfo(workingpath)
                                                        Dim destsorted As Boolean = False
                                                        If Not hg.Exists Then
                                                            Try
                                                                IO.Directory.CreateDirectory(workingpath)
                                                                destsorted = True
                                                            Catch ex As Exception

                                                            End Try
                                                        Else
                                                            destsorted = True
                                                        End If
                                                        If destsorted = True Then
                                                            Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                            filename = filename & ".tbn"
                                                            filename = IO.Path.Combine(workingpath, filename)
                                                            If Not IO.File.Exists(filename) Then
                                                                Try
                                                                    Dim buffer(4000000) As Byte
                                                                    Dim size As Integer = 0
                                                                    Dim bytesRead As Integer = 0
                                                                    Dim thumburl As String = newactor.actorthumb
                                                                    Dim req As HttpWebRequest = req.Create(thumburl)
                                                                    Dim res As HttpWebResponse = req.GetResponse()
                                                                    Dim contents As Stream = res.GetResponseStream()
                                                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                    While bytesToRead > 0
                                                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                        If size = 0 Then Exit While
                                                                        bytesToRead -= size
                                                                        bytesRead += size
                                                                    End While

                                                                    Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                    fstrm.Write(buffer, 0, bytesRead)
                                                                    contents.Close()
                                                                    fstrm.Close()
                                                                Catch
                                                                End Try
                                                            End If
                                                        End If
                                                    End If
                                                    If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                        Dim workingpath As String = ""
                                                        Dim networkpath As String = Form1.userprefs.actorsavepath
                                                        Try
                                                            tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                            Dim hg As New IO.DirectoryInfo(tempstring)
                                                            If Not hg.Exists Then
                                                                IO.Directory.CreateDirectory(tempstring)
                                                            End If
                                                            workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                            If Not IO.File.Exists(workingpath) Then
                                                                Dim buffer(4000000) As Byte
                                                                Dim size As Integer = 0
                                                                Dim bytesRead As Integer = 0
                                                                Dim thumburl As String = newactor.actorthumb
                                                                Dim req As HttpWebRequest = req.Create(thumburl)
                                                                Dim res As HttpWebResponse = req.GetResponse()
                                                                Dim contents As Stream = res.GetResponseStream()
                                                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                While bytesToRead > 0
                                                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                    If size = 0 Then Exit While
                                                                    bytesToRead -= size
                                                                    bytesRead += size
                                                                End While

                                                                Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                fstrm.Write(buffer, 0, bytesRead)
                                                                contents.Close()
                                                                fstrm.Close()
                                                            End If
                                                            newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText & ".jpg")
                                                        Catch
                                                        End Try
                                                    End If
                                                End If
                                        End Select
                                    Next
                                    workingmoviedetails.listactors.Add(newactor)
                                    Dim actornew As New actordatabase
                                    actornew.actorname = newactor.actorname
                                    actornew.movieid = workingmoviedetails.fullmoviebody.imdbid
                                    actordb.Add(actornew)
                            End Select
                        Next
                    Catch
                    End Try
                End If

                Try
                    Dim tempname As String = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                    If tempname <> Nothing Then workingmoviedetails.filedetails = filefunction.get_hdtags(tempname)
                    If workingmoviedetails.filedetails.filedetails_video.duration <> Nothing Then
                        Try
                            '1h 24mn 48s 546ms
                            Dim hours As Integer
                            Dim minutes As Integer
                            tempstring = workingmoviedetails.filedetails.filedetails_video.duration
                            tempint = tempstring.IndexOf("h")
                            If tempint <> -1 Then
                                hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                tempstring = Trim(tempstring)
                            End If
                            tempint = tempstring.IndexOf("mn")
                            If tempint <> -1 Then
                                minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                            End If
                            If hours <> 0 Then
                                hours = hours * 60
                            End If
                            minutes = minutes + hours
                            If minutes = 0 Then
                                If tempstring.IndexOf("min") <> -1 Then
                                    tempstring = tempstring.Replace("min", "")
                                    tempstring = tempstring.Replace(" ", "")
                                    If IsNumeric(tempstring) Then
                                        minutes = Convert.ToInt32(tempstring)
                                    End If
                                End If
                            End If
                            If minutes = 0 Then
                                If tempstring.IndexOf("min") <> -1 Then
                                    tempstring = tempstring.Replace("min", "")
                                    tempstring = tempstring.Replace(" ", "")
                                    If IsNumeric(tempstring) Then
                                        minutes = Convert.ToInt32(tempstring)
                                    End If
                                End If
                            End If
                            If minutes <> 0 Then
                                workingmoviedetails.fullmoviebody.runtime = minutes.ToString & " min"
                            End If
                        Catch

                        End Try
                    End If
                Catch
                End Try

                nfofunction.savemovienfo(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails, True)
                Call loadinfofile()

                For f = 0 To fullmovielist.Count - 1
                    If fullmovielist(f).fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename Then

                        Dim newfullmovie As combolist
                        newfullmovie = fullmovielist(f)
                        '-------------- Aqui
                        If userprefs.ignorearticle = True Then
                            If workingmoviedetails.fullmoviebody.title.ToLower.IndexOf("the ") = 0 Then
                                newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title.Substring(4, workingmoviedetails.fullmoviebody.title.Length - 4) & ", The" & " (" & workingmoviedetails.fullmoviebody.year & ")"
                            Else
                                newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                            End If
                        Else
                            newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                        End If
                        newfullmovie.genre = workingmoviedetails.fullmoviebody.genre
                        Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                        Dim myDate2 As Date = filecreation2.LastWriteTime
                        Try
                            newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        Catch ex2 As Exception
                        End Try
                        If workingmoviedetails.fileinfo.createdate <> Nothing Then
                            newfullmovie.createdate = workingmoviedetails.fileinfo.createdate
                        ElseIf workingmoviedetails.fileinfo.createdate <> "" Then
                            newfullmovie.createdate = workingmoviedetails.fileinfo.createdate = workingmoviedetails.fileinfo.createdate
                        Else
                            newfullmovie.createdate = newfullmovie.filedate
                        End If
                        newfullmovie.outline = workingmoviedetails.fullmoviebody.outline
                        newfullmovie.playcount = workingmoviedetails.fullmoviebody.playcount
                        newfullmovie.rating = workingmoviedetails.fullmoviebody.rating
                        newfullmovie.top250 = workingmoviedetails.fullmoviebody.top250
                        newfullmovie.runtime = workingmoviedetails.fullmoviebody.runtime
                        If workingmoviedetails.fullmoviebody.runtime.IndexOf(":") <> -1 Then
                            Try
                                workingmoviedetails.fullmoviebody.runtime = workingmoviedetails.fullmoviebody.runtime.Substring(workingmoviedetails.fullmoviebody.runtime.IndexOf(":") + 1, workingmoviedetails.fullmoviebody.runtime.Length - workingmoviedetails.fullmoviebody.runtime.IndexOf(":") - 1)
                            Catch ex As Exception

                            End Try
                        End If
                        fullmovielist.RemoveAt(f)
                        fullmovielist.Add(newfullmovie)
                        Exit For
                    End If
                Next

                Call ApplyFilters()
            Catch
            Finally

                messbox.Close()

                Me.Cursor = Cursors.Default
            End Try
        End If
    End Sub

    Private Sub ToolStripButton4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Call rescrapemovie()
    End Sub

    'quicksavenfo
    Private Sub quicksavemovie()
        If ComboBox1.SelectedItems.Count = 0 Then
            Exit Sub
        End If
        If ComboBox1.SelectedItems.Count = 1 Then
            Dim tempstring As String = ""
            Dim oldmovietitle As String = workingmoviedetails.fullmoviebody.title
            '-------------- Aqui
            If userprefs.ignorearticle = True Then
                If oldmovietitle.ToLower.IndexOf("the") = 0 Then
                    oldmovietitle = oldmovietitle.Substring(4, oldmovietitle.Length - 4) & ", The"
                End If
            Else
                oldmovietitle = oldmovietitle & " (" & workingmoviedetails.fullmoviebody.year & ")"
            End If
            tempstring = " (" & workingmoviedetails.fullmoviebody.year & ")"
            workingmoviedetails.fullmoviebody.title = titletxt.Text.Replace(tempstring, "")
            workingmoviedetails.fullmoviebody.director = directortxt.Text
            workingmoviedetails.fullmoviebody.credits = creditstxt.Text
            workingmoviedetails.fullmoviebody.studio = studiotxt.Text
            workingmoviedetails.fullmoviebody.genre = genretxt.Text
            workingmoviedetails.fullmoviebody.votes = votestxt.Text
            workingmoviedetails.fullmoviebody.rating = ratingtxt.Text
            workingmoviedetails.fullmoviebody.runtime = runtimetxt.Text
            workingmoviedetails.fullmoviebody.outline = outlinetxt.Text
            workingmoviedetails.fullmoviebody.plot = plottxt.Text
            workingmoviedetails.fullmoviebody.tagline = taglinetxt.Text
            workingmoviedetails.fullmoviebody.mpaa = certtxt.Text
            workingmoviedetails.fullmoviebody.sortorder = TextBox34.Text
            If ComboBox3.SelectedItem = Nothing Then ComboBox3.SelectedItem = "None"
            If ComboBox3.SelectedItem <> "None" Then
                workingmoviedetails.fullmoviebody.movieset = ComboBox3.Items(ComboBox3.SelectedIndex)
            Else
                workingmoviedetails.fullmoviebody.movieset = Nothing
            End If
            nfofunction.savemovienfo(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails, True)

            'Dim newmovietitle As String = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
            'change 
            'title
            'title & year
            Dim newmovietitle As String
            Dim newmovietitleandyear As String
            newmovietitle = workingmoviedetails.fullmoviebody.title
            '-------------- Aqui
            If userprefs.ignorearticle = True Then
                If newmovietitle.ToLower.IndexOf("the") = 0 Then
                    newmovietitleandyear = newmovietitle.Substring(4, newmovietitle.Length - 4) & ", The (" & workingmoviedetails.fullmoviebody.year & ")"
                    newmovietitle = newmovietitle.Substring(4, newmovietitle.Length - 4) & ", The"
                Else
                    newmovietitleandyear = newmovietitle & " (" & workingmoviedetails.fullmoviebody.year & ")"
                End If
            Else
                newmovietitleandyear = newmovietitle & " (" & workingmoviedetails.fullmoviebody.year & ")"
            End If
            For f = 0 To fullmovielist.Count - 1
                If fullmovielist(f).titleandyear = oldmovietitle Then
                    Dim newfullmovie As ComboList
                    newfullmovie = fullmovielist(f)
                    Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                    Dim myDate2 As Date = filecreation2.LastWriteTime
                    Try
                        newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                    Catch ex2 As Exception
                    End Try

                    newfullmovie.title = newmovietitle
                    newfullmovie.titleandyear = newmovietitleandyear
                    newfullmovie.genre = workingmoviedetails.fullmoviebody.genre
                    newfullmovie.playcount = workingmoviedetails.fullmoviebody.playcount
                    newfullmovie.rating = workingmoviedetails.fullmoviebody.rating
                    newfullmovie.top250 = workingmoviedetails.fullmoviebody.top250
                    newfullmovie.sortorder = workingmoviedetails.fullmoviebody.sortorder
                    newfullmovie.createdate = workingmoviedetails.fileinfo.createdate
                    newfullmovie.runtime = workingmoviedetails.fullmoviebody.runtime
                    newfullmovie.id = workingmoviedetails.fullmoviebody.imdbid
                    newfullmovie.outline = workingmoviedetails.fullmoviebody.outline
                    newfullmovie.movieset = workingmoviedetails.fullmoviebody.movieset
                    newfullmovie.year = workingmoviedetails.fullmoviebody.year
                    If newfullmovie.movieset = Nothing Then
                        newfullmovie.movieset = "None"
                    End If
                    If newfullmovie.movieset = "" Then
                        newfullmovie.movieset = "None"
                    End If
                    fullmovielist.RemoveAt(f)
                    fullmovielist.Add(newfullmovie)
                    Call savedata()
                    Exit For
                End If
            Next
            If Label39.Text.ToLower.IndexOf(" of ") <> -1 Then
                Call ApplyFilters()
                Call loadinfofile()
            End If
        Else
            Dim mess As New message_box("Saving Selected Movies", , "     Please Wait.     ")
            mess.Show()
            mess.Refresh()
            Application.DoEvents()
            Dim startindex As Integer = ComboBox1.SelectedIndex
            For Each item In ComboBox1.SelectedItems
                Dim filepath As String = item.value
                Dim movie As FullMovieDetails
                movie = nfofunction.loadfullmovienfo(filepath)
                If directortxt.Text <> "" Then
                    movie.fullmoviebody.director = directortxt.Text
                End If
                If creditstxt.Text <> "" Then
                    movie.fullmoviebody.credits = creditstxt.Text
                End If
                If genretxt.Text <> "" Then
                    movie.fullmoviebody.genre = genretxt.Text
                End If
                If certtxt.Text <> "" Then
                    movie.fullmoviebody.mpaa = certtxt.Text
                End If
                If outlinetxt.Text <> "" Then
                    movie.fullmoviebody.outline = outlinetxt.Text
                End If
                If runtimetxt.Text <> "" Then
                    movie.fullmoviebody.runtime = runtimetxt.Text
                End If
                If studiotxt.Text <> "" Then
                    movie.fullmoviebody.studio = studiotxt.Text
                End If
                If plottxt.Text <> "" Then
                    movie.fullmoviebody.plot = plottxt.Text
                End If
                If taglinetxt.Text <> "" Then
                    movie.fullmoviebody.tagline = taglinetxt.Text
                End If
                If ratingtxt.Text <> "" Then
                    movie.fullmoviebody.rating = ratingtxt.Text
                End If
                If votestxt.Text <> "" Then
                    movie.fullmoviebody.votes = votestxt.Text
                End If
                If ComboBox3.SelectedIndex <> -1 Then
                    movie.fullmoviebody.movieset = ComboBox3.SelectedItem
                End If
                nfofunction.savemovienfo(filepath, movie, True)
                For f = 0 To fullmovielist.Count - 1
                    If fullmovielist(f).fullpathandfilename = movie.fileinfo.fullpathandfilename Then
                        Dim newfullmovie As ComboList
                        newfullmovie = fullmovielist(f)
                        Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                        Dim myDate2 As Date = filecreation2.LastWriteTime
                        Try
                            newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        Catch ex2 As Exception
                        End Try
                        If newfullmovie.movieset = Nothing Then
                            newfullmovie.movieset = "None"
                        End If
                        If newfullmovie.movieset = "" Then
                            newfullmovie.movieset = "None"
                        End If
                        'newfullmovie.title = movie.fullmoviebody.title
                        'newfullmovie.titleandyear = newfullmovie.title & " (" & movie.fullmoviebody.year & ")"
                        newfullmovie.genre = movie.fullmoviebody.genre
                        newfullmovie.playcount = movie.fullmoviebody.playcount
                        newfullmovie.rating = movie.fullmoviebody.rating
                        newfullmovie.top250 = movie.fullmoviebody.top250
                        newfullmovie.sortorder = movie.fullmoviebody.sortorder
                        'newfullmovie.createdate = movie.fileinfo.createdate
                        newfullmovie.runtime = movie.fullmoviebody.runtime
                        'newfullmovie.id = movie.fullmoviebody.imdbid
                        newfullmovie.outline = movie.fullmoviebody.outline
                        newfullmovie.movieset = movie.fullmoviebody.movieset
                        'newfullmovie.year = movie.fullmoviebody.year
                        fullmovielist.RemoveAt(f)
                        fullmovielist.Add(newfullmovie)
                        Call savedata()
                        Exit For
                    End If
                Next
            Next
            workingmovie.fullpathandfilename = ComboBox1.Items(startindex).description
            Call ApplyFilters()
            Call loadinfofile()

            mess.Close()
        End If
    End Sub

    'change watched status
    Private Sub Button13_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button13.Click
        If ComboBox1.SelectedItems.Count = 1 Then
            If Button13.Text = "&Watched" Then
                Button13.Text = "Un&watched"
                Button13.BackColor = Color.Red
                Button13.Refresh()
                workingmoviedetails.fullmoviebody.playcount = "0"
            Else
                Button13.Text = "&Watched"
                Button13.BackColor = Color.LawnGreen
                Button13.Refresh()
                workingmoviedetails.fullmoviebody.playcount = "1"
            End If
            Call quicksavemovie()
        ElseIf ComboBox1.SelectedItems.Count > 1 Then
            Dim mess As New message_box("Saving Selected Movies", , "     Please Wait.     ")
            mess.Show()
            mess.Refresh()
            Dim watched As String = ""
            If Button13.Text = "&Watched" Then
                Button13.Text = "Un&watched"
                Button13.BackColor = Color.Red
                Button13.Refresh()
                watched = "0"
            ElseIf Button13.Text = "Un&watched" Then
                Button13.Text = "&Watched"
                Button13.BackColor = Color.LawnGreen
                Button13.Refresh()
                watched = "1"
            ElseIf Button13.Text = "" Then
                Button13.Text = "&Watched"
                Button13.BackColor = Color.LawnGreen
                Button13.Refresh()
                watched = "1"
            End If
            For Each item In ComboBox1.SelectedItems
                Dim filepath As String = item.value
                Dim movie As fullmoviedetails
                movie = nfofunction.loadfullmovienfo(filepath)
                movie.fullmoviebody.playcount = watched
                nfofunction.savemovienfo(filepath, movie, True)
                For f = 0 To fullmovielist.Count - 1
                    If fullmovielist(f).fullpathandfilename = filepath Then
                        Dim newfullmovie As combolist
                        newfullmovie = fullmovielist(f)
                        newfullmovie.playcount = watched
                        fullmovielist.RemoveAt(f)
                        fullmovielist.Add(newfullmovie)
                        Exit For
                    End If
                Next
            Next
            mess.Close()
        End If
    End Sub

    Private Sub SetMovieAsWatchedToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SetMovieAsWatchedToolStripMenuItem.Click
        'Try
        If Not workingmoviedetails.fileinfo.fullpathandfilename Is Nothing Then
            Call openfolder(workingmoviedetails.fileinfo.fullpathandfilename)
        Else
            MsgBox("There is no Movie selected to open")
        End If
        'Catch
        'End Try
    End Sub

    Private Sub RescrapeMovieToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RescrapeMovieToolStripMenuItem.Click
        Dim tempstring As String = ""
        Try
            tempstring = workingmoviedetails.fileinfo.fullpathandfilename
            Dim thePSI As New System.Diagnostics.ProcessStartInfo("notepad")
            thePSI.Arguments = """" & tempstring & """"
            System.Diagnostics.Process.Start(thePSI)
        Catch ex As Exception
            MsgBox("Unable to open File")
        End Try
    End Sub

    Private Sub PosterBrowserToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PosterBrowserToolStripMenuItem.Click
        Dim t As New frmCoverArt
        t.ShowDialog()
    End Sub

    Private Sub BrowseFanartToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BrowseFanartToolStripMenuItem.Click
        Dim t As New frmMovieFanart
        t.ShowDialog()
        Try
            If IO.File.Exists(workingmoviedetails.fileinfo.fanartpath) Then
                PictureBox7.ImageLocation = workingmoviedetails.fileinfo.fanartpath
            Else
                PictureBox7.Image = Nothing
            End If

        Catch
        End Try
    End Sub

    Private Sub ToolStripButton3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Call movieedit()
    End Sub

    Private Sub EditMovieToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles EditMovieToolStripMenuItem.Click
        Call movieedit()
    End Sub

    Private Sub movieedit()
        If outlinetxt.Text = "MC cannot find this file, either the file no longer exists, or MC cannot access the file path" Then
            MsgBox("MC cannot find this file, either the file no longer exists, or MC cannot access the file path")
            Exit Sub
        End If
        Dim oldmovietitle As String = workingmoviedetails.fileinfo.fullpathandfilename
        Dim newmovietitle As String = ""
        Dim MyFormObject As New Form2()
        MyFormObject.ShowDialog()
        newmovietitle = workingmoviedetails.fileinfo.fullpathandfilename


        For f = 0 To fullmovielist.Count - 1
            If fullmovielist(f).fullpathandfilename = newmovietitle Then
                Dim newfullmovie As ComboList
                'newfullmovie = fullmovielist(f)

                fullmovielist.RemoveAt(f)
                'Dim filecreation2 As New FileInfo(newfullmovie.fullpathandfilename)
                'Dim myDate2 As Date = filecreation2.LastWriteTime
                'Try
                '    newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                'Catch ex2 As Exception
                'End Try
                'newfullmovie.filename = newfullmovie.filename
                'newfullmovie.foldername = newfullmovie.foldername
                'newfullmovie.fullpathandfilename = newfullmovie.fullpathandfilename
                'newfullmovie.genre = newfullmovie.genre
                'newfullmovie.id = newfullmovie.id
                'newfullmovie.playcount = newfullmovie.playcount
                'newfullmovie.rating = newfullmovie.rating

                'Dim newmovietitle2 As String = newfullmovie.title
                'If newmovietitle2.ToLower.IndexOf("the ") = 0 Then
                '    newmovietitle2 = newmovietitle2.Substring(4, newmovietitle2.Length - 4)
                '    newmovietitle2 = newmovietitle2 & ", The" & " (" & newfullmovie.year & ")"
                'Else
                '    newmovietitle2 = newmovietitle2 & " (" & newfullmovie.year & ")"
                'End If
                newfullmovie = nfofunction.loadbasicmovienfo(workingmoviedetails.fileinfo.fullpathandfilename, "movielist")





                'newfullmovie.titleandyear = newmovietitle2
                'newfullmovie.title = newmovietitle2.Substring(0, newmovietitle2.Length - 7)
                'newfullmovie.year = newfullmovie.year


                fullmovielist.Add(newfullmovie)
                Exit For
            End If
        Next





        ''''''''''''''''''''''''''''need to update all details after edit.











        For f = 0 To filteredlist.Count - 1
            Dim newfullmovie As ComboList
            newfullmovie = filteredlist(f)
            If filteredlist(f).fullpathandfilename = oldmovietitle Then
                Dim newfullmovie2 As ComboList
                newfullmovie2 = filteredlist(f)
                newfullmovie2.titleandyear = newmovietitle
                filteredlist.RemoveAt(f)
                Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                Dim myDate2 As Date = filecreation2.LastWriteTime
                Try
                    newfullmovie2.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                Catch ex2 As Exception
                End Try
                newfullmovie2.filename = workingmoviedetails.fileinfo.filename
                newfullmovie2.foldername = workingmoviedetails.fileinfo.foldername
                newfullmovie2.fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename
                newfullmovie2.genre = workingmoviedetails.fullmoviebody.genre
                newfullmovie2.id = workingmoviedetails.fullmoviebody.imdbid
                newfullmovie2.playcount = workingmoviedetails.fullmoviebody.playcount
                newfullmovie2.rating = workingmoviedetails.fullmoviebody.rating
                newfullmovie2.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                newfullmovie2.year = workingmoviedetails.fullmoviebody.year

                filteredlist.Add(newfullmovie2)
                Exit For
            End If
        Next
        Call loadinfofile()
        ApplyFilters()
        'End If
        'loadinfofile()
    End Sub

    Private Sub MediaCompanionForumToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MediaCompanionForumToolStripMenuItem.Click
        Dim webAddress As String = "http://billyad2000.darkbb.com/forum.htm"
        Process.Start(webAddress)
    End Sub

    Private Sub XBMCMCThreadToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles XBMCMCThreadToolStripMenuItem.Click
        Dim webAddress As String = "http://xbmc.org/forum/showthread.php?t=53640"
        Process.Start(webAddress)
    End Sub

    Private Sub Button3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
        If Not IO.File.Exists(workingmoviedetails.fileinfo.trailerpath) Then

            If workingmoviedetails.fullmoviebody.trailer <> "" Then
                Dim trailerurl As String = workingmoviedetails.fullmoviebody.trailer
                Dim tempstring3 As String


                Dim wc As New Net.WebClient()

                Try
                    trailerdownloadpanel.Visible = True
                    _Downloader = New WebFileDownloader
                    _Downloader.DownloadFileWithProgress(trailerurl, workingmoviedetails.fileinfo.trailerpath)
                Catch ex As Exception
                    'message_box.Show("Error: " & ex.Message)
                End Try
            End If
        Else
            Try
                Dim tempstring As String
                tempstring = applicationpath & "\settings\temp.m3u"


                Dim file As IO.StreamWriter = IO.File.CreateText(tempstring)


                file.WriteLine(workingmoviedetails.fileinfo.trailerpath)
                file.Close()


                If userprefs.videomode = 1 Then Call videomode1(tempstring)
                If userprefs.videomode = 2 Then Call videomode2(tempstring)
                If userprefs.videomode = 3 Then
                    userprefs.videomode = 2
                    Call videomode2(tempstring)
                End If
                If userprefs.videomode >= 4 Then
                    If userprefs.selectedvideoplayer <> Nothing Then
                        Call videomode4(tempstring)
                    Else
                        Call videomode1(tempstring)
                    End If
                End If
                'Dim myProc As Process = Process.Start(workingmoviedetails.fileinfo.trailerpath)
            Catch ex As Exception
            End Try


        End If
    End Sub

    Private Sub RebuildMoviesToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RebuildMoviesToolStripMenuItem1.Click
        messbox = New message_box("Please wait,", "", "Rebuilding Movie DB")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Call rebuildmovies(moviefolders)
        messbox.Close()
    End Sub

    Private Sub ListMoviesWithoutFanartToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListMoviesWithoutFanartToolStripMenuItem.Click
        filteroverride = True
        Dim newlist As New List(Of combolist)
        newlist.Clear()
        For Each movie In fullmovielist
            If Not IO.File.Exists(filefunction.getfanartpath(movie.fullpathandfilename)) Then
                Dim movietoadd As New combolist
                movietoadd.fullpathandfilename = movie.fullpathandfilename
                movietoadd.titleandyear = movie.titleandyear
                movietoadd.filename = movie.filename
                movietoadd.year = movie.year
                movietoadd.filedate = movie.filedate
                movietoadd.foldername = movie.foldername
                movietoadd.rating = movie.rating
                movietoadd.top250 = movie.top250
                newlist.Add(movietoadd)
            End If
        Next

        filteredlist = newlist
        Call loadmovielist()
        filteroverride = False
    End Sub

    Private Sub ListMoviesWithoutPostersToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListMoviesWithoutPostersToolStripMenuItem.Click
        filteroverride = True
        Dim newlist As New List(Of combolist)
        newlist.Clear()
        For Each movie In fullmovielist
            If Not IO.File.Exists(filefunction.getposterpath(movie.fullpathandfilename)) Then
                Dim movietoadd As New combolist
                movietoadd.fullpathandfilename = movie.fullpathandfilename
                movietoadd.titleandyear = movie.titleandyear
                movietoadd.filename = movie.filename
                movietoadd.year = movie.year
                movietoadd.filedate = movie.filedate
                movietoadd.foldername = movie.foldername
                movietoadd.rating = movie.rating
                movietoadd.top250 = movie.top250
                newlist.Add(movietoadd)
            End If
        Next

        filteredlist = newlist
        Call loadmovielist()
        filteroverride = False
    End Sub

    Private Sub BatchRescraperToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BatchRescraperToolStripMenuItem.Click
        If Not bckrescrapewizard.IsBusy Then


            batchlist.credits = False
            batchlist.director = False
            batchlist.genre = False
            batchlist.mediatags = False

            batchlist.mpaa = False
            batchlist.outline = False
            batchlist.plot = False

            batchlist.premiered = False
            batchlist.rating = False
            batchlist.runtime = False
            batchlist.studio = False
            batchlist.tagline = False
            batchlist.title = False
            batchlist.top250 = False
            batchlist.trailer = False
            batchlist.votes = False
            batchlist.year = False
            batchlist.posterurls = False
            batchlist.missingposters = False
            batchlist.actors = False
            batchlist.missingfanart = False

            batchlist.activate = False

            Dim displaywizard As New frmBatchScraper
            displaywizard.ShowDialog()

            If batchlist.activate = True Then
                ToolStripStatusLabel7.Visible = True
                'ToolStripProgressBar6.Visible = True
                bckrescrapewizard.RunWorkerAsync()
            End If
        Else
            MsgBox("The update Wizard is Already Running")
        End If
    End Sub

    Private Sub bckrescrapewizard_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles bckrescrapewizard.DoWork
        globalthreadcounter += 1

        Dim bodyscraper As Boolean = False
        Dim trailerscraper As Boolean = False
        Dim actorscraper As Boolean = False
        Dim thumburlscraper As Boolean = False
        Dim mediatagscraper As Boolean = False
        Dim missingposter As Boolean = False
        Dim missingfanart As Boolean = False
        Dim mediatags As Boolean = False

        If batchlist.credits = True Then bodyscraper = True
        If batchlist.director = True Then bodyscraper = True
        If batchlist.genre = True Then bodyscraper = True
        If batchlist.mpaa = True Then bodyscraper = True
        If batchlist.plot = True Then bodyscraper = True
        If batchlist.premiered = True Then bodyscraper = True
        If batchlist.rating = True Then bodyscraper = True
        If batchlist.runtime = True Then bodyscraper = True
        If batchlist.studio = True Then bodyscraper = True
        If batchlist.tagline = True Then bodyscraper = True
        If batchlist.outline = True Then bodyscraper = True
        If batchlist.top250 = True Then bodyscraper = True
        If batchlist.votes = True Then bodyscraper = True
        If batchlist.country = True Then bodyscraper = True
        If batchlist.trailer = True Then trailerscraper = True

        If batchlist.posterurls = True Then thumburlscraper = True

        If batchlist.actors = True Then actorscraper = True

        If batchlist.missingposters = True Then missingposter = True

        If batchlist.missingfanart = True Then missingfanart = True

        If batchlist.mediatags = True Then mediatags = True

        Dim tempmovielist As New List(Of String)
        For Each movie In fullmovielist
            tempmovielist.Add(movie.fullpathandfilename)
        Next

        Dim moviecount As Integer = tempmovielist.Count - 1


        For f = 0 To moviecount
            Try
                Dim movietemplate As New FullMovieDetails
                Dim movietoalter As New FullMovieDetails
                Dim counter As Integer = moviecount
                Dim progresstext As String = "Batch Scraping Movies, " & (counter - f) + 1 & " item(s) remaining     "
                bckrescrapewizard.ReportProgress(999999, progresstext)
                movietemplate.fullmoviebody.credits = Nothing
                movietemplate.fullmoviebody.director = Nothing
                movietemplate.fullmoviebody.fanart = Nothing
                movietemplate.fullmoviebody.filename = Nothing
                movietemplate.fullmoviebody.genre = Nothing
                movietemplate.fullmoviebody.imdbid = Nothing
                movietemplate.fullmoviebody.mpaa = Nothing
                movietemplate.fullmoviebody.outline = Nothing
                movietemplate.fullmoviebody.playcount = Nothing
                movietemplate.fullmoviebody.plot = Nothing
                movietemplate.fullmoviebody.premiered = Nothing
                movietemplate.fullmoviebody.rating = Nothing
                movietemplate.fullmoviebody.runtime = Nothing
                movietemplate.fullmoviebody.studio = Nothing
                movietemplate.fullmoviebody.title = Nothing
                movietemplate.fullmoviebody.tagline = Nothing
                movietemplate.fullmoviebody.thumbnails = Nothing
                movietemplate.fullmoviebody.trailer = Nothing
                movietemplate.fullmoviebody.votes = Nothing
                movietemplate.fullmoviebody.year = Nothing
                movietemplate.fullmoviebody.country = Nothing
                movietemplate.listactors.Clear()
                movietemplate.listthumbs.Clear()
                movietemplate.filedetails.filedetails_audio.Clear()
                movietemplate.filedetails.filedetails_subtitles.Clear()
                movietemplate.filedetails.filedetails_video.bitrate = Nothing
                movietemplate.filedetails.filedetails_video.bitratemax = Nothing
                movietemplate.filedetails.filedetails_video.bitratemode = Nothing
                movietemplate.filedetails.filedetails_video.codec = Nothing
                movietemplate.filedetails.filedetails_video.codecid = Nothing
                movietemplate.filedetails.filedetails_video.codecinfo = Nothing
                movietemplate.filedetails.filedetails_video.container = Nothing
                movietemplate.filedetails.filedetails_video.duration = Nothing
                movietemplate.filedetails.filedetails_video.formatinfo = Nothing
                movietemplate.filedetails.filedetails_video.height = Nothing
                movietemplate.filedetails.filedetails_video.scantype = Nothing
                movietemplate.filedetails.filedetails_video.width = Nothing

                movietemplate.fileinfo.fanartpath = Nothing
                movietemplate.fileinfo.filename = Nothing
                movietemplate.fileinfo.foldername = Nothing
                movietemplate.fileinfo.fullpathandfilename = Nothing
                movietemplate.fileinfo.path = Nothing
                movietemplate.fileinfo.posterpath = Nothing
                movietemplate.fileinfo.trailerpath = Nothing

                movietoalter.fullmoviebody.credits = Nothing
                movietoalter.fullmoviebody.director = Nothing
                movietoalter.fullmoviebody.fanart = Nothing
                movietoalter.fullmoviebody.filename = Nothing
                movietoalter.fullmoviebody.genre = Nothing
                movietoalter.fullmoviebody.imdbid = Nothing
                movietoalter.fullmoviebody.mpaa = Nothing
                movietoalter.fullmoviebody.outline = Nothing
                movietoalter.fullmoviebody.playcount = Nothing
                movietoalter.fullmoviebody.plot = Nothing
                movietoalter.fullmoviebody.premiered = Nothing
                movietoalter.fullmoviebody.rating = Nothing
                movietoalter.fullmoviebody.runtime = Nothing
                movietoalter.fullmoviebody.studio = Nothing
                movietoalter.fullmoviebody.title = Nothing
                movietoalter.fullmoviebody.tagline = Nothing
                movietoalter.fullmoviebody.thumbnails = Nothing
                movietoalter.fullmoviebody.trailer = Nothing
                movietoalter.fullmoviebody.votes = Nothing
                movietoalter.fullmoviebody.year = Nothing
                movietoalter.fullmoviebody.country = Nothing
                movietoalter.listactors.Clear()
                movietoalter.listthumbs.Clear()
                movietoalter.filedetails.filedetails_audio.Clear()
                movietoalter.filedetails.filedetails_subtitles.Clear()
                movietoalter.filedetails.filedetails_video.bitrate = Nothing
                movietoalter.filedetails.filedetails_video.bitratemax = Nothing
                movietoalter.filedetails.filedetails_video.bitratemode = Nothing
                movietoalter.filedetails.filedetails_video.codec = Nothing
                movietoalter.filedetails.filedetails_video.codecid = Nothing
                movietoalter.filedetails.filedetails_video.codecinfo = Nothing
                movietoalter.filedetails.filedetails_video.container = Nothing
                movietoalter.filedetails.filedetails_video.duration = Nothing
                movietoalter.filedetails.filedetails_video.formatinfo = Nothing
                movietoalter.filedetails.filedetails_video.height = Nothing
                movietoalter.filedetails.filedetails_video.scantype = Nothing
                movietoalter.filedetails.filedetails_video.width = Nothing

                movietoalter.fileinfo.fanartpath = Nothing
                movietoalter.fileinfo.filename = Nothing
                movietoalter.fileinfo.foldername = Nothing
                movietoalter.fileinfo.fullpathandfilename = Nothing
                movietoalter.fileinfo.path = Nothing
                movietoalter.fileinfo.posterpath = Nothing
                movietoalter.fileinfo.trailerpath = Nothing


                movietoalter = nfofunction.loadfullmovienfo(tempmovielist(f))
                If Not movietoalter Is Nothing Then
                    '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
                    Dim scraperfunction As New Classimdb
                    If bodyscraper = True Then
                        Dim certificates As New List(Of String)
                        Dim body As String
                        body = scraperfunction.getimdbbody(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year, movietoalter.fullmoviebody.imdbid, userprefs.imdbmirror)
                        If body <> "MIC" Then
                            Try

                                Dim thumbstring As New XmlDocument
                                thumbstring.LoadXml(body)
                                For Each thisresult In thumbstring("movie")
                                    Select Case thisresult.Name
                                        Case "credits"
                                            movietemplate.fullmoviebody.credits = thisresult.InnerText
                                        Case "director"
                                            movietemplate.fullmoviebody.director = thisresult.InnerText
                                        Case "country"
                                            movietemplate.fullmoviebody.country = thisresult.InnerText
                                        Case "genre"
                                            Dim strarr() As String
                                            strarr = thisresult.InnerText.Split("/")
                                            For count = 0 To strarr.Length - 1
                                                strarr(count) = strarr(count).Replace(" ", "")
                                            Next
                                            If strarr.Length <= userprefs.maxmoviegenre Then
                                                movietemplate.fullmoviebody.genre = thisresult.InnerText
                                            Else
                                                For g = 0 To userprefs.maxmoviegenre - 1
                                                    If g = 0 Then
                                                        movietemplate.fullmoviebody.genre = strarr(g)
                                                    Else
                                                        movietemplate.fullmoviebody.genre += " / " & strarr(g)
                                                    End If
                                                Next
                                            End If
                                        Case "mpaa"
                                            movietemplate.fullmoviebody.mpaa = thisresult.InnerText
                                        Case "outline"
                                            movietemplate.fullmoviebody.outline = thisresult.InnerText
                                        Case "plot"
                                            movietemplate.fullmoviebody.plot = thisresult.InnerText
                                        Case "premiered"
                                            movietemplate.fullmoviebody.premiered = thisresult.InnerText
                                        Case "rating"
                                            movietemplate.fullmoviebody.rating = thisresult.InnerText
                                        Case "runtime"
                                            movietemplate.fullmoviebody.runtime = thisresult.InnerText
                                        Case "studio"
                                            movietemplate.fullmoviebody.studio = thisresult.InnerText
                                        Case "tagline"
                                            movietemplate.fullmoviebody.tagline = thisresult.InnerText
                                        Case "top250"
                                            movietemplate.fullmoviebody.top250 = thisresult.InnerText
                                        Case "votes"
                                            movietemplate.fullmoviebody.votes = thisresult.InnerText
                                        Case "id"
                                            movietemplate.fullmoviebody.imdbid = thisresult.InnerText
                                        Case "cert"
                                            certificates.Add(thisresult.InnerText)
                                    End Select


                                Next
                                For g = 0 To UBound(userprefs.certificatepriority)
                                    Dim done As Boolean = False
                                    For Each cert In certificates
                                        If cert.IndexOf(userprefs.certificatepriority(g)) <> -1 Then
                                            movietemplate.fullmoviebody.mpaa = cert.Substring(cert.IndexOf("|") + 1, cert.Length - cert.IndexOf("|") - 1)
                                            done = True
                                            Exit For
                                        End If
                                    Next
                                    If done = True Then Exit For
                                Next
                            Catch ex As Exception

                            End Try
                        End If
                    End If
                    If actorscraper = True Then
                        Dim actorlist As String
                        movietemplate.listactors.Clear()
                        actorlist = scraperfunction.getimdbactors(userprefs.imdbmirror, movietoalter.fullmoviebody.imdbid, movietoalter.fullmoviebody.title, userprefs.maxactors)
                        Try
                            Dim thumbstring As New XmlDocument
                            thumbstring.LoadXml(actorlist)
                            Dim actorcount As Integer = 0
                            For Each thisresult In thumbstring("actorlist")
                                Select Case thisresult.Name
                                    Case "actor"
                                        If actorcount > userprefs.maxactors Then
                                            Exit For
                                        End If
                                        actorcount += 1
                                        Dim newactor As New MovieActors
                                        Dim detail As XmlNode = Nothing
                                        For Each detail In thisresult.ChildNodes
                                            Select Case detail.Name
                                                Case "name"
                                                    newactor.actorname = detail.InnerText
                                                Case "role"
                                                    newactor.actorrole = detail.InnerText
                                                Case "thumb"

                                                    newactor.actorthumb = detail.InnerText
                                                Case "actorid"
                                                    If newactor.actorthumb <> Nothing Then
                                                        If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                            Dim workingpath As String = movietoalter.fileinfo.fullpathandfilename.Replace(IO.Path.GetFileName(movietoalter.fileinfo.fullpathandfilename), "")
                                                            workingpath = workingpath & ".actors\"
                                                            Dim hg As New IO.DirectoryInfo(workingpath)
                                                            Dim destsorted As Boolean = False
                                                            If Not hg.Exists Then
                                                                Try
                                                                    IO.Directory.CreateDirectory(workingpath)
                                                                    destsorted = True
                                                                Catch ex As Exception

                                                                End Try
                                                            Else
                                                                destsorted = True
                                                            End If
                                                            If destsorted = True Then

                                                                Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                                filename = filename & ".tbn"
                                                                filename = IO.Path.Combine(workingpath, filename)
                                                                If Not IO.File.Exists(filename) Then
                                                                    Try
                                                                        Dim buffer(4000000) As Byte
                                                                        Dim size As Integer = 0
                                                                        Dim bytesRead As Integer = 0
                                                                        Dim thumburl As String = newactor.actorthumb
                                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                                        Dim contents As Stream = res.GetResponseStream()
                                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                        While bytesToRead > 0
                                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                            If size = 0 Then Exit While
                                                                            bytesToRead -= size
                                                                            bytesRead += size
                                                                        End While

                                                                        Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                        fstrm.Write(buffer, 0, bytesRead)
                                                                        contents.Close()
                                                                        fstrm.Close()
                                                                    Catch
                                                                    End Try
                                                                End If
                                                            End If
                                                        End If
                                                        If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                            Dim workingpath As String = ""
                                                            Dim networkpath As String = Form1.userprefs.actorsavepath
                                                            Try
                                                                Dim tempstring As String = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                Dim hg As New IO.DirectoryInfo(tempstring)
                                                                If Not hg.Exists Then
                                                                    IO.Directory.CreateDirectory(tempstring)
                                                                End If
                                                                workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                If Not IO.File.Exists(workingpath) Then
                                                                    Dim buffer(4000000) As Byte
                                                                    Dim size As Integer = 0
                                                                    Dim bytesRead As Integer = 0
                                                                    Dim thumburl As String = newactor.actorthumb
                                                                    Dim req As HttpWebRequest = req.Create(thumburl)
                                                                    Dim res As HttpWebResponse = req.GetResponse()
                                                                    Dim contents As Stream = res.GetResponseStream()
                                                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                    While bytesToRead > 0
                                                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                        If size = 0 Then Exit While
                                                                        bytesToRead -= size
                                                                        bytesRead += size
                                                                    End While

                                                                    Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                    fstrm.Write(buffer, 0, bytesRead)
                                                                    contents.Close()
                                                                    fstrm.Close()
                                                                End If
                                                                newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                    newactor.actorthumb = Form1.userprefs.actornetworkpath & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                Else
                                                                    newactor.actorthumb = Form1.userprefs.actornetworkpath & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                End If
                                                            Catch
                                                            End Try
                                                        End If
                                                    End If
                                            End Select
                                        Next
                                        movietemplate.listactors.Add(newactor)
                                End Select
                            Next
                            While movietemplate.listactors.Count > userprefs.maxactors
                                movietemplate.listactors.RemoveAt(movietemplate.listactors.Count - 1)
                            End While
                        Catch ex As Exception
                            movietemplate.listactors = Nothing
                        End Try
                    End If

                    If trailerscraper = True Then
                        Try
                            Dim trailer As String
                            trailer = scraperfunction.gettrailerurl(movietoalter.fullmoviebody.imdbid, userprefs.imdbmirror)
                            If trailer <> Nothing Then
                                movietemplate.fullmoviebody.trailer = trailer
                            End If
                        Catch
                        End Try
                    End If

                    If thumburlscraper = True Then
                        Try
                            If userprefs.nfoposterscraper <> 0 Then
                                Dim thumbs As String = ""
                                If userprefs.nfoposterscraper = 1 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 15 Then
                                    Dim newobject3 As New IMPA.getimpaposters
                                    Dim teststring As New XmlDocument
                                    Dim testthumbs As String
                                    Try
                                        testthumbs = newobject3.getimpathumbs(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If


                                If userprefs.nfoposterscraper = 2 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                    Dim newobject2 As New tmdb_posters.Class1
                                    Dim teststring As New XmlDocument
                                    Dim testthumbs As String
                                    Try
                                        testthumbs = newobject2.gettmdbposters(movietoalter.fullmoviebody.imdbid)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If

                                If userprefs.nfoposterscraper = 4 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                    Dim newobject As New class_mpdb_thumbs.Class1
                                    Dim teststring As New XmlDocument
                                    Dim testthumbs As String
                                    Try
                                        testthumbs = newobject.get_mpdb_thumbs(movietoalter.fullmoviebody.imdbid)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If

                                If userprefs.nfoposterscraper = 8 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                    Dim thumbscraper As New imdb_thumbs.Class1
                                    Dim teststring As New XmlDocument
                                    Try
                                        Dim testthumbs As String
                                        testthumbs = thumbscraper.getimdbthumbs(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year, movietoalter.fullmoviebody.imdbid)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If




                                thumbs = "<thumblist>" & thumbs & "</thumblist>"

                                Try
                                    Dim thumbstring As New XmlDocument
                                    thumbstring.LoadXml(thumbs)
                                    For Each thisresult In thumbstring("thumblist")
                                        Select Case thisresult.Name
                                            Case "thumb"
                                                movietemplate.listthumbs.Add(thisresult.InnerText)
                                        End Select
                                    Next
                                Catch ex As Exception
                                End Try
                            End If
                        Catch
                        End Try
                    End If



                    If mediatags = True Or batchlist.runtime = True Then
                        If userprefs.enablehdtags = True Then
                            Try
                                Dim mediapath As String = filefunction.getfilename(movietoalter.fileinfo.fullpathandfilename)
                                movietemplate.filedetails = filefunction.get_hdtags(mediapath)
                                Try
                                    Dim tempstring As String
                                    Dim tempint As Integer
                                    Dim hours As Integer
                                    Dim minutes As Integer
                                    tempstring = movietemplate.filedetails.filedetails_video.duration
                                    tempint = tempstring.IndexOf("h")
                                    If tempint <> -1 Then
                                        hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                        tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                        tempstring = Trim(tempstring)
                                    End If
                                    tempint = tempstring.IndexOf("mn")
                                    If tempint <> -1 Then
                                        minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                                    End If
                                    If hours <> 0 Then
                                        hours = hours * 60
                                    End If
                                    minutes = minutes + hours
                                    If minutes = 0 Then
                                        If tempstring.IndexOf("min") <> -1 Then
                                            tempstring = tempstring.Replace("min", "")
                                            tempstring = tempstring.Replace(" ", "")
                                            If IsNumeric(tempstring) Then
                                                minutes = Convert.ToInt32(tempstring)
                                            End If
                                        End If
                                    End If
                                    movietemplate.fullmoviebody.runtime = minutes.ToString & " min"
                                Catch ex As Exception
                                End Try
                            Catch
                                movietemplate.filedetails = Nothing
                            End Try
                        Else
                            movietemplate.filedetails = Nothing
                        End If
                    End If

                    If batchlist.runtime = True Then
                        If movietemplate.filedetails.filedetails_video.duration <> Nothing Then
                            Dim tempstring As String
                            tempstring = movietemplate.filedetails.filedetails_video.duration
                            tempstring = tempstring.Replace("min", "")
                            tempstring = tempstring.Replace(" ", "")
                            If IsNumeric(tempstring) Then
                                movietemplate.fullmoviebody.runtime = movietemplate.filedetails.filedetails_video.duration
                            End If
                        End If
                        If movietemplate.fullmoviebody.runtime <> Nothing Then
                            If movietemplate.fullmoviebody.runtime <> "" Then
                                movietoalter.fullmoviebody.runtime = movietemplate.fullmoviebody.runtime
                            End If
                        End If
                    End If

                    If batchlist.director = True Then
                        If movietemplate.fullmoviebody.director <> Nothing Then
                            If movietemplate.fullmoviebody.director <> "" Then
                                movietoalter.fullmoviebody.director = movietemplate.fullmoviebody.director
                            End If
                        End If
                    End If

                    If batchlist.credits = True Then
                        If movietemplate.fullmoviebody.credits <> Nothing Then
                            If movietemplate.fullmoviebody.credits <> "" Then
                                movietoalter.fullmoviebody.credits = movietemplate.fullmoviebody.credits
                            End If
                        End If
                    End If
                    If batchlist.country = True Then
                        If movietemplate.fullmoviebody.country <> Nothing Then
                            If movietemplate.fullmoviebody.country <> "" Then
                                movietoalter.fullmoviebody.country = movietemplate.fullmoviebody.country
                            End If
                        End If
                    End If
                    If batchlist.genre = True Then
                        If movietemplate.fullmoviebody.genre <> Nothing Then
                            If movietemplate.fullmoviebody.genre <> "" Then
                                movietoalter.fullmoviebody.genre = movietemplate.fullmoviebody.genre
                            End If
                        End If
                    End If

                    If batchlist.mpaa = True Then
                        If movietemplate.fullmoviebody.mpaa <> Nothing Then
                            If movietemplate.fullmoviebody.mpaa <> "" Then
                                movietoalter.fullmoviebody.mpaa = movietemplate.fullmoviebody.mpaa
                            End If
                        End If
                    End If

                    If batchlist.plot = True Then
                        If movietemplate.fullmoviebody.plot <> Nothing Then
                            If movietemplate.fullmoviebody.plot <> "" Then
                                movietoalter.fullmoviebody.plot = movietemplate.fullmoviebody.plot
                            End If
                        End If
                    End If

                    If batchlist.premiered = True Then
                        If movietemplate.fullmoviebody.premiered <> Nothing Then
                            If movietemplate.fullmoviebody.premiered <> "" Then
                                movietoalter.fullmoviebody.premiered = movietemplate.fullmoviebody.premiered
                            End If
                        End If
                    End If

                    If batchlist.rating = True Then
                        If movietemplate.fullmoviebody.rating <> Nothing Then
                            If movietemplate.fullmoviebody.rating <> "" Then
                                movietoalter.fullmoviebody.rating = movietemplate.fullmoviebody.rating
                            End If
                        End If
                    End If



                    If batchlist.studio = True Then
                        If movietemplate.fullmoviebody.studio <> Nothing Then
                            If movietemplate.fullmoviebody.studio <> "" Then
                                movietoalter.fullmoviebody.studio = movietemplate.fullmoviebody.studio
                            End If
                        End If
                    End If

                    If batchlist.tagline = True Then
                        If movietemplate.fullmoviebody.tagline <> Nothing Then
                            If movietemplate.fullmoviebody.tagline <> "" Then
                                movietoalter.fullmoviebody.tagline = movietemplate.fullmoviebody.tagline
                            End If
                        End If
                    End If

                    If batchlist.outline = True Then
                        If movietemplate.fullmoviebody.outline <> Nothing Then
                            If movietemplate.fullmoviebody.outline <> "" Then
                                movietoalter.fullmoviebody.outline = movietemplate.fullmoviebody.outline
                            End If
                        End If
                    End If

                    If batchlist.top250 = True Then
                        If movietemplate.fullmoviebody.top250 <> Nothing Then
                            If movietemplate.fullmoviebody.top250 <> "" Then
                                movietoalter.fullmoviebody.top250 = movietemplate.fullmoviebody.top250
                            End If
                        End If
                    End If

                    If batchlist.votes = True Then
                        If movietemplate.fullmoviebody.votes <> Nothing Then
                            If movietemplate.fullmoviebody.votes <> "" Then
                                movietoalter.fullmoviebody.votes = movietemplate.fullmoviebody.votes
                            End If
                        End If
                    End If

                    If batchlist.trailer = True Then
                        If movietemplate.fullmoviebody.trailer <> Nothing Then
                            If movietemplate.fullmoviebody.trailer <> "" Then
                                movietoalter.fullmoviebody.trailer = movietemplate.fullmoviebody.trailer
                            End If
                        End If
                    End If

                    If batchlist.actors = True Then
                        If Not movietemplate.listactors Is Nothing Then
                            movietoalter.listactors = movietemplate.listactors
                        End If
                    End If

                    If batchlist.posterurls = True Then
                        If Not movietemplate.listthumbs Is Nothing Then
                            movietoalter.listthumbs = movietemplate.listthumbs
                        End If
                    End If
                    If batchlist.mediatags = True Then
                        If Not movietemplate.filedetails Is Nothing Then
                            movietoalter.filedetails = movietemplate.filedetails
                        End If
                    End If

                    nfofunction.savemovienfo(movietoalter.fileinfo.fullpathandfilename, movietoalter, True)
                    Thread.Sleep(0)


                    If missingposter = True Then
                        Try
                            Dim moviethumburl As String = ""
                            If IO.File.Exists(movietoalter.fileinfo.posterpath) = False Or userprefs.createfolderjpg = True And IO.File.Exists(movietoalter.fileinfo.posterpath.Replace(IO.Path.GetFileName(movietoalter.fileinfo.posterpath), "folder.fpg")) = False Then
                                Try
                                    Select Case userprefs.moviethumbpriority(0)
                                        Case "Internet Movie Poster Awards"
                                            moviethumburl = scraperfunction2.impathumb(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year)
                                        Case "IMDB"
                                            moviethumburl = scraperfunction2.imdbthumb(movietoalter.fullmoviebody.imdbid)
                                        Case "Movie Poster DB"
                                            moviethumburl = scraperfunction2.mpdbthumb(movietoalter.fullmoviebody.imdbid)
                                        Case "themoviedb.org"
                                            moviethumburl = scraperfunction2.tmdbthumb(movietoalter.fullmoviebody.imdbid)
                                    End Select
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If moviethumburl = "na" Then
                                        Select Case userprefs.moviethumbpriority(1)
                                            Case "Internet Movie Poster Awards"
                                                moviethumburl = scraperfunction2.impathumb(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year)
                                            Case "IMDB"
                                                moviethumburl = scraperfunction2.imdbthumb(movietoalter.fullmoviebody.imdbid)
                                            Case "Movie Poster DB"
                                                moviethumburl = scraperfunction2.mpdbthumb(movietoalter.fullmoviebody.imdbid)
                                            Case "themoviedb.org"
                                                moviethumburl = scraperfunction2.tmdbthumb(movietoalter.fullmoviebody.imdbid)
                                        End Select
                                    End If
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If moviethumburl = "na" Then
                                        Select Case userprefs.moviethumbpriority(2)
                                            Case "Internet Movie Poster Awards"
                                                moviethumburl = scraperfunction2.impathumb(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year)
                                            Case "IMDB"
                                                moviethumburl = scraperfunction2.imdbthumb(movietoalter.fullmoviebody.imdbid)
                                            Case "Movie Poster DB"
                                                moviethumburl = scraperfunction2.mpdbthumb(movietoalter.fullmoviebody.imdbid)
                                            Case "themoviedb.org"
                                                moviethumburl = scraperfunction2.tmdbthumb(movietoalter.fullmoviebody.imdbid)
                                        End Select
                                    End If
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If moviethumburl = "na" Then
                                        Select Case userprefs.moviethumbpriority(3)
                                            Case "Internet Movie Poster Awards"
                                                moviethumburl = scraperfunction2.impathumb(movietoalter.fullmoviebody.title, movietoalter.fullmoviebody.year)
                                            Case "IMDB"
                                                moviethumburl = scraperfunction2.imdbthumb(movietoalter.fullmoviebody.imdbid)
                                            Case "Movie Poster DB"
                                                moviethumburl = scraperfunction2.mpdbthumb(movietoalter.fullmoviebody.imdbid)
                                            Case "themoviedb.org"
                                                moviethumburl = scraperfunction2.tmdbthumb(movietoalter.fullmoviebody.imdbid)
                                        End Select
                                    End If
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If moviethumburl <> "" And moviethumburl <> "na" Then
                                        Dim newmoviethumbpath As String = movietoalter.fileinfo.posterpath
                                        Try
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = moviethumburl
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While

                                            If IO.File.Exists(movietoalter.fileinfo.posterpath) = False Then
                                                Dim fstrm As New FileStream(movietoalter.fileinfo.posterpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                fstrm.Write(buffer, 0, bytesRead)
                                                contents.Close()
                                                fstrm.Close()
                                            End If

                                            Dim temppath As String = movietoalter.fileinfo.posterpath.Replace(System.IO.Path.GetFileName(newmoviethumbpath), "folder.jpg")
                                            If Form1.userprefs.createfolderjpg = True Then
                                                If System.IO.File.Exists(temppath) = False Then
                                                    Dim fstrm2 As New FileStream(temppath, FileMode.OpenOrCreate, FileAccess.Write)
                                                    fstrm2.Write(buffer, 0, bytesRead)
                                                    contents.Close()
                                                    fstrm2.Close()
                                                End If
                                            End If
                                        Catch ex As Exception
                                        End Try
                                    End If
                                Catch
                                End Try
                            End If
                        Catch ex As Exception
                        End Try
                    End If


                    If missingfanart = True Then
                        Dim moviefanarturl As String
                        If IO.File.Exists(movietoalter.fileinfo.fanartpath) = False Then
                            Try
                                If BckWrkScnMovies.CancellationPending Then Exit Sub
                                Dim moviefanartexists As Boolean
                                Dim temp As String = movietoalter.fullmoviebody.imdbid
                                Dim fanarturl As String = "http://api.themoviedb.org/2.1/Movie.imdbLookup/en/xml/3f026194412846e530a208cf8a39e9cb/" & temp
                                Dim apple2(2000) As String
                                Dim fanartlinecount As Integer = 0
                                Try
                                    Dim wrGETURL As WebRequest
                                    wrGETURL = WebRequest.Create(fanarturl)
                                    Dim myProxy As New WebProxy("myproxy", 80)
                                    myProxy.BypassProxyOnLocal = True
                                    Dim objStream As Stream
                                    objStream = wrGETURL.GetResponse.GetResponseStream()
                                    Dim objReader As New StreamReader(objStream)
                                    Dim sLine As String = ""
                                    fanartlinecount = 0
                                    Do While Not sLine Is Nothing
                                        fanartlinecount += 1
                                        sLine = objReader.ReadLine
                                        apple2(fanartlinecount) = sLine
                                    Loop
                                    fanartlinecount -= 1
                                    Dim fanartfound As Boolean = False
                                    For g = 1 To fanartlinecount
                                        If apple2(g).IndexOf("<image type=""backdrop""") <> -1 Then
                                            If apple2(g).IndexOf("size=""original""") <> -1 Then
                                                Dim StartofURL As Integer = apple2(g).IndexOf("url=""") + 5
                                                Dim EndofURL As Integer = apple2(g).IndexOf("size=""original""") - 2
                                                apple2(g) = apple2(g).Substring(StartofURL, (EndofURL - StartofURL))
                                                apple2(g) = apple2(g).Trim
                                                If apple2(g).ToLower.IndexOf("http") <> -1 And apple2(g).ToLower.IndexOf(".jpg") <> -1 Or apple2(g).IndexOf(".jpeg") <> -1 Or apple2(g).IndexOf(".png") <> -1 Then
                                                    moviefanarturl = apple2(g)
                                                    fanartfound = True
                                                End If
                                            End If
                                            Exit For
                                        End If
                                    Next
                                    If fanartfound = False Then moviefanarturl = ""
                                Catch
                                End Try

                                If moviefanarturl <> "" Then



                                    'need to resize thumbs

                                    Try
                                        Dim buffer(4000000) As Byte
                                        Dim size As Integer = 0
                                        Dim bytesRead As Integer = 0

                                        Dim req As HttpWebRequest = req.Create(moviefanarturl)
                                        Dim res As HttpWebResponse = req.GetResponse()
                                        Dim contents As Stream = res.GetResponseStream()
                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                        Dim bmp As New Bitmap(contents)



                                        While bytesToRead > 0
                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                            If size = 0 Then Exit While
                                            bytesToRead -= size
                                            bytesRead += size
                                        End While



                                        If Form1.userprefs.resizefanart = 1 Then
                                            bmp.Save(movietoalter.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                        ElseIf Form1.userprefs.resizefanart = 2 Then
                                            If bmp.Width > 1280 Or bmp.Height > 720 Then
                                                Dim bm_source As New Bitmap(bmp)
                                                Dim bm_dest As New Bitmap(1280, 720)
                                                Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                                bm_dest.Save(movietoalter.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                            Else
                                                bmp.Save(movietoalter.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                            End If
                                        ElseIf Form1.userprefs.resizefanart = 3 Then
                                            If bmp.Width > 960 Or bmp.Height > 540 Then
                                                Dim bm_source As New Bitmap(bmp)
                                                Dim bm_dest As New Bitmap(960, 540)
                                                Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                                bm_dest.Save(movietoalter.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                            Else
                                                bmp.Save(movietoalter.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                            End If

                                        End If
                                        If IO.File.Exists(movietoalter.fileinfo.fanartpath) Then
                                            For Each paths In userprefs.offlinefolders
                                                Dim offlinepath As String = paths & "\"
                                                If movietoalter.fileinfo.fanartpath.IndexOf(offlinepath) <> -1 Then
                                                    Dim mediapath As String
                                                    mediapath = filefunction.getfilename(movietoalter.fileinfo.fullpathandfilename)
                                                    Call offlinedvd(movietoalter.fileinfo.fullpathandfilename, movietoalter.fullmoviebody.title, mediapath)
                                                End If
                                            Next
                                        End If
                                    Catch ex As Exception
                                    End Try
                                End If
                            Catch
                            End Try
                        End If
                    End If

                End If
                For g = 0 To fullmovielist.Count - 1
                    Try
                        If fullmovielist(g).fullpathandfilename = movietoalter.fileinfo.fullpathandfilename Then
                            Dim newfullmovie As ComboList
                            newfullmovie.fullpathandfilename = tempmovielist(f)
                            newfullmovie.foldername = filefunction.getlastfolder(tempmovielist(f))
                            newfullmovie.filename = IO.Path.GetFileName(tempmovielist(f))
                            newfullmovie.id = movietoalter.fullmoviebody.imdbid
                            Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                            Dim myDate2 As Date = filecreation2.LastWriteTime
                            Try
                                newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                            Catch ex2 As Exception
                            End Try
                            newfullmovie.titleandyear = movietoalter.fullmoviebody.title & " (" & movietoalter.fullmoviebody.year & ")"
                            newfullmovie.title = movietoalter.fullmoviebody.title
                            newfullmovie.genre = movietoalter.fullmoviebody.genre
                            newfullmovie.playcount = movietoalter.fullmoviebody.playcount
                            newfullmovie.rating = movietoalter.fullmoviebody.rating
                            newfullmovie.top250 = movietoalter.fullmoviebody.top250
                            newfullmovie.runtime = movietoalter.fullmoviebody.runtime
                            newfullmovie.outline = movietoalter.fullmoviebody.outline
                            If fullmovielist(g).sortorder <> Nothing Then
                                If fullmovielist(g).sortorder <> "" Then
                                    newfullmovie.sortorder = fullmovielist(g).sortorder
                                Else
                                    newfullmovie.sortorder = movietoalter.fullmoviebody.title
                                End If
                            Else
                                newfullmovie.sortorder = movietoalter.fullmoviebody.title
                            End If
                            Dim completebyte1 As Byte = 0
                            Dim fanartexists As Boolean = IO.File.Exists(filefunction.getfanartpath(newfullmovie.fullpathandfilename))
                            Dim posterexists As Boolean = IO.File.Exists(filefunction.getposterpath(newfullmovie.fullpathandfilename))
                            If fanartexists = False Then
                                completebyte1 += 1
                            End If
                            If posterexists = False Then
                                completebyte1 += 2
                            End If
                            newfullmovie.missingdata1 = completebyte1
                            fullmovielist.RemoveAt(g)
                            fullmovielist.Add(newfullmovie)

                            If workingmovie.fullpathandfilename = newfullmovie.fullpathandfilename Then
                                Call loadinfofile()
                            End If
                            Exit For
                        End If
                    Catch
                    End Try
                Next

                progresstext = tempmovielist(f)
                bckrescrapewizard.ReportProgress(888888, progresstext)
            Catch ex As Exception
            End Try
        Next
        Call ApplyFilters()
    End Sub

    Private Sub bckrescrapewizard_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles bckrescrapewizard.ProgressChanged
        If e.ProgressPercentage = 999999 Then
            ToolStripStatusLabel7.Text = e.UserState
        ElseIf e.ProgressPercentage = 888888 Then
            If e.UserState = workingmoviedetails.fileinfo.fullpathandfilename Then
                Call loadinfofile()
            End If
        End If
    End Sub

    Private Sub bckrescrapewizard_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bckrescrapewizard.RunWorkerCompleted
        If Not (e.Error Is Nothing) Then
            MsgBox(e.Error.ToString)
        End If
        globalthreadcounter -= 1

        ToolStripProgressBar6.Value = 0
        ToolStripProgressBar6.ProgressBar.Refresh()
        ToolStripProgressBar6.Visible = False
        ToolStripStatusLabel7.Text = "Full Movie Update"
        ToolStripStatusLabel7.Visible = False

        Call checkforrunningthreads()

    End Sub

    Private Sub bckgrounddroppedfiles_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles bckgrounddroppedfiles.DoWork
        Dim tempint As Integer
        Dim tempstring As String = ""
        globalthreadcounter += 1
        Dim added As Boolean = False
        Dim filecounter As Integer = 0
        Do While droppeditems.Count > 0
            filecounter += 1
            Dim progresstext As String = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
            bckgrounddroppedfiles.ReportProgress(999999, progresstext)
            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
            Dim path As String = droppeditems(0)
            Dim extension As String = IO.Path.GetExtension(path)
            Dim validfile As Boolean = False
            Select Case extension.ToLower
                Case ".avi"
                    validfile = True
                Case ".xvid"
                    validfile = True
                Case ".divx"
                    validfile = True
                Case ".img"
                    validfile = True
                Case ".mpg"
                    validfile = True
                Case ".mpeg"
                    validfile = True
                Case ".mov"
                    validfile = True
                Case ".rm"
                    validfile = True
                Case ".3gp"
                    validfile = True
                Case ".m4v"
                    validfile = True
                Case ".wmv"
                    validfile = True
                Case ".asf"
                    validfile = True
                Case ".mp4"
                    validfile = True
                Case ".mkv"
                    validfile = True
                Case ".nrg"
                    validfile = True
                Case ".iso"
                    validfile = True
                Case ".rmvb"
                    validfile = True
                Case ".ogm"
                    validfile = True
                Case ".bin"
                    validfile = True
                Case ".ts"
                    validfile = True
                Case ".vob"
                    validfile = True
                Case ".m2ts"
                    validfile = True
                Case ".rar"
                    validfile = True
                Case ".ifo"
                    validfile = True
            End Select
            If validfile = True Then

                Dim posterpath As String = ""
                Dim fanartpath As String = ""
                Dim thumbstring As New XmlDocument

                Dim newmovie As New FullMovieDetails
                Dim newdetails As New NewMovie
                Dim mediapath As String = path
                Dim firsttitle As String = ""
                If userprefs.basicsavemode = False Then
                    newdetails.nfopathandfilename = path.Replace(IO.Path.GetExtension(path), ".nfo")
                Else
                    newdetails.nfopathandfilename = path.Replace(IO.Path.GetFileName(path), "movie.nfo")
                End If
                newdetails.mediapathandfilename = path

                newdetails.title = IO.Path.GetFileName(path).Replace(IO.Path.GetExtension(path), "")

                If userprefs.usefoldernames = True Then
                    Dim tempstring4 As String
                    tempstring4 = newdetails.nfopathandfilename.ToLower
                    If tempstring4.ToLower.IndexOf("video_ts") = -1 Then
                        newdetails.title = newdetails.nfopathandfilename.Replace(IO.Path.GetFileName(newdetails.nfopathandfilename), "")
                        newdetails.title = newdetails.title.Substring(0, newdetails.title.Length - 1)
                        newdetails.title = newdetails.title.Substring(newdetails.title.LastIndexOf("\") + 1, newdetails.title.Length - newdetails.title.LastIndexOf("\") - 1)
                    End If
                End If

                If extension.ToLower = ".ifo" Then
                    If IO.File.Exists(newdetails.nfopathandfilename) = False Then
                        Dim paths() As String
                        If newdetails.nfopathandfilename.IndexOf("\") <> -1 Then
                            paths = newdetails.nfopathandfilename.Split("\")
                        ElseIf newdetails.nfopathandfilename.IndexOf("/") <> -1 Then
                            paths = newdetails.nfopathandfilename.Split("/")
                        End If
                        Dim depthecount As Integer
                        depthecount = paths.GetUpperBound(0)
                        newdetails.title = Nothing

                        For h = depthecount To 0 Step -1
                            Dim temppath As String
                            temppath = paths(h)
                            paths(h) = paths(h).ToLower
                            If paths(h).ToLower.IndexOf("video_ts") = -1 Then
                                newdetails.title = temppath
                                Exit For
                            End If
                        Next
                    Else
                        newdetails.nfopathandfilename = Nothing
                        newdetails.title = Nothing
                    End If
                End If

                If newdetails.title <> Nothing Then
                    If newdetails.title <> "" Then
                        Dim year As String
                        Dim extrapossibleID As String
                        extrapossibleID = Nothing
                        If IO.File.Exists(newdetails.nfopathandfilename) Then
                            Dim tempinfo As String = ""
                            Dim objReader As New System.IO.StreamReader(newdetails.nfopathandfilename)
                            tempinfo = objReader.ReadToEnd
                            objReader.Close()
                            extrapossibleID = Nothing
                            Dim T As String = tempinfo
                            Dim mat As Match
                            mat = Nothing
                            mat = Regex.Match(T, "(tt\d{7})")
                            If mat.Success = True Then
                                extrapossibleID = mat.Value
                                If userprefs.renamenfofiles = True Then
                                    IO.File.Move(newdetails.nfopathandfilename, newdetails.nfopathandfilename.Replace(".nfo", ".info"))
                                End If
                            Else
                                extrapossibleID = Nothing
                            End If

                            If extrapossibleID = Nothing Then
                                mat = Nothing
                                T = newdetails.nfopathandfilename
                                mat = Regex.Match(T, "(tt\d{7})")
                                If mat.Success = True Then
                                    extrapossibleID = mat.Value
                                Else
                                    extrapossibleID = Nothing
                                End If
                            End If

                            If extrapossibleID = Nothing Then
                                Dim M As Match
                                M = Regex.Match(newdetails.title, "(\([\d]{4}\))")
                                If M.Success = True Then
                                    year = M.Value
                                Else
                                    year = Nothing
                                End If
                                If year = Nothing Then
                                    M = Regex.Match(newdetails.title, "(\[[\d]{4}\])")
                                    If M.Success = True Then
                                        year = M.Value
                                    Else
                                        year = Nothing
                                    End If
                                End If
                            End If
                        End If
                        newdetails.title = filefunction.cleanfilename(newdetails.title)
                        If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                        '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
                        Dim scraperfunction As New Classimdb
                        Dim body As String
                        Dim actors As String
                        Dim trailerurl As String
                        Dim actorlist As String
                        Dim thumblist As String
                        Dim certificates As New List(Of String)
                        If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                        progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                        bckgrounddroppedfiles.ReportProgress(999999, progresstext)

                        body = scraperfunction.getimdbbody(newdetails.title, year, extrapossibleID, userprefs.imdbmirror, imdbcounter)
                        imdbcounter += 1
                        progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                        bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                        If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                        Dim thisresult As XmlNode = Nothing
                        If body = "MIC" Then
                            newmovie.fullmoviebody.genre = "problem"
                            If newmovie.fullmoviebody.title = Nothing Then
                                newmovie.fullmoviebody.title = "Unknown Title"
                            End If
                            If newmovie.fullmoviebody.title = "" Then
                                newmovie.fullmoviebody.title = "Unknown Title"
                            End If
                            If newmovie.fullmoviebody.year = Nothing Then
                                newmovie.fullmoviebody.year = "0000"
                            End If
                            If newmovie.fullmoviebody.rating = Nothing Then
                                newmovie.fullmoviebody.rating = "0"
                            End If
                            If newmovie.fullmoviebody.top250 = Nothing Then
                                newmovie.fullmoviebody.top250 = "0"
                            End If
                            If newmovie.fullmoviebody.playcount = Nothing Then
                                newmovie.fullmoviebody.playcount = "0"
                            End If
                            If newmovie.fullmoviebody.title = "Unknown Title" Then
                                newmovie.fullmoviebody.plot = "This Movie has could not be identified by Media Companion, to add the movie manually, go to the movie edit page and select ""Change Movie"" to manually select the correct movie"
                                If newdetails.title <> Nothing Then
                                    If newdetails.title = "" Then
                                        newdetails.title = "Unknown Title"
                                    End If
                                Else
                                    newdetails.title = "Unknown Title"
                                End If
                                newmovie.fullmoviebody.title = newdetails.title
                            End If
                            If newmovie.fullmoviebody.title = "Unknown Title" Then
                                newmovie.fullmoviebody.genre = "Problem"
                            End If
                            Dim myDate2 As Date = System.DateTime.Now
                            Try
                                newmovie.fileinfo.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                            Catch ex2 As Exception
                            End Try
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                            bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                            nfofunction.savemovienfo(newdetails.nfopathandfilename, newmovie, True)
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            Dim movietoadd As New ComboList
                            movietoadd.fullpathandfilename = newdetails.nfopathandfilename
                            movietoadd.filename = IO.Path.GetFileName(newdetails.nfopathandfilename)
                            movietoadd.foldername = filefunction.getlastfolder(newdetails.nfopathandfilename)
                            movietoadd.title = newmovie.fullmoviebody.title
                            If newmovie.fullmoviebody.title <> Nothing Then
                                If newmovie.fullmoviebody.year <> Nothing Then
                                    movietoadd.titleandyear = newmovie.fullmoviebody.title & " (" & newmovie.fullmoviebody.year & ")"
                                Else
                                    movietoadd.titleandyear = newmovie.fullmoviebody.title & " (0000)"
                                End If
                            Else
                                movietoadd.titleandyear = "Unknown (0000)"
                            End If
                            movietoadd.runtime = "0"
                            movietoadd.year = newmovie.fullmoviebody.year

                            Dim filecreation As New FileInfo(newdetails.nfopathandfilename)
                            Dim myDate As Date = filecreation.LastWriteTime
                            Try
                                movietoadd.filedate = Format(myDate, "yyyyMMddHHmmss").ToString
                            Catch ex As Exception
                                'MsgBox(ex.ToString)
                            End Try
                            movietoadd.outline = newmovie.fullmoviebody.outline
                            movietoadd.id = newmovie.fullmoviebody.imdbid
                            movietoadd.rating = newmovie.fullmoviebody.rating
                            movietoadd.top250 = newmovie.fullmoviebody.top250
                            movietoadd.genre = newmovie.fullmoviebody.genre
                            movietoadd.playcount = newmovie.fullmoviebody.playcount
                            movietoadd.missingdata1 = 3
                            added = False
                            For Each path In moviefolders
                                If movietoadd.fullpathandfilename.IndexOf(path) <> -1 Then
                                    added = True
                                    fullmovielist.Add(movietoadd)
                                    Exit For
                                End If
                            Next
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                            bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                        Else
                            Try
                                thumbstring.LoadXml(body)
                                For Each thisresult In thumbstring("movie")
                                    Select Case thisresult.Name
                                        Case "title"
                                            If userprefs.keepfoldername = False Then
                                                newmovie.fullmoviebody.title = thisresult.InnerText
                                            Else
                                                If userprefs.usefoldernames = False Then
                                                    tempstring = IO.Path.GetFileName(newdetails.nfopathandfilename)
                                                    newmovie.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                                                Else
                                                    newmovie.fullmoviebody.title = filefunction.cleanfilename(filefunction.getlastfolder(newdetails.nfopathandfilename))
                                                End If
                                            End If
                                            Try
                                                If newmovie.fullmoviebody.title.ToLower.IndexOf("the ") <> -1 Then
                                                    newmovie.fullmoviebody.title = newmovie.fullmoviebody.title.Substring(4, newmovie.fullmoviebody.title.Length - 4) & " ,The"
                                                End If
                                            Catch
                                            End Try
                                        Case "credits"
                                            newmovie.fullmoviebody.credits = thisresult.InnerText
                                        Case "director"
                                            newmovie.fullmoviebody.director = thisresult.InnerText
                                        Case "genre"
                                            newmovie.fullmoviebody.genre = thisresult.InnerText
                                        Case "mpaa"
                                            newmovie.fullmoviebody.mpaa = thisresult.InnerText
                                        Case "outline"
                                            newmovie.fullmoviebody.outline = thisresult.InnerText
                                        Case "plot"
                                            newmovie.fullmoviebody.plot = thisresult.InnerText
                                        Case "premiered"
                                            newmovie.fullmoviebody.premiered = thisresult.InnerText
                                        Case "rating"
                                            newmovie.fullmoviebody.rating = thisresult.InnerText
                                        Case "runtime"
                                            newmovie.fullmoviebody.runtime = thisresult.InnerText
                                        Case "studio"
                                            newmovie.fullmoviebody.studio = thisresult.InnerText
                                        Case "tagline"
                                            newmovie.fullmoviebody.tagline = thisresult.InnerText
                                        Case "top250"
                                            newmovie.fullmoviebody.top250 = thisresult.InnerText
                                        Case "votes"
                                            newmovie.fullmoviebody.votes = thisresult.InnerText
                                        Case "year"
                                            newmovie.fullmoviebody.year = thisresult.InnerText
                                        Case "id"
                                            newmovie.fullmoviebody.imdbid = thisresult.InnerText
                                        Case "cert"
                                            certificates.Add(thisresult.InnerText)
                                    End Select
                                Next
                            Catch ex As Exception

                                If userprefs.usefoldernames = False Then
                                    tempstring = IO.Path.GetFileName(newdetails.nfopathandfilename)
                                    newmovie.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                                Else
                                    newmovie.fullmoviebody.title = filefunction.cleanfilename(filefunction.getlastfolder(newdetails.nfopathandfilename))
                                End If
                            End Try
                            If newmovie.fullmoviebody.playcount = Nothing Then newmovie.fullmoviebody.playcount = "0"
                            If newmovie.fullmoviebody.top250 = Nothing Then newmovie.fullmoviebody.top250 = "0"
                            Dim myDate2 As Date = System.DateTime.Now
                            Try
                                newmovie.fileinfo.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                            Catch ex2 As Exception
                            End Try
                            Dim done As Boolean = False
                            For g = 0 To UBound(userprefs.certificatepriority)
                                For Each cert In certificates
                                    If cert.IndexOf(userprefs.certificatepriority(g)) <> -1 Then
                                        newmovie.fullmoviebody.mpaa = cert.Substring(cert.IndexOf("|") + 1, cert.Length - cert.IndexOf("|") - 1)
                                        done = True
                                        Exit For
                                    End If
                                Next
                                If done = True Then Exit For
                            Next

                            actorlist = scraperfunction.getimdbactors(userprefs.imdbmirror, newmovie.fullmoviebody.imdbid, newmovie.fullmoviebody.title, userprefs.maxactors)
                            Try
                                thumbstring.LoadXml(actorlist)
                                For g = 0 To actordb.Count - 1
                                    If actordb(g).movieid = newmovie.fullmoviebody.imdbid Then
                                        actordb.RemoveAt(g)
                                    End If
                                Next
                                thisresult = Nothing
                                For Each thisresult In thumbstring("actorlist")
                                    Select Case thisresult.Name
                                        Case "actor"
                                            Dim newactor As New MovieActors
                                            Dim detail As XmlNode = Nothing
                                            For Each detail In thisresult.ChildNodes
                                                Select Case detail.Name
                                                    Case "name"
                                                        newactor.actorname = detail.InnerText
                                                    Case "role"
                                                        newactor.actorrole = detail.InnerText
                                                    Case "thumb"
                                                        newactor.actorthumb = detail.InnerText
                                                    Case "actorid"
                                                        If newactor.actorthumb <> Nothing Then
                                                            If userprefs.actorsave = True And detail.InnerText <> "" Then
                                                                Dim workingpath As String = ""
                                                                Dim networkpath As String = Form1.userprefs.actorsavepath
                                                                Try
                                                                    tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                    Dim hg As New IO.DirectoryInfo(tempstring)
                                                                    If Not hg.Exists Then
                                                                        IO.Directory.CreateDirectory(tempstring)
                                                                    End If
                                                                    workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                    If Not IO.File.Exists(workingpath) Then
                                                                        Dim buffer(4000000) As Byte
                                                                        Dim size As Integer = 0
                                                                        Dim bytesRead As Integer = 0
                                                                        Dim thumburl As String = newactor.actorthumb
                                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                                        Dim contents As Stream = res.GetResponseStream()
                                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                        While bytesToRead > 0
                                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                            If size = 0 Then Exit While
                                                                            bytesToRead -= size
                                                                            bytesRead += size
                                                                        End While

                                                                        Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                        fstrm.Write(buffer, 0, bytesRead)
                                                                        contents.Close()
                                                                        fstrm.Close()
                                                                    End If
                                                                    newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                    If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                        newactor.actorthumb = Form1.userprefs.actornetworkpath & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                    Else
                                                                        newactor.actorthumb = Form1.userprefs.actornetworkpath & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                    End If
                                                                Catch
                                                                End Try
                                                            End If
                                                        End If
                                                End Select
                                            Next
                                            newmovie.listactors.Add(newactor)
                                            Dim actornew As New ActorDatabase
                                            actornew.actorname = newactor.actorname
                                            actornew.movieid = newmovie.fullmoviebody.imdbid
                                            actordb.Add(actornew)
                                    End Select
                                Next

                                While newmovie.listactors.Count > userprefs.maxactors
                                    newmovie.listactors.RemoveAt(newmovie.listactors.Count - 1)
                                End While
                            Catch ex As Exception
                                newmovie.listactors.Clear()
                            End Try

                            Try
                                Dim trailer As String
                                progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                If userprefs.gettrailer = True Then
                                    trailer = scraperfunction.gettrailerurl(newmovie.fullmoviebody.imdbid, userprefs.imdbmirror)
                                    If trailer <> Nothing Then
                                        newmovie.fullmoviebody.trailer = trailer
                                    End If
                                End If
                            Catch
                            End Try
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                            bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                            If userprefs.nfoposterscraper <> 0 Then
                                Dim thumbs As String = ""
                                If userprefs.nfoposterscraper = 1 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 15 Then
                                    Dim newobject3 As New IMPA.getimpaposters
                                    Dim teststring As New XmlDocument
                                    Dim testthumbs As String
                                    Try
                                        testthumbs = newobject3.getimpathumbs(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If

                                If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                If userprefs.nfoposterscraper = 2 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                    Dim newobject2 As New tmdb_posters.Class1
                                    Dim teststring As New XmlDocument
                                    Dim testthumbs As String
                                    Try
                                        testthumbs = newobject2.gettmdbposters(newmovie.fullmoviebody.imdbid)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If
                                If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                If userprefs.nfoposterscraper = 4 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                    Dim newobject As New class_mpdb_thumbs.Class1
                                    Dim teststring As New XmlDocument
                                    Dim testthumbs As String
                                    Try
                                        testthumbs = newobject.get_mpdb_thumbs(newmovie.fullmoviebody.imdbid)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If
                                If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                If userprefs.nfoposterscraper = 8 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                                    Dim thumbscraper As New imdb_thumbs.Class1
                                    Dim teststring As New XmlDocument
                                    Try
                                        Dim testthumbs As String
                                        testthumbs = thumbscraper.getimdbthumbs(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year, newmovie.fullmoviebody.imdbid)
                                        Dim testthumbs2 As String = "<totalthumbs>" & testthumbs & "</totalthumbs>"
                                        teststring.LoadXml(testthumbs2)
                                        thumbs = thumbs & testthumbs.ToString
                                    Catch ex As Exception
                                        Thread.Sleep(1)
                                    End Try
                                End If

                                thumbs = "<thumblist>" & thumbs & "</thumblist>"

                                Try
                                    thumbstring.LoadXml(thumbs)



                                    For Each thisresult In thumbstring("thumblist")
                                        Select Case thisresult.Name
                                            Case "thumb"
                                                newmovie.listthumbs.Add(thisresult.InnerText)
                                        End Select
                                    Next
                                Catch ex As Exception

                                    newmovie.listthumbs.Clear()
                                End Try
                            End If
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                            bckgrounddroppedfiles.ReportProgress(999999, progresstext)

                            Try
                                newmovie.filedetails = filefunction.get_hdtags(newdetails.mediapathandfilename)
                                If newmovie.filedetails.filedetails_video.duration <> Nothing Then
                                    Try
                                        '1h 24mn 48s 546ms
                                        Dim hours As Integer
                                        Dim minutes As Integer
                                        tempstring = newmovie.filedetails.filedetails_video.duration
                                        tempint = tempstring.IndexOf("h")
                                        If tempint <> -1 Then
                                            hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                            tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                            tempstring = Trim(tempstring)
                                        End If
                                        tempint = tempstring.IndexOf("mn")
                                        If tempint <> -1 Then
                                            minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                                        End If
                                        If hours <> 0 Then
                                            hours = hours * 60
                                        End If
                                        minutes = minutes + hours
                                        If minutes = 0 Then
                                            If tempstring.IndexOf("min") <> -1 Then
                                                tempstring = tempstring.Replace("min", "")
                                                tempstring = tempstring.Replace(" ", "")
                                                If IsNumeric(tempstring) Then
                                                    minutes = Convert.ToInt32(tempstring)
                                                End If
                                            End If
                                        End If
                                        newmovie.fullmoviebody.runtime = minutes.ToString & " min"
                                        scraperlog = scraperlog & "HD Tags Added OK" & vbCrLf
                                    Catch ex As Exception

                                    End Try
                                End If
                            Catch ex As Exception

                            End Try






                            If newmovie.fullmoviebody.title = Nothing Then
                                newmovie.fullmoviebody.title = "Unknown Title"
                            End If
                            If newmovie.fullmoviebody.title = "" Then
                                newmovie.fullmoviebody.title = "Unknown Title"
                            End If
                            If newmovie.fullmoviebody.year = Nothing Then
                                newmovie.fullmoviebody.year = "0000"
                            End If
                            If newmovie.fullmoviebody.rating = Nothing Then
                                newmovie.fullmoviebody.rating = "0"
                            End If
                            If newmovie.fullmoviebody.top250 = Nothing Then
                                newmovie.fullmoviebody.top250 = "0"
                            End If
                            If newmovie.fullmoviebody.playcount = Nothing Then
                                newmovie.fullmoviebody.playcount = "0"
                            End If
                            If newmovie.fullmoviebody.title = "Unknown Title" Then
                                newmovie.fullmoviebody.plot = "This Movie has could not be identified by Media Companion, to add the movie manually, go to the movie edit page and select ""Change Movie"" to manually select the correct movie"
                                If newdetails.title <> Nothing Then
                                    If newdetails.title = "" Then
                                        newdetails.title = "Unknown Title"
                                    End If
                                Else
                                    newdetails.title = "Unknown Title"
                                End If
                                newmovie.fullmoviebody.title = newdetails.title
                            End If
                            If newmovie.fullmoviebody.title = "Unknown Title" Then
                                newmovie.fullmoviebody.genre = "Problem"
                            End If
                            If newmovie.fullmoviebody.runtime = Nothing Then
                                newmovie.fullmoviebody.runtime = "0"
                            End If
                            nfofunction.savemovienfo(newdetails.nfopathandfilename, newmovie, True)
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                            bckgrounddroppedfiles.ReportProgress(999999, progresstext)

                            Dim movietoadd As New ComboList
                            movietoadd.runtime = newmovie.fullmoviebody.runtime
                            movietoadd.fullpathandfilename = newdetails.nfopathandfilename
                            movietoadd.filename = IO.Path.GetFileName(newdetails.nfopathandfilename)
                            movietoadd.foldername = filefunction.getlastfolder(newdetails.nfopathandfilename)
                            movietoadd.title = newmovie.fullmoviebody.title
                            If newmovie.fullmoviebody.title <> Nothing Then
                                If newmovie.fullmoviebody.year <> Nothing Then
                                    movietoadd.titleandyear = newmovie.fullmoviebody.title & " (" & newmovie.fullmoviebody.year & ")"
                                Else
                                    movietoadd.titleandyear = newmovie.fullmoviebody.title & " (0000)"
                                End If
                            Else
                                movietoadd.titleandyear = "Unknown (0000)"
                            End If
                            movietoadd.year = newmovie.fullmoviebody.year

                            Dim filecreation As New FileInfo(newdetails.nfopathandfilename)
                            Dim myDate As Date = filecreation.LastWriteTime
                            Try
                                movietoadd.filedate = Format(myDate, "yyyyMMddHHmmss").ToString
                                movietoadd.createdate = Format(myDate, "yyyyMMddHHmmss").ToString
                            Catch ex As Exception
                                'MsgBox(ex.ToString)
                            End Try
                            movietoadd.outline = newmovie.fullmoviebody.outline
                            movietoadd.id = newmovie.fullmoviebody.imdbid
                            movietoadd.rating = newmovie.fullmoviebody.rating
                            movietoadd.top250 = newmovie.fullmoviebody.top250
                            movietoadd.genre = newmovie.fullmoviebody.genre
                            movietoadd.playcount = newmovie.fullmoviebody.playcount
                            movietoadd.sortorder = newmovie.fullmoviebody.title
                            movietoadd.playcount = "0"
                            Dim completebyte1 As Byte = 0
                            Dim fanartexists As Boolean = IO.File.Exists(filefunction.getfanartpath(movietoadd.fullpathandfilename))
                            Dim posterexists As Boolean = IO.File.Exists(filefunction.getposterpath(movietoadd.fullpathandfilename))
                            If fanartexists = False Then
                                completebyte1 += 1
                            End If
                            If posterexists = False Then
                                completebyte1 += 2
                            End If
                            movietoadd.missingdata1 = completebyte1
                            added = False
                            For Each path In moviefolders
                                If movietoadd.fullpathandfilename.IndexOf(path) <> -1 Then
                                    added = True
                                    fullmovielist.Add(movietoadd)
                                    Exit For
                                End If
                            Next
                            If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                            progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                            bckgrounddroppedfiles.ReportProgress(999999, progresstext)

                            Dim moviethumburl As String = ""
                            If userprefs.scrapemovieposters = True And userprefs.overwritethumbs = True Or IO.File.Exists(filefunction.getposterpath(newdetails.nfopathandfilename)) = False Then
                                Try
                                    If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                    progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                    bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                    Select Case userprefs.moviethumbpriority(0)
                                        Case "Internet Movie Poster Awards"
                                            moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                        Case "IMDB"
                                            moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "Movie Poster DB"
                                            moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                        Case "themoviedb.org"
                                            moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                    End Select
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                    progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                    bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                    If moviethumburl = "na" Then
                                        Select Case userprefs.moviethumbpriority(1)
                                            Case "Internet Movie Poster Awards"
                                                moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                            Case "IMDB"
                                                moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                            Case "Movie Poster DB"
                                                moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                            Case "themoviedb.org"
                                                moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                        End Select
                                    End If
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                    progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                    bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                    If moviethumburl = "na" Then
                                        Select Case userprefs.moviethumbpriority(2)
                                            Case "Internet Movie Poster Awards"
                                                moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                            Case "IMDB"
                                                moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                            Case "Movie Poster DB"
                                                moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                            Case "themoviedb.org"
                                                moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                        End Select
                                    End If
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                    progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                    bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                    If moviethumburl = "na" Then
                                        Select Case userprefs.moviethumbpriority(3)
                                            Case "Internet Movie Poster Awards"
                                                moviethumburl = scraperfunction2.impathumb(newmovie.fullmoviebody.title, newmovie.fullmoviebody.year)
                                            Case "IMDB"
                                                moviethumburl = scraperfunction2.imdbthumb(newmovie.fullmoviebody.imdbid)
                                            Case "Movie Poster DB"
                                                moviethumburl = scraperfunction2.mpdbthumb(newmovie.fullmoviebody.imdbid)
                                            Case "themoviedb.org"
                                                moviethumburl = scraperfunction2.tmdbthumb(newmovie.fullmoviebody.imdbid)
                                        End Select
                                    End If
                                Catch
                                    moviethumburl = "na"
                                End Try
                                Try
                                    If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                    progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                    bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                    If moviethumburl <> "" And moviethumburl <> "na" Then
                                        Dim newmoviethumbpath As String = filefunction.getposterpath(newdetails.nfopathandfilename)
                                        Try
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = moviethumburl
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While
                                            'scraperlog = scraperlog & "Downloading Movie Thumbnail at URL :- " & newmoviethumbpath & vbCrLf
                                            'scraperlog = scraperlog & "Unable to Download Thumb" & vbCrLf
                                            'scraperlog = scraperlog & "Saving Thumbnail To Path :- " & newmoviethumbpath & vbCrLf
                                            Dim fstrm As New FileStream(newmoviethumbpath, FileMode.OpenOrCreate, FileAccess.Write)
                                            fstrm.Write(buffer, 0, bytesRead)
                                            contents.Close()
                                            fstrm.Close()


                                            Dim temppath As String = newmoviethumbpath.Replace(System.IO.Path.GetFileName(newmoviethumbpath), "folder.jpg")
                                            If Form1.userprefs.createfolderjpg = True Then
                                                If Form1.userprefs.overwritethumbs = True Or System.IO.File.Exists(temppath) = False Then
                                                    scraperlog = scraperlog & "Saving folder.jpg To Path :- " & temppath & vbCrLf
                                                    Dim fstrm2 As New FileStream(temppath, FileMode.OpenOrCreate, FileAccess.Write)
                                                    fstrm2.Write(buffer, 0, bytesRead)
                                                    contents.Close()
                                                    fstrm2.Close()
                                                Else
                                                    scraperlog = scraperlog & "folder.jpg Not Saved to :- " & temppath & ", file already exists" & vbCrLf
                                                End If
                                            End If
                                        Catch ex As Exception
                                            scraperlog = scraperlog & "Problem Saving Thumbnail" & vbCrLf
                                            scraperlog = scraperlog & "Error Returned :- " & ex.ToString & vbCrLf & vbCrLf
                                        End Try
                                    End If
                                Catch
                                End Try
                            End If




                            If Form1.userprefs.overwritethumbs = True Or Form1.userprefs.overwritethumbs = False And IO.File.Exists(filefunction.getfanartpath(newdetails.nfopathandfilename)) = False Then
                                If Form1.userprefs.savefanart = False Then
                                    'scraperlog = scraperlog & "Fanart Not Downloaded - Disabled in preferences, use browser to find and add Fanart" & vbCrLf
                                Else
                                    Try
                                        If bckgrounddroppedfiles.CancellationPending Then Exit Sub
                                        progresstext = "Adding Dropped file(s), " & droppeditems.Count.ToString & " items remaining"
                                        bckgrounddroppedfiles.ReportProgress(999999, progresstext)
                                        Dim moviefanartexists As Boolean
                                        Dim fanarturlpath As String = filefunction.getfanartpath(newdetails.nfopathandfilename)

                                        moviethumburl = ""
                                        moviefanartexists = System.IO.File.Exists(fanarturlpath)
                                        If moviefanartexists = False Or Form1.userprefs.overwritethumbs = True Then

                                            Dim temp As String = newmovie.fullmoviebody.imdbid

                                            Dim fanarturl As String = "http://api.themoviedb.org/2.1/Movie.imdbLookup/en/xml/3f026194412846e530a208cf8a39e9cb/" & temp
                                            Dim apple2(2000) As String
                                            Dim fanartlinecount As Integer = 0
                                            Try
                                                Dim wrGETURL As WebRequest
                                                wrGETURL = WebRequest.Create(fanarturl)
                                                Dim myProxy As New WebProxy("myproxy", 80)
                                                myProxy.BypassProxyOnLocal = True
                                                Dim objStream As Stream
                                                objStream = wrGETURL.GetResponse.GetResponseStream()
                                                Dim objReader As New StreamReader(objStream)
                                                Dim sLine As String = ""
                                                fanartlinecount = 0
                                                Do While Not sLine Is Nothing
                                                    fanartlinecount += 1
                                                    sLine = objReader.ReadLine
                                                    apple2(fanartlinecount) = sLine
                                                Loop
                                                fanartlinecount -= 1
                                                Dim fanartfound As Boolean = False
                                                For g = 1 To fanartlinecount
                                                    If apple2(g).IndexOf("<image type=""backdrop""") <> -1 Then
                                                        If apple2(g).IndexOf("size=""original""") <> -1 Then
                                                            Dim StartofURL As Integer = apple2(g).IndexOf("url=""") + 5
                                                            Dim EndofURL As Integer = apple2(g).IndexOf("size=""original""") - 2
                                                            apple2(g) = apple2(g).Substring(StartofURL, (EndofURL - StartofURL))
                                                            apple2(g) = apple2(g).Trim
                                                            If apple2(g).ToLower.IndexOf("http") <> -1 And apple2(g).ToLower.IndexOf(".jpg") <> -1 Or apple2(g).IndexOf(".jpeg") <> -1 Or apple2(g).IndexOf(".png") <> -1 Then
                                                                moviethumburl = apple2(g)
                                                                fanartfound = True
                                                            End If
                                                        End If
                                                        Exit For
                                                    End If
                                                Next
                                                If fanartfound = False Then moviethumburl = ""
                                            Catch
                                            End Try
                                            If moviethumburl <> "" Then


                                                scraperlog = scraperlog & "Fanart URL is " & fanarturl & vbCrLf
                                                scraperlog = scraperlog & "Saving Fanart As :- " & fanarturlpath & vbCrLf

                                                'need to resize thumbs

                                                Try
                                                    Dim buffer(4000000) As Byte
                                                    Dim size As Integer = 0
                                                    Dim bytesRead As Integer = 0

                                                    Dim req As HttpWebRequest = req.Create(moviethumburl)
                                                    Dim res As HttpWebResponse = req.GetResponse()
                                                    Dim contents As Stream = res.GetResponseStream()
                                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                                    Dim bmp As New Bitmap(contents)



                                                    While bytesToRead > 0
                                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                                        If size = 0 Then Exit While
                                                        bytesToRead -= size
                                                        bytesRead += size
                                                    End While



                                                    If Form1.userprefs.resizefanart = 1 Then
                                                        bmp.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                    ElseIf Form1.userprefs.resizefanart = 2 Then
                                                        If bmp.Width > 1280 Or bmp.Height > 720 Then
                                                            Dim bm_source As New Bitmap(bmp)
                                                            Dim bm_dest As New Bitmap(1280, 720)
                                                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                            gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                                            bm_dest.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                        Else
                                                            bmp.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                        End If
                                                    ElseIf Form1.userprefs.resizefanart = 3 Then
                                                        If bmp.Width > 960 Or bmp.Height > 540 Then
                                                            Dim bm_source As New Bitmap(bmp)
                                                            Dim bm_dest As New Bitmap(960, 540)
                                                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                            gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                                            bm_dest.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                        Else
                                                            bmp.Save(fanarturlpath, Imaging.ImageFormat.Jpeg)
                                                        End If

                                                    End If
                                                Catch ex As Exception
                                                    Try
                                                        scraperlog = scraperlog & "Fanart Not Saved to :- " ' & moviethumbpath & vbCrLf
                                                        scraperlog = scraperlog & "Error received :- " & ex.ToString & vbCrLf & vbCrLf
                                                    Catch
                                                    End Try
                                                End Try
                                            Else
                                                'scraperlog = scraperlog & "No Fanart is Available For This Movie" & moviethumbpath & vbCrLf
                                            End If
                                        Else
                                            'scraperlog = scraperlog & "Fanart Not Saved to :- " & moviethumbpath & ", file already exists" & vbCrLf
                                        End If
                                    Catch
                                    End Try
                                End If
                            End If
                        End If
                    End If
                End If


            End If
            droppeditems.RemoveAt(0)
            If added = True Then
                bckgrounddroppedfiles.ReportProgress(999998, progresstext)
            Else
                bckgrounddroppedfiles.ReportProgress(999999, progresstext)
            End If
        Loop
    End Sub

    Private Sub bckgrounddroppedfiles_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles bckgrounddroppedfiles.ProgressChanged
        If e.ProgressPercentage = 999999 Then
            ToolStripStatusLabel4.Text = e.UserState
        ElseIf e.ProgressPercentage = 999998 Then
            Call applyfilters()
            ToolStripStatusLabel4.Text = e.UserState
        End If
        'ToolStrip1.Refresh()
    End Sub

    Private Sub bckgrounddroppedfiles_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bckgrounddroppedfiles.RunWorkerCompleted
        'ToolStripProgressBar4.Value = 0
        'ToolStripProgressBar4.ProgressBar.Refresh()
        'ToolStripProgressBar4.Visible = False
        ToolStripStatusLabel4.Text = "Dropped Movie Scan Progress"
        ToolStripStatusLabel4.Visible = False
        globalthreadcounter -= 1

    End Sub

    Private Sub ComboBox1_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox1.DoubleClick
        Dim tempstring As String
        tempstring = CType(ComboBox1.SelectedItem, ValueDescriptionPair).Value
        Dim playlist As New List(Of String)
        tempstring = filefunction.getfilename(tempstring)
        playlist = filefunction.getmedialist(tempstring)
        'If IO.File.Exists(tempstring) Then
        '    playlist.Add(tempstring)
        'End If
        'If tempstring.IndexOf("cd1") <> -1 Then
        '    tempstring = tempstring.Replace("cd1", "cd2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd2", "cd3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd3", "cd4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd4", "cd5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("cd_1") <> -1 Then
        '    tempstring = tempstring.Replace("cd_1", "cd_2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd_2", "cd_3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd_3", "cd_4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd_4", "cd_5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("cd 1") <> -1 Then
        '    tempstring = tempstring.Replace("cd 1", "cd 2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd 2", "cd 3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd 3", "cd 4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd 4", "cd 5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("cd.1") <> -1 Then
        '    tempstring = tempstring.Replace("cd.1", "cd.2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd.2", "cd.3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd.3", "cd.4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("cd.4", "cd.5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("dvd1") <> -1 Then
        '    tempstring = tempstring.Replace("dvd1", "dvd2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd2", "dvd3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd3", "dvd4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd4", "dvd5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("dvd_1") <> -1 Then
        '    tempstring = tempstring.Replace("dvd_1", "dvd_2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd_2", "dvd_3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd_3", "dvd_4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd_4", "dvd_5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("dvd 1") <> -1 Then
        '    tempstring = tempstring.Replace("dvd 1", "dvd 2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd 2", "dvd 3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd 3", "dvd 4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd 4", "dvd 5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("dvd.1") <> -1 Then
        '    tempstring = tempstring.Replace("dvd.1", "dvd.2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd.2", "dvd.3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd.3", "dvd.4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("dvd.4", "dvd.5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("part1") <> -1 Then
        '    tempstring = tempstring.Replace("part1", "part2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part2", "part3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part3", "part4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part4", "part5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("part_1") <> -1 Then
        '    tempstring = tempstring.Replace("part_1", "part_2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part_2", "part_3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part_3", "part_4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part_4", "part_5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("part 1") <> -1 Then
        '    tempstring = tempstring.Replace("part 1", "part 2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part 2", "part 3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part 3", "part 4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part 4", "part 5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("part.1") <> -1 Then
        '    tempstring = tempstring.Replace("part.1", "part.2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part.2", "part.3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part.3", "part.4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("part.4", "part.5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("disk1") <> -1 Then
        '    tempstring = tempstring.Replace("disk1", "disk2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk2", "disk3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk3", "disk4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk4", "disk5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("disk_1") <> -1 Then
        '    tempstring = tempstring.Replace("disk_1", "disk_2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk_2", "disk_3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk_3", "disk_4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk_4", "disk_5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("disk 1") <> -1 Then
        '    tempstring = tempstring.Replace("disk 1", "disk 2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk 2", "disk 3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk 3", "disk 4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk 4", "disk 5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("disk.1") <> -1 Then
        '    tempstring = tempstring.Replace("disk.1", "disk.2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk.2", "disk.3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk.3", "disk.4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("disk.4", "disk.5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("pt1") <> -1 Then
        '    tempstring = tempstring.Replace("pt1", "pt2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt2", "pt3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt3", "pt4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt4", "pt5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("pt_1") <> -1 Then
        '    tempstring = tempstring.Replace("pt_1", "pt_2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt_2", "pt_3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt_3", "pt_4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt_4", "pt_5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("pt 1") <> -1 Then
        '    tempstring = tempstring.Replace("pt 1", "pt 2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt 2", "pt 3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt 3", "pt 4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt 4", "pt 5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If
        'If tempstring.IndexOf("pt.1") <> -1 Then
        '    tempstring = tempstring.Replace("pt.1", "pt.2")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt.2", "pt.3")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt.3", "pt.4")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        '    tempstring = tempstring.Replace("pt.4", "pt.5")
        '    If IO.File.Exists(tempstring) Then
        '        playlist.Add(tempstring)
        '    End If
        'End If

        If playlist.Count <= 0 Then
            MsgBox("No Media File Found For This nfo")
            Exit Sub
        End If


        tempstring = applicationpath & "\settings\temp.m3u"


        Dim file As IO.StreamWriter = IO.File.CreateText(tempstring)

        For Each part In playlist
            If part <> Nothing Then file.WriteLine(part)
        Next
        file.Close()


        If userprefs.videomode = 1 Then Call videomode1(tempstring)
        If userprefs.videomode = 2 Then Call videomode2(tempstring)
        If userprefs.videomode = 3 Then
            userprefs.videomode = 2
            Call videomode2(tempstring)
        End If
        If userprefs.videomode >= 4 Then
            If userprefs.selectedvideoplayer <> Nothing Then
                Call videomode4(tempstring)
            Else
                Call videomode1(tempstring)
            End If
        End If
    End Sub

    Private Sub ComboBox1_DragDrop(ByVal sender As Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles ComboBox1.DragDrop
        Dim files() As String
        files = e.Data.GetData(DataFormats.FileDrop)
        For f = 0 To UBound(files)
            If IO.File.Exists(files(f)) Then
                ' This path is a file.
                Try
                    Dim skip As Boolean = False
                    For Each item In fullmovielist
                        If item.fullpathandfilename = files(f) Then
                            skip = True
                            Exit For
                        End If
                    Next
                    For Each item In droppeditems
                        If item = files(f) Then
                            skip = True
                            Exit For
                        End If
                    Next
                    If checkvalidmediafile(files(f)) = True Then
                        If skip = False Then droppeditems.Add(files(f))
                    End If

                Catch ex As Exception

                End Try
            Else
                If IO.Directory.Exists(files(f)) Then
                    ' This path is a directory.
                    Dim di As New IO.DirectoryInfo(files(f))
                    Dim diar1 As IO.FileInfo() = di.GetFiles()
                    Dim dra As IO.FileInfo

                    'list the names of all files in the specified directory
                    For Each dra In diar1
                        Try
                            Dim skip As Boolean = False
                            For Each item In fullmovielist
                                If item.fullpathandfilename = dra.FullName Then
                                    skip = True
                                    Exit For
                                End If
                            Next
                            For Each item In droppeditems
                                If item = dra.FullName Then
                                    skip = True
                                    Exit For
                                End If
                            Next
                            If checkvalidmediafile(dra.FullName) = True Then
                                If skip = False Then droppeditems.Add(dra.FullName)
                            End If
                        Catch ex As Exception

                        End Try
                    Next
                End If
            End If
        Next


        If droppeditems.Count > 0 Then
            If Not bckgrounddroppedfiles.IsBusy Then
                ToolStripStatusLabel4.Visible = True
                'ToolStripProgressBar4.Visible = True
                bckgrounddroppedfiles.RunWorkerAsync()
            End If
        End If
    End Sub

    Private Sub ComboBox1_DragEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DragEventArgs) Handles ComboBox1.DragEnter
        e.Effect = DragDropEffects.Copy
    End Sub

    Private Sub ComboBox1_MouseEnter(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox1.MouseEnter
        ComboBox1.Focus()
    End Sub

    Private Sub ComboBox1_MouseMove(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles ComboBox1.MouseMove
        ToolTip1.IsBalloon = False
        'Dim tootip5 As New ToolTip
        'tootip4.Active = False
        'tootip4.Active = True
        'tootip5.SetToolTip(Me.ComboBox1, "")
        Dim MousePositionInClientCoords As Point = New Point(e.X, e.Y)
        Dim indexunderthemouse As Integer
        indexunderthemouse = Me.ComboBox1.IndexFromPoint(MousePositionInClientCoords)
        If indexunderthemouse > -1 Then
            Dim s As String = "Double Click item to Play" & vbCrLf & vbCrLf
            Dim tempstring As String = CType(ComboBox1.Items(indexunderthemouse), ValueDescriptionPair).Value
            If overitem <> tempstring Then
                overitem = tempstring
                For Each movie In fullmovielist
                    If movie.fullpathandfilename = tempstring Then
                        s = s & movie.title & " (" & movie.year & ")" & vbCrLf & vbCrLf
                        Dim tempstring2 As String
                        Try
                            tempstring2 = movie.runtime.Substring(0, movie.runtime.IndexOf("min") + 3)
                        Catch
                            tempstring2 = movie.runtime
                        End Try
                        s = s & "Rating: " & movie.rating & "     Runtime: " & tempstring2 & vbCrLf & vbCrLf
                        Dim newoutline As List(Of String) = wraptext(movie.outline, 50)
                        For Each line In newoutline
                            s = s & line & vbCrLf
                        Next
                        Exit For
                    End If
                Next

                With tootip5
                    .AutomaticDelay = 1000
                    .AutoPopDelay = 3000
                End With
                tootip5.SetToolTip(Me.ComboBox1, s)
            End If
        End If

    End Sub

    Private Sub ComboBox1_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles ComboBox1.MouseUp
        If e.Button = MouseButtons.Right Then
            Dim pt As Point
            pt.X = e.X
            pt.Y = e.Y
            ComboBox1.SelectedIndex = ComboBox1.IndexFromPoint(pt)
        End If
    End Sub

    Private Sub ComboBox11_SelectedValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox11.SelectedValueChanged
        ApplyFilters()
    End Sub

    Private Sub ComboBox1_SelectedValueChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox1.SelectedValueChanged

        Try
            Dim needtoload As Boolean = False
            If ComboBox1.SelectedItems.Count = 1 Then
                If titletxt.Visible = False Then
                    needtoload = True
                End If
                titletxt.Visible = True
                Label127.Visible = False
                SplitContainer2.Visible = True
                Label128.Visible = False
                Label75.Visible = True
                TextBox34.Visible = True
                Dim done As Boolean = False
                For Each movie In filteredlist
                    If movie.fullpathandfilename Is CType(ComboBox1.SelectedItem, ValueDescriptionPair).Value Then
                        If IO.File.Exists(movie.fullpathandfilename) Then
                            If workingmovie.fullpathandfilename <> movie.fullpathandfilename Then
                                workingmovie.filedate = movie.filedate
                                workingmovie.filename = movie.foldername
                                workingmovie.foldername = movie.foldername
                                workingmovie.fullpathandfilename = movie.fullpathandfilename
                                workingmovie.genre = movie.genre
                                workingmovie.id = movie.id
                                workingmovie.playcount = movie.playcount
                                workingmovie.rating = movie.rating
                                workingmovie.title = movie.title
                                workingmovie.titleandyear = movie.titleandyear
                                workingmovie.top250 = movie.top250
                                workingmovie.year = movie.year
                                Call loadinfofile()
                            Else
                                If needtoload = True Then Call loadinfofile()
                            End If
                            done = True
                            Exit For
                        Else
                            workingmovie.filedate = Nothing
                            workingmovie.filename = Nothing
                            workingmovie.foldername = Nothing
                            workingmovie.fullpathandfilename = Nothing
                            workingmovie.genre = Nothing
                            workingmovie.id = Nothing
                            workingmovie.playcount = Nothing
                            workingmovie.rating = Nothing
                            workingmovie.title = Nothing
                            workingmovie.titleandyear = Nothing
                            workingmovie.top250 = Nothing
                            workingmovie.year = Nothing
                            titletxt.Text = ""
                            TextBox3.Text = ""
                            outlinetxt.Text = "MC cannot find this file, either the file no longer exists, or MC cannot access the file path"
                            plottxt.Text = ""
                            taglinetxt.Text = ""
                            genretxt.Text = ""
                            creditstxt.Text = ""
                            directortxt.Text = ""
                            studiotxt.Text = ""
                            pathtxt.Text = ""
                            actorcb.Items.Clear()
                            ratingtxt.Text = ""
                            runtimetxt.Text = ""
                            votestxt.Text = ""
                            certtxt.Text = ""
                            PictureBox7.Image = Nothing
                            moviethumb.Image = Nothing
                            roletxt.Text = ""
                            PictureBox1.Image = Nothing
                        End If
                    End If
                Next
            ElseIf ComboBox1.SelectedItems.Count = 0 Then
                titletxt.Text = ""
                TextBox3.Text = ""
                outlinetxt.Text = ""
                plottxt.Text = ""
                taglinetxt.Text = ""
                genretxt.Text = ""
                creditstxt.Text = ""
                directortxt.Text = ""
                studiotxt.Text = ""
                pathtxt.Text = ""
                actorcb.Items.Clear()
                ratingtxt.Text = ""
                runtimetxt.Text = ""
                votestxt.Text = ""
                certtxt.Text = ""
                PictureBox7.Image = Nothing
                moviethumb.Image = Nothing
                roletxt.Text = ""
                PictureBox1.Image = Nothing
            Else
                titletxt.Text = ""
                TextBox3.Text = ""
                outlinetxt.Text = ""
                plottxt.Text = ""
                taglinetxt.Text = ""
                genretxt.Text = ""
                creditstxt.Text = ""
                directortxt.Text = ""
                studiotxt.Text = ""
                pathtxt.Text = ""
                actorcb.Items.Clear()
                ratingtxt.Text = ""
                runtimetxt.Text = ""
                votestxt.Text = ""
                certtxt.Text = ""
                PictureBox7.Image = Nothing
                moviethumb.Image = Nothing
                roletxt.Text = ""
                PictureBox1.Image = Nothing
                SplitContainer2.Visible = False
                titletxt.Visible = False
                Label75.Visible = False
                TextBox34.Visible = False
                Label127.Visible = True
                Label128.Visible = True
                'ComboBox3.SelectedIndex = -1
                Dim add As Boolean = True
                Dim watched As String = ""
                For Each mov In ComboBox1.SelectedItems
                    Dim old As String = watched
                    For Each item In fullmovielist
                        If item.fullpathandfilename = mov.value Then
                            If watched = "" Then
                                watched = item.playcount
                                old = watched
                            Else
                                watched = item.playcount
                            End If
                            If watched <> old Then
                                add = False
                            End If
                            Exit For
                        End If
                    Next
                Next
                If add = False Then
                    Button13.Text = ""
                    Button13.BackColor = Color.Gray
                Else
                    If watched = "1" Then
                        Button13.Text = "&Watched"
                        Button13.BackColor = Color.LawnGreen
                        Button13.Refresh()
                    Else
                        Button13.Text = "Un&watched"
                        Button13.BackColor = Color.Red
                        Button13.Refresh()
                    End If
                End If
            End If
        Catch
        End Try
    End Sub

    Private Sub TextBox1_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles TextBox1.KeyUp
        If filteroverride = False Then
            If TextBox1.Text.Length > 0 Then
                TextBox1.BackColor = Color.Pink
            Else
                TextBox1.BackColor = Color.White
            End If
            TextBox1.Refresh()
            Call applyfilters()
        End If
    End Sub

    Private Sub txt_titlesearch_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_titlesearch.KeyUp
        If filteroverride = False Then
            If txt_titlesearch.Text.Length > 0 Then
                txt_titlesearch.BackColor = Color.Pink
            Else
                txt_titlesearch.BackColor = Color.White
            End If
            txt_titlesearch.Refresh()
            Call ApplyFilters()
        End If
    End Sub

    Private Sub CheckedListBox1_MouseMove(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles CheckedListBox1.MouseMove
        ToolTip1.IsBalloon = False
        Dim MousePositionInClientCoords As Point = New Point(e.X, e.Y)
        Dim indexUnderTheMouse As Integer = Me.CheckedListBox1.IndexFromPoint(MousePositionInClientCoords)
        If indexUnderTheMouse > -1 Then
            Dim tempstring As String = CheckedListBox1.Items(indexUnderTheMouse).ToString
            If overitem <> tempstring Then
                overitem = tempstring
                Me.ToolTip1.SetToolTip(Me.CheckedListBox1, tempstring)
            End If
        End If
    End Sub

    Private Sub TextBox_GenreFilter_EnabledChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles TextBox_GenreFilter.EnabledChanged
        If TextBox_GenreFilter.Enabled = False Then Panel4.Visible = False
    End Sub

    Private Sub TextBox_GenreFilter_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles TextBox_GenreFilter.MouseDown
        If LockedList = False Then
            LockedList = True
        Else
            LockedList = False
        End If
    End Sub

    Private Sub TextBox_GenreFilter_MouseHover(ByVal sender As Object, ByVal e As System.EventArgs) Handles TextBox_GenreFilter.MouseHover
        Panel4.Visible = True
    End Sub

    Private Sub TextBox_GenreFilter_MouseLeave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TextBox_GenreFilter.MouseLeave
        If LockedList = False Then
            Panel4.Visible = False
        End If
    End Sub

    Private Sub TextBox_GenreFilter_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles TextBox_GenreFilter.MouseUp
        Panel4.Visible = True
    End Sub

    Private Sub LinkLabel1_LinkClicked(ByVal sender As System.Object, ByVal e As System.Windows.Forms.LinkLabelLinkClickedEventArgs) Handles LinkLabel1.LinkClicked
        Panel4.Visible = False
        LockedList = False
    End Sub

    Private Sub CheckedListBox1_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles CheckedListBox1.SelectedIndexChanged
        If filteroverride = False Then
            CheckedListBox1.Enabled = False
            '            Call applyfilters()
            ApplyFilters()
            CheckedListBox1.Enabled = True
        End If
    End Sub

    Private Sub RadioButton1_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton1.CheckedChanged
        If RadioButton1.Checked = True Then
            userprefs.moviedefaultlist = 0
            Dim save As New _preferences
            Call save.saveconfig()
            'Call applyfilters()
            Call sortorder()
        End If
    End Sub

    Private Sub RadioButton2_CheckedChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton2.CheckedChanged
        If RadioButton2.Checked = True Then
            userprefs.moviedefaultlist = 1
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If
    End Sub

    Private Sub RadioButton6_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton6.CheckedChanged
        If RadioButton6.Checked = True Then
            userprefs.moviedefaultlist = 2
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If
    End Sub

    'Sort by A-Z, Movie Date, File Date, rating, top250
    Private Sub RadioButton3_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton3.CheckedChanged
        If RadioButton3.Checked = True Then
            userprefs.moviesortorder = 0
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If
    End Sub

    Private Sub RadioButton4_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton4.CheckedChanged
        If RadioButton4.Checked = True Then
            userprefs.moviesortorder = 1
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If

    End Sub

    Private Sub RadioButton5_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton5.CheckedChanged
        If RadioButton5.Checked = True Then
            userprefs.moviesortorder = 2
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If
    End Sub

    Private Sub RadioButton7_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton7.CheckedChanged
        If RadioButton7.Checked = True Then
            userprefs.moviesortorder = 4
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If
    End Sub

    'reverse order
    Private Sub btnreverse_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnreverse.CheckedChanged
        'If btnreverse.Checked = True Then
        '    userprefs.moviesortorder = 7
        'End If
        Call sortorder()
    End Sub

    Private Sub TabControl2_MouseWheel(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles TabControl2.MouseWheel
        If TabControl2.SelectedIndex = 1 Then
            mousedelta = e.Delta / 120
            Try
                TabPage22.AutoScrollPosition = New Point(0, TabPage22.VerticalScroll.Value - (mousedelta * 30))
            Catch ex As Exception
            End Try
        End If
    End Sub

    Private Sub TabControl2_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabControl2.SelectedIndexChanged
        Dim tempstring As String = ""
        Dim tab As String = TabControl2.SelectedTab.Text
        If tab <> "Main Browser" And tab <> "Folders" And tab <> "Movie Preferences" Then
            If workingmoviedetails Is Nothing And moviefolders.Count = 0 And userprefs.offlinefolders.Count = 0 Then
                Me.TabControl2.SelectedIndex = m_CurrentTabIndex
                MsgBox("There are no movies in your list to work on" & vbCrLf & "Add movie folders in the Folders Tab" & vbCrLf & "Then select the ""Search For New Movies"" Tab")
                Exit Sub
            ElseIf workingmoviedetails Is Nothing And moviefolders.Count > 0 And tab <> "Search for new movies" Then
                Me.TabControl2.SelectedIndex = m_CurrentTabIndex
                If fullmovielist.Count > 0 Then
                    MsgBox("No Movie is selected")
                    Exit Sub
                Else
                    MsgBox("There are no movies in your list to work on" & vbCrLf & "If The Folders You Have Added In The" & vbCrLf & "Preferences Menu Contain Movie Files" & vbCrLf & "Then select the ""Search For New Movies"" Tab")
                    Exit Sub
                End If
            End If
        Else
            m_CurrentTabIndex = Me.TabControl2.SelectedIndex

        End If
        If tab = "" Then
            If workingmoviedetails.fullmoviebody.imdbid <> Nothing Then
                If userprefs.externalbrowser = True Then
                    Me.TabControl2.SelectedIndex = m_CurrentTabIndex
                    tempstring = "http://www.imdb.com/title/" & workingmoviedetails.fullmoviebody.imdbid & "/"
                    Process.Start(tempstring)
                Else

                    Dim url As String
                    url = "http://www.imdb.com/title/" & workingmoviedetails.fullmoviebody.imdbid & "/"
                    Try
                        If WebBrowser2.Url.AbsoluteUri.ToLower.ToString <> url Then
                            WebBrowser2.Stop()
                            WebBrowser2.ScriptErrorsSuppressed = True

                            WebBrowser2.Navigate(url)
                            WebBrowser2.Refresh()
                            m_CurrentTabIndex = TabControl2.SelectedIndex
                        End If
                    Catch
                        WebBrowser2.Stop()
                        WebBrowser2.ScriptErrorsSuppressed = True

                        WebBrowser2.Navigate(url)
                        WebBrowser2.Refresh()
                        m_CurrentTabIndex = TabControl2.SelectedIndex
                    End Try
                End If
            Else
                MsgBox("No IMDB ID is available for this movie")
            End If
        ElseIf tab.ToLower = "file details" Then
            'Me.TabControl2.SelectedIndex = m_CurrentTabIndex
            m_CurrentTabIndex = TabControl2.SelectedIndex
            If TextBox8.Text = "" Then Call filedetails()
        ElseIf tab.ToLower = "fanart" Then
            If Panel2.Controls.Count = 0 Then
                Call loadfanart()
            End If
            m_CurrentTabIndex = TabControl2.SelectedIndex
        ElseIf tab.ToLower = "open folder" Then
            Me.TabControl2.SelectedIndex = m_CurrentTabIndex
            Call openfolder(workingmoviedetails.fileinfo.fullpathandfilename)
        ElseIf tab.ToLower = "Posters" Then
            Me.TabControl2.SelectedIndex = m_CurrentTabIndex
        ElseIf tab.ToLower = "rescrape movie" Then
            Me.TabControl2.SelectedIndex = m_CurrentTabIndex
            Call rescrapemovie()
        ElseIf tab.ToLower = "change movie" Then
            Call setup_changemovie()
            m_CurrentTabIndex = TabControl2.SelectedIndex
        ElseIf tab.ToLower = "search for new movies" Then
            Me.TabControl2.SelectedIndex = m_CurrentTabIndex
            If Not BckWrkScnMovies.IsBusy Then
                'ToolStripButton10.Visible = True
                'ToolStripProgressBar4.Visible = True
                ToolStripStatusLabel1.Visible = True
                ToolStripProgressBar1.Visible = True
                TabPage14.Text = "Cancel Movie Search"
                TabPage14.ToolTipText = "This cancels the movie search" & vbCrLf & "and Movie scraper thread"
                BckWrkScnMovies.RunWorkerAsync()
            Else
                MsgBox("This task is already running")
            End If
        ElseIf tab.ToLower = "cancel movie search" Then
            Me.TabControl2.SelectedIndex = m_CurrentTabIndex
            BckWrkScnMovies.CancelAsync()
        ElseIf tab.ToLower = "wall" Then
            Call setupwall()
        ElseIf tab.ToLower = "movie sets" Then
            ListBox4.Items.Clear()
            For Each mset In userprefs.moviesets
                If mset <> "None" Then ListBox4.Items.Add(mset)
            Next
        ElseIf tab.ToLower = "movie preferences" Then
            Call setupmoviepreferences()
        ElseIf tab.ToLower = "table" Then
            m_CurrentTabIndex = TabControl2.SelectedIndex
            Call setuptable()
        Else
            m_CurrentTabIndex = TabControl2.SelectedIndex
        End If
    End Sub
  
    Private Sub setup_changemovie()
        Dim tempstring As String = ""
        If userprefs.usefoldernames = False Then
            tempstring = filefunction.cleanfilename(IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename))
        Else
            tempstring = filefunction.getlastfolder(workingmoviedetails.fileinfo.fullpathandfilename)
        End If
        If workingmoviedetails.fileinfo.fullpathandfilename.ToLower.IndexOf("\video_ts\") <> -1 Then
            tempstring = filefunction.getlastfolder(workingmoviedetails.fileinfo.fullpathandfilename)
        End If
        Dim url As String
        url = Form1.userprefs.imdbmirror & "find?s=tt&q=" & tempstring
        WebBrowser1.Stop()
        WebBrowser1.ScriptErrorsSuppressed = True
        WebBrowser1.Navigate(url)
        WebBrowser1.Refresh()
        Panel2.Visible = True
    End Sub

    Private Sub openfolder(ByVal path As String)
        Dim tempstring As String = ""
        Dim action As String
        Dim errors As String
        Try
            If path <> "" Then
                tempstring = path
                Try
                    Call Shell("explorer /select," & """" & tempstring & """", AppWinStyle.NormalFocus)
                    'Process.Start(pathtxt.Text)
                    errors = "Trying to open Folder :- " & tempstring
                    action = "Command - ""Call Shell(""explorer /select,""" & tempstring & ", AppWinStyle.NormalFocus)"""
                Catch ex As Exception
                    MsgBox("Can't open folder :- " & path)
                    Call errorlog(action, errors)
                End Try
            Else
                MsgBox("No Folder To Open")
            End If


        Catch
            MsgBox("No Folder To Open")
        End Try
    End Sub

    Private Sub PictureBox2_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles PictureBox2.DoubleClick
        If Not PictureBox2.Image Is Nothing Then
            Me.ControlBox = False
            MenuStrip1.Enabled = False
            'ToolStrip1.Enabled = False
            Dim newimage As New Bitmap(PictureBox2.Image)
            Call zoomimage(newimage)
        Else
            MsgBox("No Image Available To Zoom")
        End If
    End Sub

    Private Sub loadfanart()

        '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
        Dim scraperfunction As New Classimdb
        Dim tmdbposterscraper As New tmdb_posters.Class1
        fanartarray.Clear()
        Dim tmdbimageresults As String = tmdbposterscraper.gettmdbposters_newapi(workingmoviedetails.fullmoviebody.imdbid)
        'Dim tmdbimageresults As String = gettmdbposters_newapi(workingmoviedetails.fullmoviebody.imdbid)
        Dim bannerslist As New XmlDocument
        Try
            bannerslist.LoadXml(tmdbimageresults)
            Dim thisresult As XmlNode = Nothing
            For Each item In bannerslist("tmdb_posterlist")
                Select Case item.name
                    Case "fanart"
                        Dim newfanart As New ListOfPosters
                        For Each backdrop In item
                            If backdrop.childnodes(0).innertext = "original" Then
                                newfanart.hdposter = backdrop.childnodes(1).innertext
                                newfanart.hdwidth = backdrop.childnodes(2).innertext
                                newfanart.hdheight = backdrop.childnodes(3).innertext
                            End If
                            If backdrop.childnodes(0).innertext = "poster" Then
                                newfanart.ldposter = backdrop.childnodes(1).innertext
                                newfanart.ldwidth = backdrop.childnodes(2).innertext
                                newfanart.ldheight = backdrop.childnodes(3).innertext
                            End If
                            If newfanart.hdposter <> Nothing And newfanart.ldposter <> Nothing Then
                                If newfanart.hdposter <> "" And newfanart.ldposter <> "" Then
                                    If newfanart.hdposter.IndexOf("http") <> -1 And newfanart.ldposter.IndexOf("http") <> -1 Then
                                        If newfanart.hdposter.IndexOf(".jpg") <> -1 Or newfanart.hdposter.IndexOf(".png") <> -1 Then
                                            If newfanart.ldposter.IndexOf(".jpg") <> -1 Or newfanart.ldposter.IndexOf(".png") <> -1 Then
                                                fanartarray.Add(newfanart)
                                                Exit For
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        Next

                End Select
            Next
        Catch
        End Try


        Try
            If fanartarray.Count > 0 Then


                Dim location As Integer = 0
                Dim itemcounter As Integer = 0
                For Each item In fanartarray
                    fanartboxes() = New PictureBox()

                    With fanartboxes
                        .Location = New Point(0, location)
                        If fanartarray.Count > 2 Then
                            .Width = 410
                            .Height = 233
                        Else
                            .Width = 424
                            .Height = 243
                        End If
                        .SizeMode = PictureBoxSizeMode.Zoom
                        .ImageLocation = item.ldposter
                        .Visible = True
                        .BorderStyle = BorderStyle.Fixed3D
                        .Name = "moviefanart" & itemcounter.ToString
                        AddHandler fanartboxes.DoubleClick, AddressOf zoomimage2
                    End With
                    If fanartarray.Count > 2 Then
                        fanartcheckboxes() = New RadioButton()
                        With fanartcheckboxes
                            .BringToFront()
                            .Location = New Point(199, location + 229)
                            .Name = "moviefanartcheckbox" & itemcounter.ToString
                        End With


                        reslabels = New Label()
                        With reslabels
                            .BringToFront()
                            .Location = New Point(0, location + 235)
                            .Name = "label" & itemcounter.ToString
                            .Text = "(" & item.hdwidth & " x " & item.hdheight & ") (" & item.ldwidth & " x " & item.ldheight & ")"
                            .Width = 200
                        End With

                        itemcounter += 1
                        location += 260
                    Else
                        fanartcheckboxes() = New RadioButton()
                        With fanartcheckboxes
                            .BringToFront()
                            .Location = New Point(199, location + 243)
                            .Name = "moviefanartcheckbox" & itemcounter.ToString
                        End With


                        reslabels = New Label()
                        With reslabels
                            .BringToFront()
                            .Location = New Point(0, location + 249)
                            .Name = "label" & itemcounter.ToString
                            .Text = "(" & item.hdwidth & " x " & item.hdheight & ") (" & item.ldwidth & " x " & item.ldheight & ")"
                            .Width = 200
                        End With

                        itemcounter += 1
                        location += 275
                    End If
                    Me.Panel2.Controls.Add(fanartboxes())
                    Me.Panel2.Controls.Add(fanartcheckboxes())
                    Me.Panel2.Controls.Add(reslabels)
                    Me.Refresh()
                    Application.DoEvents()
                Next
            Else
                Dim mainlabel2 As Label
                mainlabel2 = New Label
                With mainlabel2
                    .Location = New Point(0, 100)
                    .Width = 700
                    .Height = 100
                    .Font = New System.Drawing.Font("Arial", 15, FontStyle.Bold)
                    .Text = "No Fanart Was Found At www.themoviedb.org For This Movie"
                End With
                Me.Panel2.Controls.Add(mainlabel2)
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub zoomimage2(ByVal sender As Object, ByVal e As EventArgs)

        Dim tempstring As String = sender.name
        Dim tempstring2 As String
        Dim tempint As Integer
        If tempstring.IndexOf("poster") <> -1 Then
            tempstring = tempstring.Replace("poster", "")
            tempint = Convert.ToDecimal(tempstring)
            'tempstring2 = posterarray(tempint + 1).hdposter
            If tempstring2 = Nothing Then
                tempint = Convert.ToDecimal(tempstring)
                tempint = tempint + ((currentpage - 1) * 10)
                tempstring2 = posterarray(tempint).hdposter
            End If
        End If
        If tempstring.IndexOf("picture") <> -1 Then
            tempstring = tempstring.Replace("picture", "")
            tempint = Convert.ToDecimal(tempstring)
            tempstring2 = fanarturls(tempint + 1, 0)
        End If
        If tempstring.IndexOf("moviefanart") <> -1 Then
            tempstring = tempstring.Replace("moviefanart", "")
            tempint = Convert.ToDecimal(tempstring)
            tempstring2 = fanartarray(tempint).hdposter
        End If
        If tempstring.IndexOf("tvfanart") <> -1 Then
            tempstring = tempstring.Replace("tvfanart", "")
            tempint = Convert.ToDecimal(tempstring)
            tempstring2 = listoftvfanarts(tempint).bigurl
        End If
        Dim buffer(4000000) As Byte
        Dim size As Integer = 0
        Dim bytesRead As Integer = 0

        bigpanel = New Panel
        With bigpanel
            .Width = Me.Width
            .Height = Me.Height
            .BringToFront()
            .Dock = DockStyle.Fill
        End With
        Me.Controls.Add(bigpanel)
        bigpanel.BringToFront()
        bigpicbox = New PictureBox()

        With bigpicbox
            .Location = New Point(0, 0)
            .Width = bigpanel.Width
            .Height = bigpanel.Height
            .SizeMode = PictureBoxSizeMode.Zoom
            '.Image = sender.image
            .WaitOnLoad = True

            .Visible = False
            .BorderStyle = BorderStyle.Fixed3D
            AddHandler bigpicbox.DoubleClick, AddressOf closepicbox
            .Dock = DockStyle.Fill
        End With
        Try
            bigpicbox.ImageLocation = tempstring2
        Catch
        End Try



        Me.bigpanel.Controls.Add(bigpicbox)
        Dim bigpanellabel As Label
        bigpanellabel = New Label
        With bigpanellabel
            .Location = New Point(20, 200)
            .Width = 150
            .Height = 50
            .Visible = True
            .Text = "Double Click Image To" & vbCrLf & "Return To Browser"
            '   .BringToFront()
        End With

        Me.bigpanel.Controls.Add(bigpanellabel)
        bigpanellabel.BringToFront()
        Application.DoEvents()


        Me.Refresh()
        Try
            If bigpicbox.Image Is Nothing Then
                tempstring2 = posterarray(tempint).ldposter
                bigpicbox.ImageLocation = tempstring2
            End If
        Catch
        End Try
        Try
            If bigpicbox.Image.Width < 20 Then
                tempstring2 = posterarray(tempint).ldposter
                bigpicbox.ImageLocation = tempstring2
            End If
        Catch
        End Try
        Dim sizex As Integer = bigpicbox.Image.Width
        Dim sizey As Integer = bigpicbox.Image.Height
        tempstring = "Full Image Resolution :- " & sizex.ToString & " x " & sizey.ToString
        Dim resolutionlbl As New Label
        With resolutionlbl
            .Location = New Point(20, 450)
            .Width = 180
            .Text = tempstring
            .BackColor = Color.Transparent
        End With

        Me.bigpanel.Controls.Add(resolutionlbl)
        resolutionlbl.BringToFront()
        bigpicbox.Visible = True
        bigpicbox.Refresh()

    End Sub

    Private Sub Button4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button4.Click
        Try
            messbox = New message_box("Please wait,", "", "Downloading Fanart")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            Me.Refresh()
            messbox.Refresh()
            Me.Refresh()
            Application.DoEvents()

            Dim tempstring As String
            Dim tempint As Integer
            Dim tempstring2 As String
            Dim allok As Boolean = False
            For Each button As Control In Me.Panel2.Controls
                If button.Name.IndexOf("checkbox") <> -1 Then
                    Dim b1 As RadioButton = CType(button, RadioButton)
                    If b1.Checked = True Then
                        tempstring = b1.Name
                        tempstring = tempstring.Replace("moviefanartcheckbox", "")
                        tempint = Convert.ToDecimal(tempstring)
                        tempstring2 = fanartarray(tempint).hdposter
                        allok = True
                        Exit For
                    End If
                End If
            Next
            If allok = False Then
                MsgBox("No Fanart Is Selected")
            Else
                Try
                    Panel1.Controls.Remove(Label1)
                    Dim buffer(40000000) As Byte
                    Dim size As Integer = 0
                    Dim bytesRead As Integer = 0

                    Dim fanartthumburl As String = tempstring2
                    Dim req As HttpWebRequest = req.Create(fanartthumburl)
                    Dim res As HttpWebResponse = req.GetResponse()
                    Dim contents As Stream = res.GetResponseStream()
                    Dim bmp As New Bitmap(contents)


                    Dim bytesToRead As Integer = CInt(buffer.Length)

                    While bytesToRead > 0
                        size = contents.Read(buffer, bytesRead, bytesToRead)
                        If size = 0 Then Exit While
                        bytesToRead -= size
                        bytesRead += size
                    End While
                    If Form1.userprefs.resizefanart = 1 Then
                        Try
                            Dim tempbitmap As Bitmap = bmp
                            tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        Catch ex As Exception
                            tempstring = ex.Message.ToString
                        End Try
                    ElseIf Form1.userprefs.resizefanart = 2 Then
                        If bmp.Width > 1280 Or bmp.Height > 720 Then
                            Dim bm_source As New Bitmap(bmp)
                            Dim bm_dest As New Bitmap(1280, 720)
                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                            gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                            Dim tempbitmap As Bitmap = bm_dest
                            tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        Else
                            Threading.Thread.CurrentThread.Sleep(30)
                            bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        End If
                    ElseIf Form1.userprefs.resizefanart = 3 Then
                        If bmp.Width > 960 Or bmp.Height > 540 Then
                            Dim bm_source As New Bitmap(bmp)
                            Dim bm_dest As New Bitmap(960, 540)
                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                            gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                            Dim tempbitmap As Bitmap = bm_dest
                            tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        Else
                            Threading.Thread.CurrentThread.Sleep(30)
                            bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        End If
                    End If
                    Dim exists As Boolean = System.IO.File.Exists(workingmoviedetails.fileinfo.fanartpath)
                    If exists = True Then


                        'mainfanart = New PictureBox
                        PictureBox2.ImageLocation = workingmoviedetails.fileinfo.fanartpath
                        PictureBox7.ImageLocation = workingmoviedetails.fileinfo.fanartpath
                        For Each paths In userprefs.offlinefolders
                            Dim offlinepath As String = paths & "\"
                            If workingmoviedetails.fileinfo.fanartpath.IndexOf(offlinepath) <> -1 Then
                                Dim mediapath As String
                                mediapath = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                                Call offlinedvd(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails.fullmoviebody.title, mediapath)
                            End If
                        Next
                    Else
                        PictureBox2.ImageLocation = defaultfanart
                    End If
                    Label16.Text = PictureBox2.Image.Width
                    Label17.Text = PictureBox2.Image.Height
                    Call fanartsaved()
                Catch ex As WebException
                    MsgBox(ex.Message)
                End Try
            End If
        Catch
        Finally
            messbox.Close()
        End Try
    End Sub

    Private Sub fanartsaved()
        Dim replace As Boolean = False
        For f = 0 To fullmovielist.Count - 1
            Dim newmovie As New ComboList
            newmovie = fullmovielist(f)
            If newmovie.fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename Then
                If newmovie.missingdata1 = 3 Then
                    newmovie.missingdata1 = 2
                    replace = True
                ElseIf newmovie.missingdata1 = 1 Then
                    newmovie.missingdata1 = 0
                    replace = True
                End If
                fullmovielist.RemoveAt(f)
                fullmovielist.Add(newmovie)
                Exit For
            End If
        Next

        If replace = True Then
            Call ApplyFilters()
            Call loadinfofile()
            TabControl2.SelectedIndex = 0
            m_CurrentTabIndex = TabControl2.SelectedIndex
        End If
    End Sub

    Private Sub postersaved()
        Dim replace As Boolean = False
        For f = 0 To fullmovielist.Count - 1
            Dim newmovie As New ComboList
            newmovie = fullmovielist(f)
            If newmovie.fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename Then
                If newmovie.missingdata1 = 3 Then
                    newmovie.missingdata1 = 1
                    replace = True
                ElseIf newmovie.missingdata1 = 2 Then
                    newmovie.missingdata1 = 0
                    replace = True
                End If
                fullmovielist.RemoveAt(f)
                fullmovielist.Add(newmovie)
                Exit For
            End If
        Next

        If replace = True Then
            Call ApplyFilters()
            Call loadinfofile()
            TabControl2.SelectedIndex = 0
            m_CurrentTabIndex = TabControl2.SelectedIndex
        End If
    End Sub

    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        Panel3.Visible = True
    End Sub

    Private Sub btnthumbbrowse_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnthumbbrowse.Click
        openFD.InitialDirectory = workingmoviedetails.fileinfo.fullpathandfilename.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename), "")
        openFD.Title = "Select a jpeg image file"
        openFD.FileName = ""
        openFD.Filter = "Media Companion Image Files|*.jpg;*.tbn|All Files|*.*"
        openFD.FilterIndex = 0
        openFD.ShowDialog()
        TextBox5.Text = openFD.FileName
    End Sub

    Private Sub btngetthumb_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btngetthumb.Click
        Dim MyWebClient As New System.Net.WebClient
        Try
            Dim ImageInBytes() As Byte = MyWebClient.DownloadData(TextBox5.Text)
            Dim ImageStream As New IO.MemoryStream(ImageInBytes)

            'mainfanart.Image = New System.Drawing.Bitmap(ImageStream)





            Dim tempstring As String

            Dim bmp As New Bitmap(ImageStream)


            If Form1.userprefs.resizefanart = 1 Then
                Try
                    Dim tempbitmap As Bitmap = bmp
                    tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                Catch ex As Exception
                    tempstring = ex.Message.ToString
                End Try
            ElseIf Form1.userprefs.resizefanart = 2 Then
                If bmp.Width > 1280 Or bmp.Height > 720 Then
                    Dim bm_source As New Bitmap(bmp)
                    Dim bm_dest As New Bitmap(1280, 720)
                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                    gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                    Dim tempbitmap As Bitmap = bm_dest
                    tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                Else
                    Threading.Thread.CurrentThread.Sleep(30)
                    bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                End If
            ElseIf Form1.userprefs.resizefanart = 3 Then
                If bmp.Width > 960 Or bmp.Height > 540 Then
                    Dim bm_source As New Bitmap(bmp)
                    Dim bm_dest As New Bitmap(960, 540)
                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                    gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                    Dim tempbitmap As Bitmap = bm_dest
                    tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                Else
                    Threading.Thread.CurrentThread.Sleep(30)
                    bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                End If
            End If

            Dim exists As Boolean = System.IO.File.Exists(workingmoviedetails.fileinfo.fanartpath)
            If exists = True Then
                For Each paths In userprefs.offlinefolders
                    If workingmoviedetails.fileinfo.fanartpath.IndexOf(paths) <> -1 Then
                        Dim mediapath As String
                        mediapath = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                        Call offlinedvd(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails.fullmoviebody.title, mediapath)
                    End If
                Next

                'mainfanart = New PictureBox
                PictureBox2.ImageLocation = workingmoviedetails.fileinfo.fanartpath
                PictureBox7.ImageLocation = workingmoviedetails.fileinfo.fanartpath
            Else
                PictureBox2.ImageLocation = defaultfanart
            End If
            Call fanartsaved()
        Catch ex As Exception
            MsgBox("Unable To Download Image")
        End Try
        Panel3.Visible = False
    End Sub

    Private Sub btncancelgetthumburl_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btncancelgetthumburl.Click
        Panel3.Visible = False
    End Sub

    Private Function CropImage(ByVal SrcBmp As Bitmap, ByVal NewSize As Size, ByVal StartPoint As Point) As Bitmap
        If NewSize.Width < 1 Or NewSize.Height < 1 Then
            'MsgBox("Cant resize < 1")
            Return SrcBmp
            Exit Function
        End If
        Dim SrcRect As New Rectangle(StartPoint.X, StartPoint.Y, NewSize.Width, NewSize.Height)
        Dim DestRect As New Rectangle(0, 0, NewSize.Width, NewSize.Height)
        Dim DestBmp As New Bitmap(NewSize.Width, NewSize.Height, Imaging.PixelFormat.Format32bppArgb)
        Dim g As Graphics = Graphics.FromImage(DestBmp)
        g.DrawImage(SrcBmp, DestRect, SrcRect, GraphicsUnit.Pixel)
        Return DestBmp
    End Function ' Crop Image Function

    Private Sub croptop()
        If PictureBox2.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        imagewidth = PictureBox2.Image.Width
        imageheight = PictureBox2.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox2.Image = CropImage(PictureBox2.Image, New Size(imagewidth, imageheight - 1), New Point(0, 1)).Clone
        PictureBox2.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub cropbottom()
        If PictureBox2.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        imagewidth = PictureBox2.Image.Width
        imageheight = PictureBox2.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox2.Image = CropImage(PictureBox2.Image, New Size(imagewidth, imageheight - 1), New Point(0, 0)).Clone
        PictureBox2.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub cropleft()
        If PictureBox2.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        imagewidth = PictureBox2.Image.Width
        imageheight = PictureBox2.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox2.Image = CropImage(PictureBox2.Image, New Size(imagewidth - 1, imageheight), New Point(1, 0)).Clone
        PictureBox2.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub cropright()
        If PictureBox2.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        thumbeditsmade = True
        imagewidth = PictureBox2.Image.Width
        imageheight = PictureBox2.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox2.Image = CropImage(PictureBox2.Image, New Size(imagewidth - 1, imageheight), New Point(0, 0)).Clone
        PictureBox2.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub btncroptop_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncroptop.MouseDown
        If PictureBox2.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        btnresetimage.Visible = True
        btnsavecropped.Visible = True
        cropstring = "top"
        Timer2.Enabled = True
    End Sub

    Private Sub btncropbottom_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncropbottom.MouseDown
        If PictureBox2.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        btnresetimage.Visible = True
        btnsavecropped.Visible = True
        Call croptop()
        cropstring = "bottom"
        Timer2.Enabled = True
    End Sub

    Private Sub btncropleft_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncropleft.MouseDown
        If PictureBox2.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        btnresetimage.Visible = True
        btnsavecropped.Visible = True
        Call croptop()
        cropstring = "left"
        Timer2.Enabled = True
    End Sub

    Private Sub btncropright_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncropright.MouseDown
        If PictureBox2.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        btnresetimage.Visible = True
        btnsavecropped.Visible = True
        Call croptop()
        cropstring = "right"
        Timer2.Enabled = True
    End Sub

    Private Sub btncropbottom_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncropbottom.MouseUp
        Timer2.Enabled = False
    End Sub

    Private Sub btncropleft_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncropleft.MouseUp
        Timer2.Enabled = False
    End Sub

    Private Sub btncropright_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncropright.MouseUp
        Timer2.Enabled = False
    End Sub

    Private Sub btncroptop_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles btncroptop.MouseUp
        Timer2.Enabled = False
    End Sub

    Private Sub Timer2_Tick(ByVal sender As Object, ByVal e As System.EventArgs) Handles Timer2.Tick
        If cropstring = "top" Then Call croptop()
        If cropstring = "bottom" Then Call cropbottom()
        If cropstring = "left" Then Call cropleft()
        If cropstring = "right" Then Call cropright()
    End Sub

    Private Sub btnresetimage_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnresetimage.Click
        thumbeditsmade = False
        PictureBox2.Image = PictureBox7.Image
        btnresetimage.Visible = False
        btnsavecropped.Visible = False
        Label16.Text = PictureBox2.Image.Width
        Label17.Text = PictureBox2.Image.Height
    End Sub

    Private Sub btnsavecropped_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnsavecropped.Click
        thumbeditsmade = False
        Try
            Dim stream As New System.IO.MemoryStream
            PictureBox2.Image.Save(workingmoviedetails.fileinfo.fanartpath, System.Drawing.Imaging.ImageFormat.Jpeg)
            PictureBox7.Image = PictureBox2.Image
            Label16.Text = PictureBox2.Image.Width
            Label17.Text = PictureBox2.Image.Height
            For Each paths In userprefs.offlinefolders
                If workingmoviedetails.fileinfo.fanartpath.IndexOf(paths) <> -1 Then
                    Dim mediapath As String
                    mediapath = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                    Call offlinedvd(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails.fullmoviebody.title, mediapath)
                End If
            Next
            btnresetimage.Visible = False
            btnsavecropped.Visible = False
        Catch ex As Exception
        End Try
    End Sub

    Private Sub Button6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button6.Click
        If Form1.userprefs.resizefanart = 1 Then
            'Try
            '    Dim tempbitmap As Bitmap = PictureBox2.Image
            '    tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
            'Catch ex As Exception
            '    tempstring = ex.Message.ToString
            'End Try
        ElseIf Form1.userprefs.resizefanart = 2 Then
            'If PictureBox2.Image.Width > 1280 Or PictureBox2.Image.Height > 720 Then
            Dim bm_source As New Bitmap(PictureBox2.Image)
            Dim bm_dest As New Bitmap(1280, 720)
            Dim gr As Graphics = Graphics.FromImage(bm_dest)
            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
            gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
            Dim tempbitmap As Bitmap = bm_dest
            PictureBox2.Image = tempbitmap
            'Else
            '    'Threading.Thread.CurrentThread.Sleep(30)
            '    'bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
            'End If
        ElseIf Form1.userprefs.resizefanart = 3 Then
            'If PictureBox2.Image.Width > 960 Or PictureBox2.Image.Height > 540 Then
            Dim bm_source As New Bitmap(PictureBox2.Image)
            Dim bm_dest As New Bitmap(960, 540)
            Dim gr As Graphics = Graphics.FromImage(bm_dest)
            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
            gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
            Dim tempbitmap As Bitmap = bm_dest
            PictureBox2.Image = tempbitmap
            'Else
            '    Threading.Thread.CurrentThread.Sleep(30)
            '    'bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
            'End If
        End If
    End Sub

    Private Sub initialiseposters()
        pagecount = 0
        currentpage = 1
        CheckBox1.Visible = False
        Button15.Visible = False
        For i = Panel8.Controls.Count - 1 To 0 Step -1
            Panel8.Controls.RemoveAt(i)
        Next
        If Form1.userprefs.maximumthumbs < 1 Then
        Else
            Form1.userprefs.maximumthumbs = 10
        End If
        Button15.Visible = False
        CheckBox1.Visible = False

        posterpicboxes = Nothing
        postercheckboxes = Nothing
        reslabel = Nothing

        Application.DoEvents()

        posterarray.Clear()
    End Sub

    Private Sub Button19_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button19.Click
        messbox = New message_box("Please wait,", "", "Scraping Movie Poster List")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Call initialiseposters()
        Try


            '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
            Dim scraperfunction As New Classimdb
            Dim tmdbposterscraper As New tmdb_posters.Class1

            Dim tmdbimageresults As String = tmdbposterscraper.gettmdbposters_newapi(workingmoviedetails.fullmoviebody.imdbid)
            Dim bannerslist As New XmlDocument
            bannerslist.LoadXml(tmdbimageresults)
            Dim thisresult As XmlNode = Nothing
            For Each item In bannerslist("tmdb_posterlist")
                Select Case item.name
                    Case "poster"
                        Dim newfanart As New listofposters
                        For Each backdrop In item
                            If backdrop.childnodes(0).innertext = "original" Then
                                newfanart.hdposter = backdrop.childnodes(1).innertext
                            End If
                            If backdrop.childnodes(0).innertext = "mid" Then
                                newfanart.ldposter = backdrop.childnodes(1).innertext
                            End If
                            If newfanart.hdposter <> Nothing And newfanart.ldposter <> Nothing Then
                                If newfanart.hdposter <> "" And newfanart.ldposter <> "" Then
                                    If newfanart.hdposter.IndexOf("http") <> -1 And newfanart.hdposter.IndexOf(".jpg") <> -1 And newfanart.ldposter.IndexOf("http") <> -1 And newfanart.ldposter.IndexOf(".jpg") <> -1 Then
                                        posterarray.Add(newfanart)
                                        Exit For
                                    End If
                                End If
                            End If
                        Next

                End Select
            Next



        Catch
        Finally
            messbox.Close()
            Call displayselection()
        End Try
    End Sub

    Private Sub displayselection()
        Dim names As New List(Of String)()
        messbox = New message_box("Please wait,", "", "Downloading Preview Images")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Dim itemcounter As Integer = 0
        If posterarray.Count > 0 Then

            If posterarray.Count > userprefs.maximumthumbs Then
                Dim tempmaxthumbs As Integer = posterarray.Count

                Do Until tempmaxthumbs < 1
                    pagecount += 1
                    tempmaxthumbs -= userprefs.maximumthumbs
                Loop
            End If


            If posterarray.Count > 10 Then
                For f = 0 To userprefs.maximumthumbs - 1
                    names.Add(posterarray(f).ldposter)
                Next
            Else
                For f = 0 To posterarray.Count - 1
                    names.Add(posterarray(f).ldposter)
                Next
            End If

            'Label7.Visible = True
            If pagecount > 1 Then
                Button9.Visible = True
                Button10.Visible = True
                If posterarray.Count >= 10 Then
                    Label18.Text = "Displaying 1 to 10 of " & posterarray.Count.ToString & " Images"
                Else
                    Label18.Text = "Displaying 1 to " & posterarray.Count.ToString & " of " & posterarray.Count.ToString & " Images"
                End If
                Label18.Visible = True
                Me.Refresh()
                Application.DoEvents()
                currentpage = 1
                Button10.Enabled = False
                Button9.Enabled = True
            Else
                Button10.Visible = False
                Button9.Visible = False
                If posterarray.Count >= 10 Then
                    Label18.Text = "Displaying 1 to " & 10 & " of " & posterarray.Count.ToString & " Images"
                Else
                    Label18.Text = "Displaying 1 to " & posterarray.Count.ToString & " of " & posterarray.Count.ToString & " Images"
                End If
                Label18.Visible = True
                Me.Refresh()
                Application.DoEvents()
            End If
            Dim tempboolean As Boolean = True
            Dim location As Integer = 0

            For Each item As String In names
                Try
                    If tempboolean = True Then
                        posterpicboxes() = New PictureBox()
                        With posterpicboxes
                            'Try
                            .WaitOnLoad = True
                            .Location = New Point(location, 0)
                            .Width = 123
                            .Height = 168
                            .SizeMode = PictureBoxSizeMode.Zoom
                            .ImageLocation = item
                            .Visible = True
                            .BorderStyle = BorderStyle.Fixed3D
                            .Name = "poster" & itemcounter.ToString
                            AddHandler posterpicboxes.DoubleClick, AddressOf zoomimage2
                            AddHandler posterpicboxes.LoadCompleted, AddressOf imageres
                            '            Catch
                            'End Try
                        End With

                        postercheckboxes() = New RadioButton()
                        With postercheckboxes
                            .Location = New Point(location + 50, 166) '179
                            .Name = "postercheckbox" & itemcounter.ToString
                            .SendToBack()
                            .Text = " "
                            AddHandler postercheckboxes.CheckedChanged, AddressOf radiochanged
                        End With

                        itemcounter += 1


                        Me.Panel8.Controls.Add(posterpicboxes())
                        Me.Panel8.Controls.Add(postercheckboxes())
                    End If
                    If tempboolean = False Then
                        posterpicboxes() = New PictureBox()
                        With posterpicboxes
                            .WaitOnLoad = True
                            .Location = New Point(location, 192) '210
                            .Width = 123
                            .Height = 168
                            .SizeMode = PictureBoxSizeMode.Zoom
                            .ImageLocation = item
                            .Visible = True
                            .BorderStyle = BorderStyle.Fixed3D
                            .Name = "poster" & itemcounter.ToString
                            AddHandler posterpicboxes.DoubleClick, AddressOf zoomimage2
                            AddHandler posterpicboxes.LoadCompleted, AddressOf imageres
                        End With

                        postercheckboxes() = New RadioButton()
                        With postercheckboxes
                            .Location = New Point(location + 50, 358) '389
                            .Name = "postercheckbox" & itemcounter.ToString
                            .SendToBack()
                            .Text = " "
                            AddHandler postercheckboxes.CheckedChanged, AddressOf radiochanged
                        End With

                        itemcounter += 1


                        Me.Panel8.Controls.Add(posterpicboxes())
                        Me.Panel8.Controls.Add(postercheckboxes())
                    End If
                    Me.Refresh()
                    Application.DoEvents()
                    If tempboolean = False Then location += 120
                    tempboolean = Not tempboolean
                Catch
                End Try
            Next
        Else
            Dim mainlabel2 As Label
            mainlabel2 = New Label
            With mainlabel2
                .Location = New Point(0, 100)
                .Width = 700
                .Height = 100
                .Font = New System.Drawing.Font("Arial", 15, FontStyle.Bold)
                .Text = "No Posters Were Found For This Movie"

            End With
            Me.Panel8.Controls.Add(mainlabel2)
        End If
        If itemcounter = 0 Then
            Button9.Visible = False
            Button10.Visible = False
            Dim mainlabel2 As Label
            mainlabel2 = New Label
            With mainlabel2
                .Location = New Point(0, 100)
                .Width = 700
                .Height = 100
                .Font = New System.Drawing.Font("Arial", 15, FontStyle.Bold)
                .Text = "No Posters Were Found For This Movie"

            End With
            Label18.Text = "0 of 0 Images"
            Me.Panel8.Controls.Add(mainlabel2)
        End If
        messbox.Close()
    End Sub

    Private Sub radiochanged(ByVal sender As Object, ByVal e As EventArgs)
        Dim tempstring As String = sender.name
        Dim tempint As Integer
        Dim tempstring2 As String = tempstring
        Dim allok As Boolean = False
        tempstring = tempstring.Replace("postercheckbox", "")
        tempint = Convert.ToDecimal(tempstring)
        For Each button As Control In Me.Panel8.Controls
            If button.Name.IndexOf("postercheckbox") <> -1 Then
                Dim b1 As RadioButton = CType(button, RadioButton)
                If b1.Checked = True Then
                    allok = True
                    Exit For
                End If
            End If
        Next
        If allok = True Then
            Button15.Visible = True
            If posterarray(0).ldposter.ToLower.IndexOf("impawards") <> -1 Or posterarray(0).ldposter.ToLower.IndexOf("themoviedb") <> -1 Then
                CheckBox1.Visible = True
            Else
                CheckBox1.Visible = False
            End If
        Else
            CheckBox1.Visible = False
            Button15.Visible = False
        End If

    End Sub

    Private Sub imageres(ByVal sender As Object, ByVal e As EventArgs)
        reslabel = New Label
        Dim tempstring As String
        tempstring = sender.image.width.ToString
        tempstring = tempstring & " x "
        tempstring = tempstring & sender.image.height.ToString
        Dim locx As Integer = sender.location.x
        Dim locy As Integer = sender.location.y
        locy = locy + sender.height
        With reslabel
            .Location = New Point(locx + 30, locy)
            .Text = tempstring
            .BringToFront()
        End With
        Me.Panel8.Controls.Add(reslabel)
        Me.Refresh()
        Application.DoEvents()
    End Sub

    Private Sub Button17_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button17.Click
        messbox = New message_box("Please wait,", "", "Scraping Movie Poster List")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Call initialiseposters()
        Dim newobject2 As New imdb_thumbs.Class1
        Dim posters(,) As String = newobject2.getimdbposters(workingmoviedetails.fullmoviebody.imdbid)
        For f = 0 To UBound(posters)
            If posters(f, 0) <> Nothing Then
                If posters(f, 1) = Nothing Then posters(f, 1) = posters(f, 0)
                Dim newposters As New ListOfPosters
                newposters.hdposter = posters(f, 1)
                newposters.ldposter = posters(f, 0)
                posterarray.Add(newposters)
                newposters.ldposter = Nothing
                newposters.hdposter = Nothing
            End If
        Next


        messbox.Close()
        Call displayselection()

    End Sub

    Private Sub Button9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button9.Click

        For i = Panel8.Controls.Count - 1 To 0 Step -1
            Panel8.Controls.RemoveAt(i)
        Next
        messbox = New message_box("Please wait,", "", "Downloading Preview Images")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        currentpage += 1
        If currentpage = pagecount Then
            Button9.Enabled = False
        End If
        Button10.Enabled = True

        Dim tempint As Integer = (currentpage * (10) + 1) - 10
        Dim tempint2 As Integer = currentpage * 10

        If tempint2 > posterarray.Count Then
            tempint2 = posterarray.Count
        End If

        Dim names As New List(Of String)()

        For f = tempint - 1 To tempint2 - 1
            names.Add(posterarray(f).ldposter)
        Next
        Label18.Text = "Displaying " & tempint.ToString & " to " & tempint2 & " of " & posterarray.Count.ToString & " Images"

        Dim location As Integer = 0
        Dim itemcounter As Integer = 0
        Dim tempboolean As Boolean = True
        For Each item As String In names
            Try
                If tempboolean = True Then
                    posterpicboxes() = New PictureBox()
                    With posterpicboxes
                        .WaitOnLoad = True
                        .Location = New Point(location, 0)
                        .Width = 123
                        .Height = 168
                        .SizeMode = PictureBoxSizeMode.Zoom
                        .ImageLocation = item
                        .Visible = True
                        .BorderStyle = BorderStyle.Fixed3D
                        .Name = "poster" & itemcounter.ToString
                        AddHandler posterpicboxes.DoubleClick, AddressOf zoomimage2
                        AddHandler posterpicboxes.LoadCompleted, AddressOf imageres
                    End With

                    postercheckboxes() = New RadioButton()
                    With postercheckboxes
                        .Location = New Point(location + 50, 166)
                        .Name = "postercheckbox" & itemcounter.ToString
                        .SendToBack()
                        .Text = " "
                        AddHandler postercheckboxes.CheckedChanged, AddressOf radiochanged
                    End With

                    itemcounter += 1


                    Me.Panel8.Controls.Add(posterpicboxes())
                    Me.Panel8.Controls.Add(postercheckboxes())
                End If
                If tempboolean = False Then

                    posterpicboxes() = New PictureBox()
                    With posterpicboxes
                        .WaitOnLoad = True
                        .Location = New Point(location, 192)
                        .Width = 123
                        .Height = 168
                        .SizeMode = PictureBoxSizeMode.Zoom
                        .ImageLocation = item
                        .Visible = True
                        .BorderStyle = BorderStyle.Fixed3D
                        .Name = "poster" & itemcounter.ToString
                        AddHandler posterpicboxes.DoubleClick, AddressOf zoomimage2
                        AddHandler posterpicboxes.LoadCompleted, AddressOf imageres
                    End With

                    postercheckboxes() = New RadioButton()
                    With postercheckboxes
                        .Location = New Point(location + 50, 358)
                        .Name = "postercheckbox" & itemcounter.ToString
                        .SendToBack()
                        .Text = " "
                        AddHandler postercheckboxes.CheckedChanged, AddressOf radiochanged
                    End With

                    itemcounter += 1


                    Me.Panel8.Controls.Add(posterpicboxes())
                    Me.Panel8.Controls.Add(postercheckboxes())
                End If
                Me.Refresh()
                Application.DoEvents()
                If tempboolean = False Then location += 120
                tempboolean = Not tempboolean
            Catch
            End Try
        Next
        messbox.Close()
        Me.Refresh()
        Application.DoEvents()
    End Sub

    Private Sub Button10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button10.Click
        For i = Panel8.Controls.Count - 1 To 0 Step -1
            Panel8.Controls.RemoveAt(i)
        Next
        messbox = New message_box("Please wait,", "", "Downloading Preview Images")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        currentpage -= 1
        If currentpage = 1 Then
            Button10.Enabled = False
        End If
        Button9.Enabled = True

        Dim tempint As Integer = (currentpage * (10) + 1) - 10
        Dim tempint2 As Integer = currentpage * 10

        If tempint2 > posterarray.Count Then
            tempint2 = posterarray.Count
        End If

        Dim names As New List(Of String)()

        For f = tempint - 1 To tempint2 - 1
            names.Add(posterarray(f).ldposter)
        Next
        Label18.Text = "Displaying " & tempint.ToString & " to " & tempint2 & " of " & posterarray.Count.ToString & " Images"

        Dim location As Integer = 0
        Dim itemcounter As Integer = 0
        Dim tempboolean As Boolean = True
        For Each item As String In names
            If tempboolean = True Then
                posterpicboxes() = New PictureBox()
                With posterpicboxes
                    .WaitOnLoad = True
                    .Location = New Point(location, 0)
                    .Width = 123
                    .Height = 168
                    .SizeMode = PictureBoxSizeMode.Zoom
                    .ImageLocation = item
                    .Visible = True
                    .BorderStyle = BorderStyle.Fixed3D
                    .Name = "poster" & itemcounter.ToString
                    AddHandler posterpicboxes.DoubleClick, AddressOf zoomimage2
                    AddHandler posterpicboxes.LoadCompleted, AddressOf imageres
                End With

                postercheckboxes() = New RadioButton()
                With postercheckboxes
                    .Location = New Point(location + 50, 166)
                    .Name = "postercheckbox" & itemcounter.ToString
                    .SendToBack()
                    .Text = " "
                    AddHandler postercheckboxes.CheckedChanged, AddressOf radiochanged
                End With

                itemcounter += 1


                Me.Panel8.Controls.Add(posterpicboxes())
                Me.Panel8.Controls.Add(postercheckboxes())
            End If
            If tempboolean = False Then
                posterpicboxes() = New PictureBox()
                With posterpicboxes
                    .WaitOnLoad = True
                    .Location = New Point(location, 192)
                    .Width = 123
                    .Height = 168
                    .SizeMode = PictureBoxSizeMode.Zoom
                    .ImageLocation = item
                    .Visible = True
                    .BorderStyle = BorderStyle.Fixed3D
                    .Name = "poster" & itemcounter.ToString
                    AddHandler posterpicboxes.DoubleClick, AddressOf zoomimage2
                    AddHandler posterpicboxes.LoadCompleted, AddressOf imageres
                End With

                postercheckboxes() = New RadioButton()
                With postercheckboxes
                    .Location = New Point(location + 50, 358)
                    .Name = "postercheckbox" & itemcounter.ToString
                    .SendToBack()
                    .Text = " "
                    AddHandler postercheckboxes.CheckedChanged, AddressOf radiochanged
                End With

                itemcounter += 1


                Me.Panel8.Controls.Add(posterpicboxes())
                Me.Panel8.Controls.Add(postercheckboxes())
            End If
            Me.Refresh()
            Application.DoEvents()
            If tempboolean = False Then location += 120
            tempboolean = Not tempboolean
        Next
        messbox.Close()
        Me.Refresh()
        Application.DoEvents()
    End Sub

    Private Sub Button18_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button18.Click
        messbox = New message_box("Please wait,", "", "Scraping Movie Poster List")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Call initialiseposters()
        Dim newobject As New class_mpdb_thumbs.Class1
        Dim teststring As New XmlDocument
        Dim testthumbs As String
        Try
            testthumbs = newobject.get_mpdb_thumbs(workingmoviedetails.fullmoviebody.imdbid)
            testthumbs = "<totalthumbs>" & testthumbs & "</totalthumbs>"
            teststring.LoadXml(testthumbs)

        Catch ex As Exception
            Thread.Sleep(1)
        End Try

        Dim thumbstring As New XmlDocument
        Try
            thumbstring.LoadXml(testthumbs)



            For Each thisresult In thumbstring("totalthumbs")
                Select Case thisresult.Name
                    Case "thumb"
                        Dim newposters As New listofposters
                        newposters.hdposter = thisresult.InnerText
                        newposters.ldposter = thisresult.InnerText
                        posterarray.Add(newposters)
                        newposters.ldposter = Nothing
                        newposters.hdposter = Nothing
                End Select
            Next
        Catch ex As Exception

        End Try
        messbox.Close()
        Call displayselection()

    End Sub

    Private Sub Button16_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button16.Click
        messbox = New message_box("Please wait,", "", "Scraping Movie Poster List")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Call initialiseposters()
        Dim newobject2 As New IMPA.getimpaposters
        Try
            Dim posters(,) As String = newobject2.getimpaafulllist(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
            For f = 0 To UBound(posters)
                If posters(f, 0) <> Nothing Then
                    If posters(f, 1) = Nothing Then posters(f, 1) = posters(f, 0)
                    Dim newposters As New listofposters
                    newposters.hdposter = posters(f, 0)
                    newposters.ldposter = posters(f, 1)
                    posterarray.Add(newposters)
                    newposters.ldposter = Nothing
                    newposters.hdposter = Nothing
                End If
            Next
        Catch

        End Try
        messbox.Close()
        Call displayselection()

    End Sub

    Private Sub Button15_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button15.Click
        Dim tempstring As String
        Dim tempint As Integer = 0
        Dim realnumber As Integer = 0
        Dim tempstring2 As String = ""
        Dim allok As Boolean = False
        Dim backup As String = ""
       


        For Each button As Control In Me.Panel8.Controls
            If button.Name.IndexOf("postercheckbox") <> -1 Then
                Dim b1 As RadioButton = CType(button, RadioButton)
                If b1.Checked = True Then
                    tempstring = b1.Name
                    If tempstring.IndexOf("postercheckbox") <> -1 Then
                        tempstring = tempstring.Replace("postercheckbox", "")
                        tempint = Convert.ToDecimal(tempstring)
                        'tempstring2 = posterarray(tempint + 1).hdposter
                        If tempstring2 = Nothing Then
                            tempint = Convert.ToDecimal(tempstring)
                            tempint = tempint + ((currentpage - 1) * 10)
                            If CheckBox1.Visible = True Then
                                If CheckBox1.CheckState = CheckState.Checked Then
                                    tempstring2 = posterarray(tempint).ldposter
                                Else
                                    tempstring2 = posterarray(tempint).hdposter
                                    backup = posterarray(tempint).ldposter
                                End If
                            Else
                                tempstring2 = posterarray(tempint).ldposter
                            End If
                            allok = True
                            Exit For
                        End If
                    End If
                End If
            End If
        Next





        If allok = False Then
            MsgBox("No Poster Is Selected")
        End If



        Try
            Dim i1 As New PictureBox

            With i1
                .WaitOnLoad = True
                Try
                    .ImageLocation = tempstring2
                Catch
                    .ImageLocation = backup
                End Try
            End With

            If Not i1.Image Is Nothing Then
                If i1.Image.Width < 20 Then
                    i1.ImageLocation = backup
                End If
            End If

            i1.Image.Save(workingmoviedetails.fileinfo.posterpath, Imaging.ImageFormat.Jpeg)
      
            If userprefs.createfolderjpg = True Then
                tempstring = workingmoviedetails.fileinfo.posterpath
                tempstring = tempstring.Replace(IO.Path.GetFileName(tempstring), "folder.jpg")
                i1.Image.Save(tempstring, Imaging.ImageFormat.Jpeg)
            End If


            Dim bitmap3 As New Bitmap(workingmoviedetails.fileinfo.posterpath)
            Dim bitmap2 As New Bitmap(bitmap3)
            bitmap3.Dispose()
            Dim bm_source As New Bitmap(bitmap2)
            Dim bm_dest As New Bitmap(150, 200)
            Dim gr As Graphics = Graphics.FromImage(bm_dest)
            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
            gr.DrawImage(bm_source, 0, 0, 150 - 1, 200 - 1)
            Dim tempbitmap As Bitmap = bm_dest
            Dim filename As String = filefunction.GetCRC32(workingmoviedetails.fileinfo.fullpathandfilename)
            Dim path As String = IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")
            tempbitmap.Save(path, Imaging.ImageFormat.Jpeg)
            tempbitmap.Dispose()

            For Each poster As PictureBox In TabPage22.Controls
                If poster.Tag = workingmoviedetails.fileinfo.fullpathandfilename Then
                    poster.ImageLocation = IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")
                    Exit For
                End If
            Next

            PictureBox3.ImageLocation = workingmoviedetails.fileinfo.posterpath
            moviethumb.ImageLocation = workingmoviedetails.fileinfo.posterpath
            tempstring = PictureBox3.Image.Width.ToString & " x " & PictureBox3.Image.Height.ToString
            Label19.Text = tempstring
            Label19.Refresh()
        Catch ex As Exception
            'MsgBox(ex.ToString)
        End Try
        Call postersaved()
    End Sub

    Private Sub PictureBox3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PictureBox3.Click
        If Not PictureBox3.Image Is Nothing Then
            Me.ControlBox = False
            MenuStrip1.Enabled = False
            'ToolStrip1.Enabled = False
            Call zoomimage(PictureBox3.Image)
        End If
    End Sub

    Private Sub Button5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button5.Click
        openFD.InitialDirectory = workingmoviedetails.fileinfo.fullpathandfilename.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename), "")
        openFD.Title = "Select a jpeg image File"
        openFD.FileName = ""
        openFD.Filter = "Media Companion Image Files|*.jpg;*.tbn|All Files|*.*"
        openFD.FilterIndex = 0
        openFD.ShowDialog()
        TextBox4.Text = openFD.FileName
    End Sub

    Private Sub Button8_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button8.Click
        Dim tempstring As String = ""
        Dim MyWebClient As New System.Net.WebClient

        Try
            Dim ImageInBytes() As Byte = MyWebClient.DownloadData(TextBox4.Text)
            Dim ImageStream As New IO.MemoryStream(ImageInBytes)

            PictureBox3.Image = New System.Drawing.Bitmap(ImageStream)
            PictureBox3.Image.Save(workingmoviedetails.fileinfo.posterpath, Imaging.ImageFormat.Jpeg)
            If userprefs.createfolderjpg = True Then
                tempstring = workingmoviedetails.fileinfo.posterpath.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.posterpath), "folder.jpg")
                PictureBox3.Image.Save(tempstring, Imaging.ImageFormat.Jpeg)
            End If
            moviethumb.ImageLocation = workingmoviedetails.fileinfo.posterpath
            Dim bitmap3 As New Bitmap(workingmoviedetails.fileinfo.posterpath)
            Dim bitmap2 As New Bitmap(bitmap3)
            bitmap3.Dispose()
            Dim bm_source As New Bitmap(bitmap2)
            Dim bm_dest As New Bitmap(150, 200)
            Dim gr As Graphics = Graphics.FromImage(bm_dest)
            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
            gr.DrawImage(bm_source, 0, 0, 150 - 1, 200 - 1)
            Dim tempbitmap As Bitmap = bm_dest
            Dim filename As String = filefunction.GetCRC32(workingmoviedetails.fileinfo.fullpathandfilename)
            Dim path As String = IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")
            tempbitmap.Save(path, Imaging.ImageFormat.Jpeg)
            tempbitmap.Dispose()

            For Each poster As PictureBox In TabPage22.Controls
                If poster.Tag = workingmoviedetails.fileinfo.fullpathandfilename Then
                    poster.ImageLocation = IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")
                    Exit For
                End If
            Next
        Catch ex As Exception
            MsgBox("Unable To Download Image")
        End Try
        Call postersaved()
        Panel6.Visible = False
    End Sub

    Private Sub Button7_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button7.Click
        Panel6.Visible = False
    End Sub

    Private Sub Button20_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button20.Click
        Panel6.Visible = True
    End Sub

    Private Sub Button22_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        WebBrowser1.GoBack()
    End Sub

    Private Sub Button21_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button21.Click
        Dim stage As String = "Starting Rescrape" & vbCrLf

        Try
            Dim tempstring As String = ""
            Dim tempint As Integer
            tempstring = WebBrowser1.Url.ToString
            




            Dim T As String
            Dim mat As Match


            Dim tempinfo As String = ""

            T = tempstring
            mat = Nothing
            mat = Regex.Match(T, "(tt\d{7})")
            If mat.Success = True Then
                tempstring = mat.Value
            Else
                MsgBox("Please Browse to a Movie page")
                Exit Sub
            End If

            workingmoviedetails.fullmoviebody.imdbid = tempstring

            If outlinetxt.Text = "MC cannot find this file, either the file no longer exists, or MC cannot access the file path" Then
                MsgBox("MC cannot find this file, either the file no longer exists, or MC cannot access the file path")
                Exit Sub
            End If
            tempint = MessageBox.Show("Changing the movie will Overwrite all the current details" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
            If tempint = DialogResult.No Then
                Exit Sub
            End If
            Dim messbox As message_box = New message_box("The Selected Movie is being scraped", "", "Please Wait")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()

            If workingmoviedetails Is Nothing Then Exit Sub

            If CheckBox2.CheckState = CheckState.Checked Then
                stage = stage & vbCrLf
                stage = stage & "Deleting existing poster and backdrops" & vbCrLf
                Try
                    If IO.File.Exists(workingmoviedetails.fileinfo.posterpath) Then
                        IO.File.Delete(workingmoviedetails.fileinfo.posterpath)
                    End If
                Catch
                End Try
                Try
                    If IO.File.Exists(workingmoviedetails.fileinfo.fanartpath) Then
                        IO.File.Delete(workingmoviedetails.fileinfo.fanartpath)
                    End If
                Catch
                End Try
                Try
                    tempstring = workingmoviedetails.fileinfo.posterpath.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.posterpath), "folder.jpg")
                    If IO.File.Exists(tempstring) Then
                        IO.File.Delete(tempstring)
                    End If
                Catch
                End Try
            End If

            If workingmoviedetails.fullmoviebody.imdbid = Nothing Then Exit Sub
            Me.Cursor = Cursors.WaitCursor
            '                    Dim scraper As New imdb.Classimdbscraper
            Dim scraper As New Classimdb
            Dim body As String
            Dim actorlist As String
            Dim trailer As String
            Dim thumbstring As New XmlDocument
            Dim thisresult As XmlNode = Nothing
            stage = stage & vbCrLf
            stage = stage & "Clearing current movie details" & vbCrLf


            workingmoviedetails.fullmoviebody.credits = ""
            workingmoviedetails.fullmoviebody.director = ""
            workingmoviedetails.fullmoviebody.genre = ""
            workingmoviedetails.fullmoviebody.mpaa = ""
            workingmoviedetails.fullmoviebody.outline = ""
            workingmoviedetails.fullmoviebody.plot = ""
            workingmoviedetails.fullmoviebody.premiered = ""
            workingmoviedetails.fullmoviebody.rating = ""
            workingmoviedetails.fullmoviebody.runtime = ""
            workingmoviedetails.fullmoviebody.studio = ""
            workingmoviedetails.fullmoviebody.tagline = ""
            workingmoviedetails.fullmoviebody.thumbnails = ""
            workingmoviedetails.fullmoviebody.title = ""
            workingmoviedetails.fullmoviebody.top250 = ""
            workingmoviedetails.fullmoviebody.trailer = ""
            workingmoviedetails.fullmoviebody.votes = ""
            workingmoviedetails.fullmoviebody.year = ""
            workingmoviedetails.fullmoviebody.country = ""
            workingmoviedetails.fullmoviebody.sortorder = ""
            workingmoviedetails.alternativetitles.Clear()
            stage = stage & vbCrLf
            stage = stage & "Scraping Movie Body with settings:" & vbCrLf
            stage = stage & workingmoviedetails.fullmoviebody.imdbid & vbCrLf
            stage = stage & userprefs.imdbmirror & vbCrLf
            body = scraper.getimdbbody(, , workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)



            If body = "MIC" Then
                workingmoviedetails.fullmoviebody.genre = "problem"
                stage = stage & "Body not Scraped" & vbCrLf
            Else

                thumbstring.LoadXml(body)



                Dim certificates As New List(Of String)
                stage = stage & vbCrLf
                stage = stage & "Parsing scraper XML" & vbCrLf
                For Each thisresult In thumbstring("movie")
                    Select Case thisresult.Name
                        Case "title"
                            stage = stage & "Selecting Title according to settings" & vbCrLf
                            If userprefs.keepfoldername = False Then
                                workingmoviedetails.fullmoviebody.title = thisresult.InnerText
                            Else
                                If userprefs.usefoldernames = False Then
                                    tempstring = IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename)
                                    workingmoviedetails.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                                Else
                                    '                                    workingmoviedetails.fullmoviebody.title = filefunction.getlastfolder(workingmoviedetails.fileinfo.fullpathandfilename) 'foldername)
                                    tempstring = filefunction.getlastfolder(workingmoviedetails.fileinfo.fullpathandfilename) 'foldername)
                                    workingmoviedetails.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                                    '                                    workingmoviedetails.fullmoviebody.sortorder = filefunction.getlastfolder(workingmoviedetails.fileinfo.fullpathandfilename) 'foldername)
                                    tempstring = filefunction.getlastfolder(workingmoviedetails.fileinfo.fullpathandfilename) 'foldername)
                                    workingmoviedetails.fullmoviebody.sortorder = filefunction.cleanfilename(tempstring)
                                End If
                            End If
                            stage = stage & "Adding title: " & workingmoviedetails.fullmoviebody.title & vbCrLf
                        Case "credits"
                            stage = stage & "Adding credits: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.credits = thisresult.InnerText
                        Case "country"
                            workingmoviedetails.fullmoviebody.country = thisresult.InnerText
                        Case "director"
                            stage = stage & "Adding director: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.director = thisresult.InnerText
                        Case "genre"
                            stage = stage & "Adding genre: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.genre = thisresult.InnerText
                        Case "mpaa"
                            stage = stage & "Adding mpaa: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.mpaa = thisresult.InnerText
                        Case "outline"
                            stage = stage & "Adding outline: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.outline = thisresult.InnerText
                        Case "plot"
                            stage = stage & "Adding plot: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.plot = thisresult.InnerText
                        Case "premiered"
                            stage = stage & "Adding premiered: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.premiered = thisresult.InnerText
                        Case "rating"
                            stage = stage & "Adding rating: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.rating = thisresult.InnerText
                        Case "runtime"
                            stage = stage & "Adding runtime: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.runtime = thisresult.InnerText
                        Case "studio"
                            stage = stage & "Adding studio: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.studio = thisresult.InnerText
                        Case "tagline"
                            stage = stage & "Adding tagline: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.tagline = thisresult.InnerText
                        Case "top250"
                            stage = stage & "Adding top250: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.top250 = thisresult.InnerText
                        Case "votes"
                            stage = stage & "Adding votes: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.votes = thisresult.InnerText
                        Case "year"
                            stage = stage & "Adding year: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.year = thisresult.InnerText
                        Case "cert"
                            stage = stage & "Adding cert: " & thisresult.InnerText & vbCrLf
                            certificates.Add(thisresult.InnerText)
                        Case "id"
                            stage = stage & "Adding id: " & thisresult.InnerText & vbCrLf
                            workingmoviedetails.fullmoviebody.imdbid = thisresult.InnerText
                        Case "alternativetitle"
                            workingmoviedetails.alternativetitles.Add(thisresult.InnerText)
                    End Select
                Next

                Try
                    If userprefs.gettrailer = True Then
                        stage = stage & vbCrLf
                        stage = stage & "Scraping trailer url" & vbCrLf
                        If trailer <> Nothing Then
                            workingmoviedetails.fullmoviebody.trailer = trailer
                        End If
                    End If
                Catch
                End Try
                stage = stage & vbCrLf
                stage = stage & "Scraping actors with preferences:" & vbCrLf
                stage = stage & "mirror: " & userprefs.imdbmirror & vbCrLf
                stage = stage & "imdbid: " & workingmoviedetails.fullmoviebody.imdbid & vbCrLf
                stage = stage & "title: " & workingmoviedetails.fullmoviebody.title & vbCrLf
                stage = stage & "max actors:" & userprefs.maxactors & vbCrLf
                actorlist = scraper.getimdbactors(userprefs.imdbmirror, workingmoviedetails.fullmoviebody.imdbid, workingmoviedetails.fullmoviebody.title, userprefs.maxactors)
                stage = stage & vbCrLf
                stage = stage & "Parsing xml actorlist" & vbCrLf
                Dim done As Boolean = False
                For f = 0 To UBound(userprefs.certificatepriority)
                    For Each cert In certificates
                        If cert.IndexOf(userprefs.certificatepriority(f)) <> -1 Then
                            workingmoviedetails.fullmoviebody.mpaa = cert.Substring(cert.IndexOf("|") + 1, cert.Length - cert.IndexOf("|") - 1)
                            done = True
                            Exit For
                        End If
                    Next
                    If done = True Then Exit For
                Next
            End If
            'userprefs.certificatepriority(1)
            workingmoviedetails.listthumbs.Clear()
            stage = stage & vbCrLf
            stage = stage & "working with actor thumbnails" & vbCrLf
            If userprefs.nfoposterscraper <> 0 Then
                Dim thumbs As String = ""

                If userprefs.nfoposterscraper = 1 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 15 Then
                    Dim newobject3 As New IMPA.getimpaposters
                    tempstring = newobject3.getimpathumbs(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                    If tempstring <> Nothing Then thumbs = thumbs & tempstring
                End If

                If userprefs.nfoposterscraper = 2 Or userprefs.nfoposterscraper = 3 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                    Dim newobject2 As New tmdb_posters.Class1
                    tempstring = newobject2.gettmdbposters(workingmoviedetails.fullmoviebody.imdbid)
                    If tempstring <> Nothing Then thumbs = thumbs & tempstring
                End If

                If userprefs.nfoposterscraper = 4 Or userprefs.nfoposterscraper = 5 Or userprefs.nfoposterscraper = 6 Or userprefs.nfoposterscraper = 7 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                    Dim newobject As New class_mpdb_thumbs.Class1
                    tempstring = newobject.get_mpdb_thumbs(workingmoviedetails.fullmoviebody.imdbid)
                    If tempstring <> Nothing Then thumbs = thumbs & tempstring
                End If

                If userprefs.nfoposterscraper = 8 Or userprefs.nfoposterscraper = 9 Or userprefs.nfoposterscraper = 10 Or userprefs.nfoposterscraper = 11 Or userprefs.nfoposterscraper = 12 Or userprefs.nfoposterscraper = 13 Or userprefs.nfoposterscraper = 14 Or userprefs.nfoposterscraper = 15 Then
                    Dim thumbscraper As New imdb_thumbs.Class1
                    tempstring = thumbscraper.getimdbthumbs(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year, workingmoviedetails.fullmoviebody.imdbid)
                    If tempstring <> Nothing Then thumbs = thumbs & tempstring
                End If



                thumbs = "<thumblist>" & thumbs & "</thumblist>"

                Try
                    thumbstring.LoadXml(thumbs)



                    For Each thisresult In thumbstring("thumblist")
                        Select Case thisresult.Name
                            Case "thumb"
                                workingmoviedetails.listthumbs.Add(thisresult.InnerText)
                        End Select
                    Next
                Catch
                End Try
            End If

            workingmoviedetails.listactors.Clear()
            If actorlist <> Nothing Then
                thumbstring.LoadXml(actorlist)
                thisresult = Nothing
                For Each thisresult In thumbstring("actorlist")
                    Select Case thisresult.Name
                        Case "actor"
                            Dim newactor As New movieactors
                            Dim detail As XmlNode = Nothing
                            For Each detail In thisresult.ChildNodes
                                Select Case detail.Name
                                    Case "name"
                                        newactor.actorname = detail.InnerText
                                    Case "role"
                                        newactor.actorrole = detail.InnerText
                                    Case "thumb"
                                        newactor.actorthumb = detail.InnerText
                                    Case "actorid"
                                        If newactor.actorthumb <> Nothing Then
                                            If userprefs.actorsave = True And detail.InnerText <> "" Then
                                                Dim workingpath As String = ""
                                                Dim networkpath As String = Form1.userprefs.actorsavepath
                                                Try
                                                    tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                    Dim hg As New IO.DirectoryInfo(tempstring)
                                                    If Not hg.Exists Then
                                                        IO.Directory.CreateDirectory(tempstring)
                                                    End If
                                                    workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                    If Not IO.File.Exists(workingpath) Then
                                                        Dim buffer(4000000) As Byte
                                                        Dim size As Integer = 0
                                                        Dim bytesRead As Integer = 0
                                                        Dim thumburl As String = newactor.actorthumb
                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                        Dim contents As Stream = res.GetResponseStream()
                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                        While bytesToRead > 0
                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                            If size = 0 Then Exit While
                                                            bytesToRead -= size
                                                            bytesRead += size
                                                        End While

                                                        Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                        fstrm.Write(buffer, 0, bytesRead)
                                                        contents.Close()
                                                        fstrm.Close()
                                                    End If
                                                    newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText & ".jpg")
                                                Catch
                                                End Try
                                            End If
                                        End If
                                End Select
                            Next
                            workingmoviedetails.listactors.Add(newactor)
                            Dim actornew As New actordatabase
                            actornew.actorname = newactor.actorname
                            actornew.movieid = workingmoviedetails.fullmoviebody.imdbid
                            actordb.Add(actornew)
                    End Select
                Next
            End If
            Try
                If workingmoviedetails.filedetails.filedetails_video.duration <> Nothing Then

                    '1h 24mn 48s 546ms
                    Dim hours As Integer
                    Dim minutes As Integer
                    tempstring = workingmoviedetails.filedetails.filedetails_video.duration
                    tempint = tempstring.IndexOf("h")
                    If tempint <> -1 Then
                        hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                        tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                        tempstring = Trim(tempstring)
                    End If
                    tempint = tempstring.IndexOf("mn")
                    If tempint <> -1 Then
                        minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                    End If
                    If hours <> 0 Then
                        hours = hours * 60
                    End If
                    minutes = minutes + hours
                    workingmoviedetails.fullmoviebody.runtime = minutes.ToString & " min"
                End If
            Catch
            End Try
            stage = stage & vbCrLf
            stage = stage & "Saving nfo to: " & workingmoviedetails.fileinfo.fullpathandfilename & vbCrLf
            nfofunction.savemovienfo(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails, True)

            If CheckBox2.CheckState = CheckState.Checked Then
                'get poster and fanart
                Dim moviethumburl As String = ""
                If userprefs.scrapemovieposters = True Then
                    stage = stage & vbCrLf
                    stage = stage & "Scraping posters" & vbCrLf
                    Try
                        Select Case userprefs.moviethumbpriority(0)
                            Case "Internet Movie Poster Awards"
                                moviethumburl = scraperfunction2.impathumb(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                            Case "IMDB"
                                moviethumburl = scraperfunction2.imdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                            Case "Movie Poster DB"
                                moviethumburl = scraperfunction2.mpdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                            Case "themoviedb.org"
                                moviethumburl = scraperfunction2.tmdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                        End Select
                    Catch
                        moviethumburl = "na"
                    End Try
                    Try
                        If moviethumburl = "na" Then
                            Select Case userprefs.moviethumbpriority(1)
                                Case "Internet Movie Poster Awards"
                                    moviethumburl = scraperfunction2.impathumb(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                                Case "IMDB"
                                    moviethumburl = scraperfunction2.imdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                                Case "Movie Poster DB"
                                    moviethumburl = scraperfunction2.mpdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                                Case "themoviedb.org"
                                    moviethumburl = scraperfunction2.tmdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                            End Select
                        End If
                    Catch
                        moviethumburl = "na"
                    End Try
                    Try
                        If moviethumburl = "na" Then
                            Select Case userprefs.moviethumbpriority(2)
                                Case "Internet Movie Poster Awards"
                                    moviethumburl = scraperfunction2.impathumb(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                                Case "IMDB"
                                    moviethumburl = scraperfunction2.imdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                                Case "Movie Poster DB"
                                    moviethumburl = scraperfunction2.mpdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                                Case "themoviedb.org"
                                    moviethumburl = scraperfunction2.tmdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                            End Select
                        End If
                    Catch
                        moviethumburl = "na"
                    End Try
                    Try
                        If moviethumburl = "na" Then
                            Select Case userprefs.moviethumbpriority(3)
                                Case "Internet Movie Poster Awards"
                                    moviethumburl = scraperfunction2.impathumb(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                                Case "IMDB"
                                    moviethumburl = scraperfunction2.imdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                                Case "Movie Poster DB"
                                    moviethumburl = scraperfunction2.mpdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                                Case "themoviedb.org"
                                    moviethumburl = scraperfunction2.tmdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                            End Select
                        End If
                    Catch
                        moviethumburl = "na"
                    End Try
                    Try
                        If moviethumburl <> "" And moviethumburl <> "na" Then
                            Dim newmoviethumbpath As String = workingmoviedetails.fileinfo.posterpath
                            Try
                                Dim buffer(4000000) As Byte
                                Dim size As Integer = 0
                                Dim bytesRead As Integer = 0
                                Dim thumburl As String = moviethumburl
                                Dim req As HttpWebRequest = req.Create(thumburl)
                                Dim res As HttpWebResponse = req.GetResponse()
                                Dim contents As Stream = res.GetResponseStream()
                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                While bytesToRead > 0
                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                    If size = 0 Then Exit While
                                    bytesToRead -= size
                                    bytesRead += size
                                End While
                                'scraperlog = scraperlog & "Downloading Movie Thumbnail at URL :- " & newmoviethumbpath & vbCrLf
                                'scraperlog = scraperlog & "Unable to Download Thumb" & vbCrLf
                                'scraperlog = scraperlog & "Saving Thumbnail To Path :- " & newmoviethumbpath & vbCrLf
                                stage = stage & "Saving poster to: " & newmoviethumbpath & vbCrLf
                                Dim fstrm As New FileStream(newmoviethumbpath, FileMode.OpenOrCreate, FileAccess.Write)
                                fstrm.Write(buffer, 0, bytesRead)
                                contents.Close()
                                fstrm.Close()


                                Dim temppath As String = newmoviethumbpath.Replace(System.IO.Path.GetFileName(newmoviethumbpath), "folder.jpg")
                                If Form1.userprefs.createfolderjpg = True Then
                                    If Form1.userprefs.overwritethumbs = True Or System.IO.File.Exists(temppath) = False Then
                                        stage = stage & "Saving folder.jpg To Path :- " & temppath & vbCrLf
                                        Dim fstrm2 As New FileStream(temppath, FileMode.OpenOrCreate, FileAccess.Write)
                                        fstrm2.Write(buffer, 0, bytesRead)
                                        contents.Close()
                                        fstrm2.Close()
                                    Else
                                        stage = stage & "folder.jpg Not Saved to :- " & temppath & ", file already exists" & vbCrLf
                                    End If
                                End If
                            Catch ex As Exception
                                stage = stage & "Problem Saving poster" & vbCrLf
                                stage = stage & "Error Returned :- " & ex.ToString & vbCrLf & vbCrLf
                            End Try
                        Else
                            stage = stage & "No Poster Found" & vbCrLf
                        End If
                    Catch
                    End Try
                End If


                stage = stage & vbCrLf
                stage = stage & "Scraping fanart list from TMdb" & vbCrLf
                If Form1.userprefs.savefanart = True Then

                    If BckWrkScnMovies.CancellationPending Then Exit Sub
                    Dim moviefanartexists As Boolean




                    Dim temp As String = workingmoviedetails.fullmoviebody.imdbid

                    Dim fanarturl As String = "http://api.themoviedb.org/2.1/Movie.imdbLookup/en/xml/3f026194412846e530a208cf8a39e9cb/" & temp
                    Dim apple2(2000) As String
                    Dim fanartlinecount As Integer = 0
                    Try
                        Dim wrGETURL As WebRequest
                        wrGETURL = WebRequest.Create(fanarturl)
                        Dim myProxy As New WebProxy("myproxy", 80)
                        myProxy.BypassProxyOnLocal = True
                        Dim objStream As Stream
                        objStream = wrGETURL.GetResponse.GetResponseStream()
                        Dim objReader As New StreamReader(objStream)
                        Dim sLine As String = ""
                        fanartlinecount = 0
                        Do While Not sLine Is Nothing
                            fanartlinecount += 1
                            sLine = objReader.ReadLine
                            apple2(fanartlinecount) = sLine
                        Loop
                        fanartlinecount -= 1
                        Dim fanartfound As Boolean = False
                        For g = 1 To fanartlinecount
                            If apple2(g).IndexOf("<image type=""backdrop""") <> -1 Then
                                If apple2(g).IndexOf("size=""original""") <> -1 Then
                                    Dim StartofURL As Integer = apple2(g).IndexOf("url=""") + 5
                                    Dim EndofURL As Integer = apple2(g).IndexOf("size=""original""") - 2
                                    apple2(g) = apple2(g).Substring(StartofURL, (EndofURL - StartofURL))
                                    apple2(g) = apple2(g).Trim
                                    If apple2(g).ToLower.IndexOf("http") <> -1 And apple2(g).ToLower.IndexOf(".jpg") <> -1 Or apple2(g).IndexOf(".jpeg") <> -1 Or apple2(g).IndexOf(".png") <> -1 Then
                                        moviethumburl = apple2(g)
                                        fanartfound = True
                                    End If
                                End If
                                Exit For
                            End If
                        Next
                        If fanartfound = False Then
                            moviethumburl = ""
                            stage = stage & "No fanart found" & vbCrLf
                        End If

                    Catch
                    End Try

                    If moviethumburl <> "" Then
                        stage = stage & vbCrLf
                        stage = stage & "Attempting to download fanart" & vbCrLf
                        Try
                            Dim buffer(4000000) As Byte
                            Dim size As Integer = 0
                            Dim bytesRead As Integer = 0

                            Dim thumburl As String = moviethumburl
                            Dim req As HttpWebRequest = req.Create(thumburl)
                            Dim res As HttpWebResponse = req.GetResponse()
                            Dim contents As Stream = res.GetResponseStream()
                            Dim bytesToRead As Integer = CInt(buffer.Length)
                            Dim bmp As New Bitmap(contents)



                            While bytesToRead > 0
                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                If size = 0 Then Exit While
                                bytesToRead -= size
                                bytesRead += size
                            End While



                            If Form1.userprefs.resizefanart = 1 Then
                                stage = stage & "Fanart download succeeded, saving to: " & workingmoviedetails.fileinfo.fanartpath & vbCrLf
                                bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                            ElseIf Form1.userprefs.resizefanart = 2 Then
                                If bmp.Width > 1280 Or bmp.Height > 720 Then
                                    stage = stage & "Fanart download succeeded, resizing to: 1280x720" & vbCrLf
                                    Dim bm_source As New Bitmap(bmp)
                                    Dim bm_dest As New Bitmap(1280, 720)
                                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                    gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                    stage = stage & "Fanart resize succeeded, saving to: " & workingmoviedetails.fileinfo.fanartpath & vbCrLf
                                    bm_dest.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                Else
                                    stage = stage & "Fanart download succeeded, saving to: " & workingmoviedetails.fileinfo.fanartpath & vbCrLf
                                    bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                End If
                            ElseIf Form1.userprefs.resizefanart = 3 Then
                                If bmp.Width > 960 Or bmp.Height > 540 Then
                                    stage = stage & "Fanart download succeeded, resizing to: 960x540" & vbCrLf
                                    stage = stage & "Fanart resize succeeded, saving to: " & workingmoviedetails.fileinfo.fanartpath & vbCrLf
                                    Dim bm_source As New Bitmap(bmp)
                                    Dim bm_dest As New Bitmap(960, 540)
                                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                    gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                    bm_dest.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                Else
                                    stage = stage & "Fanart download succeeded, saving to: " & workingmoviedetails.fileinfo.fanartpath & vbCrLf
                                    bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                                End If
                            End If
                            If IO.File.Exists(workingmoviedetails.fileinfo.fanartpath) Then
                                For Each paths In userprefs.offlinefolders
                                    Dim offlinepath As String = paths & "\"
                                    If workingmoviedetails.fileinfo.fanartpath.IndexOf(offlinepath) <> -1 Then
                                        Dim mediapath As String
                                        mediapath = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                                        Call offlinedvd(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails.fullmoviebody.title, mediapath)
                                    End If
                                Next
                            End If
                        Catch ex As Exception

                        End Try
                    End If
                End If
            End If
            stage = stage & vbCrLf
            stage = stage & "Populating form with updated details" & vbCrLf
            Call loadinfofile()
            stage = stage & vbCrLf
            stage = stage & "Adding movie to internal list" & vbCrLf
            For f = 0 To fullmovielist.Count - 1
                If fullmovielist(f).fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename Then
                    Dim newfullmovie As combolist
                    newfullmovie = fullmovielist(f)
                    newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title
                    '-------------- Aqui
                    If userprefs.ignorearticle = True Then
                        If newfullmovie.titleandyear.ToLower.IndexOf("the ") = 0 Then
                            newfullmovie.titleandyear = newfullmovie.titleandyear.Substring(4, newfullmovie.titleandyear.Length - 4)
                            newfullmovie.titleandyear = newfullmovie.titleandyear & ", The"
                        End If
                    End If
                    newfullmovie.titleandyear = newfullmovie.titleandyear & " (" & workingmoviedetails.fullmoviebody.year & ")"
                    newfullmovie.genre = workingmoviedetails.fullmoviebody.genre
                    Try
                        Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                        Dim myDate2 As Date = filecreation2.LastWriteTime

                        newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                        newfullmovie.createdate = Format(myDate2, "yyyyMMddHHmmss").ToString
                    Catch ex2 As Exception
                    End Try
                    newfullmovie.sortorder = workingmoviedetails.fullmoviebody.sortorder
                    newfullmovie.playcount = workingmoviedetails.fullmoviebody.playcount
                    newfullmovie.rating = workingmoviedetails.fullmoviebody.rating
                    newfullmovie.top250 = workingmoviedetails.fullmoviebody.top250
                    newfullmovie.id = workingmoviedetails.fullmoviebody.imdbid
                    newfullmovie.outline = workingmoviedetails.fullmoviebody.outline
                    newfullmovie.runtime = workingmoviedetails.fullmoviebody.runtime
                    newfullmovie.title = workingmoviedetails.fullmoviebody.title
                    newfullmovie.top250 = workingmoviedetails.fullmoviebody.top250
                    newfullmovie.year = workingmoviedetails.fullmoviebody.year

                    fullmovielist.RemoveAt(f)
                    fullmovielist.Add(newfullmovie)
                    Exit For
                End If
            Next
            stage = stage & vbCrLf
            stage = stage & "applying filters" & vbCrLf
            Call applyfilters()
            stage = stage & vbCrLf
            stage = stage & "Finalising" & vbCrLf
            messbox.Close()

            Me.Cursor = Cursors.Default


            Me.TabControl2.SelectedIndex = 0
            m_CurrentTabIndex = 0
            stage = stage & vbCrLf
            stage = stage & "Completed" & vbCrLf
        Catch ex As Exception
            Dim errpath As String = IO.Path.Combine(applicationpath, "changemovie.log")
            If IO.File.Exists(errpath) Then
                Try
                    IO.File.Delete(errpath)
                Catch ex2 As Exception
                    MsgBox("Error deleting: " & errpath & vbCrLf & vbCrLf & ex2.ToString)
                End Try
            End If

            Try
                stage = stage & vbCrLf & vbCrLf & ex.ToString & vbCrLf & vbCrLf & "End of log"
                Dim objWriter As New System.IO.StreamWriter(errpath)
                objWriter.Write(stage)
                objWriter.Close()
                MsgBox("Error encountered, see debug file located at: " & errpath)
            Catch ex3 As Exception
                MsgBox("Error, cant write to " & errpath & vbCrLf & vbCrLf & ex3.ToString)
            End Try
        End Try
      
    End Sub

    Private Sub Button12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button12.Click
        WebBrowser1.GoBack()
    End Sub

    Private Sub Button23_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button23.MouseDown
        'crop top
        If PictureBox3.Image Is Nothing Then Exit Sub
        posterthumbeditsmade = True
        Button27.Visible = True
        Button28.Visible = True
        postercropstring = "top"
        Timer3.Enabled = True
    End Sub

    Private Sub Button24_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button24.MouseDown
        'crop bottom
        If PictureBox3.Image Is Nothing Then Exit Sub
        posterthumbeditsmade = True
        Button27.Visible = True
        Button28.Visible = True
        postercropstring = "bottom"
        Timer3.Enabled = True
    End Sub

    Private Sub Button26_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button26.MouseDown
        'crop left
        If PictureBox3.Image Is Nothing Then Exit Sub
        posterthumbeditsmade = True
        Button27.Visible = True
        Button28.Visible = True
        postercropstring = "left"
        Timer3.Enabled = True
    End Sub

    Private Sub Button25_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button25.MouseDown
        'crop right
        If PictureBox3.Image Is Nothing Then Exit Sub
        posterthumbeditsmade = True
        Button27.Visible = True
        Button28.Visible = True
        postercropstring = "right"
        Timer3.Enabled = True
    End Sub

    Private Sub Button28_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button28.Click
        'reset
        posterthumbeditsmade = False
        PictureBox3.Image = moviethumb.Image
        Button28.Visible = False
        Button27.Visible = False
        Label19.Text = PictureBox3.Image.Width & " X " & PictureBox3.Image.Height
    End Sub

    Private Sub Button27_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button27.Click
        'save cropped
        posterthumbeditsmade = False
        Dim tempstring As String
        Try
            Dim stream As New System.IO.MemoryStream
            PictureBox3.Image.Save(workingmoviedetails.fileinfo.posterpath, System.Drawing.Imaging.ImageFormat.Jpeg)
            moviethumb.Image = PictureBox3.Image
            Button28.Visible = False
            Button27.Visible = False

            Dim bitmap3 As New Bitmap(workingmoviedetails.fileinfo.posterpath)
            Dim bitmap2 As New Bitmap(bitmap3)
            bitmap3.Dispose()
            Dim bm_source As New Bitmap(bitmap2)
            Dim bm_dest As New Bitmap(150, 200)
            Dim gr As Graphics = Graphics.FromImage(bm_dest)
            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
            gr.DrawImage(bm_source, 0, 0, 150 - 1, 200 - 1)
            Dim tempbitmap As Bitmap = bm_dest
            Dim filename As String = filefunction.GetCRC32(workingmoviedetails.fileinfo.fullpathandfilename)
            Dim path As String = IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")
            tempbitmap.Save(path, Imaging.ImageFormat.Jpeg)
            tempbitmap.Dispose()


            For Each poster As PictureBox In TabPage22.Controls
                If poster.Tag = workingmoviedetails.fileinfo.fullpathandfilename Then
                    poster.ImageLocation = IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")
                    Exit For
                End If
            Next
        Catch ex As Exception
        End Try

    End Sub

    Private Sub postercroptop()
        If PictureBox3.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        imagewidth = PictureBox3.Image.Width
        imageheight = PictureBox3.Image.Height
        PictureBox3.Image = CropImage(PictureBox3.Image, New Size(imagewidth, imageheight - 1), New Point(0, 1)).Clone
        PictureBox3.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub postercropbottom()
        If PictureBox3.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        imagewidth = PictureBox3.Image.Width
        imageheight = PictureBox3.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox3.Image = CropImage(PictureBox3.Image, New Size(imagewidth, imageheight - 1), New Point(0, 0)).Clone
        PictureBox3.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub postercropleft()
        If PictureBox3.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        imagewidth = PictureBox3.Image.Width
        imageheight = PictureBox3.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox3.Image = CropImage(PictureBox3.Image, New Size(imagewidth - 1, imageheight), New Point(1, 0)).Clone
        PictureBox3.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub postercropright()
        If PictureBox3.Image Is Nothing Then Exit Sub
        Dim imagewidth As Integer
        Dim imageheight As Integer
        thumbeditsmade = True
        imagewidth = PictureBox3.Image.Width
        imageheight = PictureBox3.Image.Height
        'PictureBox2.Image = moviethumb.Image
        PictureBox3.Image = CropImage(PictureBox3.Image, New Size(imagewidth - 1, imageheight), New Point(0, 0)).Clone
        PictureBox3.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub Timer3_Tick(ByVal sender As Object, ByVal e As System.EventArgs) Handles Timer3.Tick
        If postercropstring = "top" Then Call postercroptop()
        If postercropstring = "bottom" Then Call postercropbottom()
        If postercropstring = "left" Then Call postercropleft()
        If postercropstring = "right" Then Call postercropright()
    End Sub

    Private Sub Button23_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button23.MouseUp
        Try
            Timer3.Enabled = False
            Label19.Text = PictureBox3.Image.Width & " X " & PictureBox3.Image.Height
        Catch
        End Try
    End Sub

    Private Sub Button24_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button24.MouseUp
        Try
            Timer3.Enabled = False
            Label19.Text = PictureBox3.Image.Width & " X " & PictureBox3.Image.Height
        Catch
        End Try
    End Sub

    Private Sub Button25_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button25.MouseUp
        Try
            Timer3.Enabled = False
            Label19.Text = PictureBox3.Image.Width & " X " & PictureBox3.Image.Height
        Catch
        End Try
    End Sub

    Private Sub Button26_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button26.MouseUp
        Try
            Timer3.Enabled = False
            Label19.Text = PictureBox3.Image.Width & " X " & PictureBox3.Image.Height
        Catch
        End Try
    End Sub

    Private Sub ToolStripButton2_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If Not BckWrkScnMovies.IsBusy Then
            'ToolStripButton10.Visible = True
            'ToolStripProgressBar4.Visible = True
            ToolStripStatusLabel1.Visible = True
            ToolStripProgressBar1.Visible = True
            BckWrkScnMovies.RunWorkerAsync()
        End If
    End Sub

    Private Sub WebBrowser1_NewWindow(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles WebBrowser1.NewWindow
        e.Cancel = True
    End Sub

    Private Sub TabControl1_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabControl1.SelectedIndexChanged
        Dim tab As String = TabControl1.SelectedTab.Text.ToLower
        If tab = "movies" Then
            tab1 = 0
            userprefs.startuptab = 0
        ElseIf tab = "tv shows" Then
            tab1 = 1
            userprefs.startuptab = 1
        ElseIf tab = "" Then
            TabControl1.SelectedIndex = tab1
            Dim webAddress As String = "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=4696771"
            Process.Start(webAddress)
        ElseIf tab = "general preferences" Then
            tab1 = TabControl1.SelectedIndex
            Call setupgeneralpreferences()
        ElseIf tab = "export" Then
            Call setupexporttab()
        End If
    End Sub

    Private Sub TreeView1_AfterSelect(ByVal sender As Object, ByVal e As System.Windows.Forms.TreeViewEventArgs) Handles TreeView1.AfterSelect
        'RenameTVShowsToolStripMenuItem.Enabled = False
        Button43.Enabled = True
        'RenameTVShowsToolStripMenuItem.Visible = False
        RebuildThisShowToolStripMenuItem.Enabled = False
        RebuildThisShowToolStripMenuItem.Visible = False
        MissingepisodesToolStripMenuItem.Enabled = False
        MissingepisodesToolStripMenuItem.Visible = False
        SearchThisShowForNewEpisodesToolStripMenuItem.Enabled = False
        SearchThisShowForNewEpisodesToolStripMenuItem.Visible = False
        DownloadAvaileableMissingArtForShowToolStripMenuItem.Enabled = False
        DownloadAvaileableMissingArtForShowToolStripMenuItem.Visible = False
        ToolStripMenuItem1.Enabled = False
        ExpandSelectedShowToolStripMenuItem.Enabled = False
        CollapseSelectedShowToolStripMenuItem.Enabled = False
        ExpandAllToolStripMenuItem.Enabled = False
        CollapseAllToolStripMenuItem.Enabled = False
        ReloadItemToolStripMenuItem.Enabled = False
        OpenFolderToolStripMenuItem.Enabled = False
        If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Then
            If TabControl3.TabPages(1).Text = "Screenshot" Then
                TabControl3.TabPages.RemoveAt(1)
            End If

            ToolStripMenuItem1.Enabled = True
            ExpandSelectedShowToolStripMenuItem.Enabled = True
            ExpandAllToolStripMenuItem.Enabled = True
            CollapseAllToolStripMenuItem.Enabled = True
            CollapseSelectedShowToolStripMenuItem.Enabled = True
            ReloadItemToolStripMenuItem.Enabled = True
            OpenFolderToolStripMenuItem.Enabled = True
            'load tvshow.nfo
            ListBox3.Items.Clear()
            TextBox26.Text = ""
            Dim todo As Boolean = False
            If workingtvshow Is Nothing Then todo = True

            If workingtvshow.path = TreeView1.SelectedNode.Name Then
                Dim tempstring As String = "Search """ & workingtvshow.title & """ For new episodes"
                SearchThisShowForNewEpisodesToolStripMenuItem.Text = tempstring
                SearchThisShowForNewEpisodesToolStripMenuItem.Enabled = True
                SearchThisShowForNewEpisodesToolStripMenuItem.Visible = True
                tempstring = "Download missing art for """ & workingtvshow.title & """"
                DownloadAvaileableMissingArtForShowToolStripMenuItem.Text = tempstring
                DownloadAvaileableMissingArtForShowToolStripMenuItem.Enabled = True
                DownloadAvaileableMissingArtForShowToolStripMenuItem.Visible = True
                tempstring = "Check """ & workingtvshow.title & """ for missing episodes"
                MissingepisodesToolStripMenuItem.Text = tempstring
                MissingepisodesToolStripMenuItem.Enabled = True
                MissingepisodesToolStripMenuItem.Visible = True
                RebuildThisShowToolStripMenuItem.Enabled = True
                RebuildThisShowToolStripMenuItem.Visible = True
            End If
            If todo = False Then
                If workingtvshow.path <> TreeView1.SelectedNode.Name Then todo = True
            End If
            If todo = True Then
                Call loadtvshow(TreeView1.SelectedNode.Name)
                For tt = 0 To basictvlist.Count
                    If basictvlist(tt).fullpath = TreeView1.SelectedNode.Name Then
                        basictvlist(tt).imdbid = workingtvshow.imdbid
                        basictvlist(tt).language = workingtvshow.language
                        basictvlist(tt).locked = workingtvshow.locked
                        basictvlist(tt).rating = workingtvshow.rating
                        basictvlist(tt).sortorder = workingtvshow.sortorder
                        basictvlist(tt).status = workingtvshow.status
                        basictvlist(tt).title = workingtvshow.title
                        basictvlist(tt).titleandyear = workingtvshow.title
                        basictvlist(tt).tvdbid = workingtvshow.tvdbid
                        basictvlist(tt).year = workingtvshow.year
                        basictvlist(tt).episodeactorsource = workingtvshow.episodeactorsource
                        Exit For
                    End If
                Next
                If workingtvshow.locked = 1 Or workingtvshow.locked = 2 Then
                    For Each indnode As TreeNode In TreeView1.Nodes
                        If indnode.Name.ToLower = workingtvshow.path.ToLower Then
                            indnode.StateImageIndex = 0
                            Exit For
                        End If
                    Next
                Else
                    For Each indnode As TreeNode In TreeView1.Nodes
                        If indnode.Name.ToLower = workingtvshow.path.ToLower Then
                            indnode.StateImageIndex = -1
                            Exit For
                        End If
                    Next
                End If
              
                Dim tempstring As String = "Search """ & workingtvshow.title & """ For new episodes"
                SearchThisShowForNewEpisodesToolStripMenuItem.Text = tempstring
                SearchThisShowForNewEpisodesToolStripMenuItem.Enabled = True
                SearchThisShowForNewEpisodesToolStripMenuItem.Visible = True
                tempstring = "Download missing art for """ & workingtvshow.title & """"
                DownloadAvaileableMissingArtForShowToolStripMenuItem.Text = tempstring
                DownloadAvaileableMissingArtForShowToolStripMenuItem.Enabled = True
                DownloadAvaileableMissingArtForShowToolStripMenuItem.Visible = True
                tempstring = "Check """ & workingtvshow.title & """ for missing episodes"
                MissingepisodesToolStripMenuItem.Text = tempstring
                MissingepisodesToolStripMenuItem.Enabled = True
                MissingepisodesToolStripMenuItem.Visible = True
                RebuildThisShowToolStripMenuItem.Enabled = True
                RebuildThisShowToolStripMenuItem.Visible = True
                If workingtvshow.locked = 1 Then
                    Button60.Text = "Locked"
                    Button60.BackColor = Color.Red
                ElseIf workingtvshow.locked = 0 Then
                    Button60.Text = "Open"
                    Button60.BackColor = Color.LawnGreen
                ElseIf workingtvshow.locked = 2 Then
                    Button60.Text = "Un-Verified"
                    Button60.BackColor = Color.Red
                End If
                If workingtvshow.plot.IndexOf("Unable to find folder:") = 0 Then
                    TreeView1.SelectedNode.ForeColor = Color.Red
                    TreeView1.SelectedNode.Collapse()
                    Exit Sub
                ElseIf workingtvshow.plot.ToLower.IndexOf("xml error") <> -1 Then
                    TreeView1.SelectedNode.ForeColor = Color.Red
                Else
                    If TreeView1.SelectedNode.ForeColor = Color.Red Then
                        For Each Sh In basictvlist
                            If Sh.fullpath = TreeView1.SelectedNode.Name Then
                                Sh.status = "ok"
                                Call savetvdata()
                                Exit For
                            End If
                        Next
                    End If
                    TreeView1.SelectedNode.ForeColor = Color.Black
                End If
            Else
                If workingtvshow.plot.IndexOf("Unable to find folder:") = 0 Then
                    TreeView1.SelectedNode.ForeColor = Color.Red
                    TreeView1.SelectedNode.Collapse()
                    Exit Sub
                Else
                    TreeView1.SelectedNode.ForeColor = Color.Black
                End If
                If workingtvshow.path <> Nothing Then
                    TextBox2.Text = workingtvshow.title
                    Try
                        PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                    Catch
                        PictureBox5.Image = Nothing
                    End Try
                    Try
                        PictureBox4.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg")
                    Catch
                        PictureBox4.Image = Nothing
                    End Try
                End If
                Panel9.Visible = False
            End If
        ElseIf TreeView1.SelectedNode.Name.ToLower.IndexOf(".nfo") <> -1 Then
            'loadepisode
            If TabControl3.TabPages(1).Text <> "Screenshot" Then
                TabControl3.TabPages.Insert(1, screenshot_tab)
                TabControl3.Refresh()
            End If
            Panel9.Visible = True
            If workingtvshow.plot.IndexOf("Unable to find folder:") = 0 Then
                TreeView1.SelectedNode.Parent.Parent.ForeColor = Color.Red
                TreeView1.SelectedNode.Parent.Parent.Collapse()
                ExpandSelectedShowToolStripMenuItem.Enabled = True
                ExpandAllToolStripMenuItem.Enabled = True
                CollapseAllToolStripMenuItem.Enabled = True
                CollapseSelectedShowToolStripMenuItem.Enabled = True
                ReloadItemToolStripMenuItem.Enabled = True
                Exit Sub
            Else
                TreeView1.SelectedNode.ForeColor = Color.Black
            End If
            Dim season As String = TreeView1.SelectedNode.Parent.Text.Replace("Season ", "")
            Dim episode As String = TreeView1.SelectedNode.Text.Substring(0, 3)
            episode = episode.TrimEnd(" ")
            If Not IsNumeric(episode) Then
                episode = TreeView1.SelectedNode.Text.Substring(0, 2)
            End If
            If season.ToLower.IndexOf("specials") <> -1 Then season = "00"
            Call loadtvepisode(TreeView1.SelectedNode.Name, season, episode)
            Try
                If workingepisode(workingepisodeindex).plot.IndexOf("xml error") = -1 And workingepisode(workingepisodeindex).plot.IndexOf("missing file") = -1 Then
                    ToolStripMenuItem1.Enabled = True
                    ExpandSelectedShowToolStripMenuItem.Enabled = True
                    ExpandAllToolStripMenuItem.Enabled = True
                    CollapseAllToolStripMenuItem.Enabled = True
                    CollapseSelectedShowToolStripMenuItem.Enabled = True
                    ReloadItemToolStripMenuItem.Enabled = True
                    OpenFolderToolStripMenuItem.Enabled = True
                    If Me.TreeView1.SelectedNode.ForeColor = Color.Red Then
                        For Each Sh In basictvlist
                            If TreeView1.SelectedNode.Name.IndexOf(Sh.fullpath.Substring(0, Sh.fullpath.Length - 10)) <> -1 Then
                                For Each ep In Sh.allepisodes

                                Next

                                Call savetvdata()
                                Exit For
                            End If
                        Next
                        Me.TreeView1.SelectedNode.ForeColor = Color.Black
                        Call reloadtvshow()
                    End If
                Else
                    ToolStripMenuItem1.Enabled = True
                    ExpandSelectedShowToolStripMenuItem.Enabled = True
                    ExpandAllToolStripMenuItem.Enabled = True
                    CollapseAllToolStripMenuItem.Enabled = True
                    CollapseSelectedShowToolStripMenuItem.Enabled = True
                    ReloadItemToolStripMenuItem.Enabled = True
                    OpenFolderToolStripMenuItem.Enabled = True
                    If Me.TreeView1.SelectedNode.ForeColor = Color.Black Then
                        For Each Sh In basictvlist
                            If TreeView1.SelectedNode.Name.ToLower.IndexOf(Sh.fullpath.ToLower.Substring(0, Sh.fullpath.Length - 10)) <> -1 Then
                                For Each ep In Sh.allepisodes
                                    If ep.episodepath = TreeView1.SelectedNode.Name Then
                                        'ep.status = "xml error"
                                        Exit For
                                    End If
                                Next
                                Call savetvdata()
                                Exit For
                            End If
                        Next
                        Me.TreeView1.SelectedNode.ForeColor = Color.Black
                        'Call reloadtvshow()
                        Me.TreeView1.SelectedNode.ForeColor = Color.Red
                    End If
                End If
            Catch
            End Try
        Else
            'seasons
            If TreeView1.SelectedNode.ForeColor = Color.Blue Then
                Button43.Enabled = False
                Dim todo As Boolean = False
                If workingtvshow.path <> TreeView1.SelectedNode.Parent.Parent.Name Then todo = True
                If todo = True Then
                    Call loadtvshow(TreeView1.SelectedNode.Parent.Parent.Name)
                    For tt = 0 To basictvlist.Count
                        If basictvlist(tt).fullpath = TreeView1.SelectedNode.Parent.Parent.Name Then
                            basictvlist(tt).imdbid = workingtvshow.imdbid
                            basictvlist(tt).language = workingtvshow.language
                            basictvlist(tt).locked = workingtvshow.locked
                            basictvlist(tt).rating = workingtvshow.rating
                            basictvlist(tt).sortorder = workingtvshow.sortorder
                            basictvlist(tt).status = workingtvshow.status
                            basictvlist(tt).title = workingtvshow.title
                            basictvlist(tt).titleandyear = workingtvshow.title
                            basictvlist(tt).tvdbid = workingtvshow.tvdbid
                            basictvlist(tt).year = workingtvshow.year
                            basictvlist(tt).episodeactorsource = workingtvshow.episodeactorsource
                            Exit For
                        End If
                    Next
                End If
                Try
                    PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                Catch
                    PictureBox5.Image = Nothing
                End Try
                Try
                    PictureBox4.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg")
                Catch
                    PictureBox4.Image = Nothing
                End Try
                Panel9.Visible = True
                TextBox2.Text = """"
                TextBox20.Text = ""
                TextBox21.Text = ""
                TextBox22.Text = ""
                TextBox23.Text = ""
                TextBox24.Text = ""
                TextBox25.Text = ""
                ComboBox5.Items.Clear()
                ComboBox5.Text = ""

                TextBox17.Text = ""
                TextBox29.Text = ""
                TextBox29.Text = ""
                TextBox17.Text = ""
                For Each item In basictvlist
                    Dim tempstring As String = TreeView1.SelectedNode.Parent.Parent.Name
                    If tempstring = item.fullpath Then
                        For Each ep In item.missingepisodes
                            Dim seasonno As String = ""
                            Dim episodeno As String = ""
                            If ep.episodepath = TreeView1.SelectedNode.Name Then
                                If ep.seasonno.Length = 1 Then
                                    seasonno = "0" & ep.seasonno
                                Else
                                    episodeno = ep.seasonno
                                End If
                                If ep.episodeno.Length = 1 Then
                                    episodeno = "0" & ep.episodeno
                                Else
                                    episodeno = ep.episodeno
                                End If
                                TextBox2.Text = "S" & seasonno & "E" & episodeno & " - " & ep.title
                                TextBox21.Text = "This episode is missing from your collection"
                                TextBox24.Text = ep.playcount
                                Exit For
                            End If
                        Next
                    End If
                Next
            Else

                If TabControl3.TabPages(1).Text = "Screenshot" Then
                    TabControl3.TabPages.RemoveAt(1)
                End If
                Panel9.Visible = False
                ExpandSelectedShowToolStripMenuItem.Enabled = True
                ExpandAllToolStripMenuItem.Enabled = True
                CollapseAllToolStripMenuItem.Enabled = True
                CollapseSelectedShowToolStripMenuItem.Enabled = True
                RenameTVShowsToolStripMenuItem.Enabled = True
                RenameTVShowsToolStripMenuItem.Visible = True
                Try
                    If workingtvshow.path <> TreeView1.SelectedNode.Parent.Name Then
                        loadtvshow(TreeView1.SelectedNode.Parent.Name)
                    End If
                Catch
                End Try
                If workingtvshow.plot.IndexOf("Unable to find folder:") = 0 Then
                    TreeView1.SelectedNode.Parent.ForeColor = Color.Red
                    TreeView1.SelectedNode.Parent.Collapse()
                    Exit Sub
                Else
                    TreeView1.SelectedNode.ForeColor = Color.Black
                End If
                PictureBox5.Image = Nothing
                PictureBox4.Image = Nothing
                'MsgBox("Season")
                Dim season As String = TreeView1.SelectedNode.Text.Replace("Season ", "")
                Dim trueseason As String = season
                If season.IndexOf("0") = 0 Then
                    season = season.Substring(1, 1)
                End If


                Try
                    If trueseason <> "Specials" Then
                        If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn")) Then
                            Try
                                PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn")
                            Catch
                                PictureBox5.Image = Nothing
                            End Try
                        Else
                            Try
                                PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                            Catch
                                PictureBox5.Image = Nothing
                            End Try
                        End If
                    Else
                        trueseason = "00"
                        If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn")) Then
                            Try
                                Dim fi As New FileInfo(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn"))
                                Dim rename2 As String = workingtvshow.path.ToLower.Replace("tvshow.nfo", "season-specials.tbn")
                                fi.MoveTo(rename2)
                            Catch ex As Exception

                            End Try
                        End If
                        If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season-specials.tbn")) Then
                            Try
                                PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "season-specials.tbn")
                            Catch
                                PictureBox5.Image = Nothing
                            End Try
                        Else
                            Try
                                PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                            Catch
                                PictureBox5.Image = Nothing
                            End Try
                        End If
                    End If
                Catch
                End Try
                If workingtvshow.path <> Nothing Then
                    Try
                        PictureBox4.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg")
                    Catch
                        PictureBox4.Image = Nothing
                    End Try
                End If
            End If
            End If

    End Sub

    Private Sub loadtvshow(ByVal path As String)
        Dim tempstring As String = ""
        workingtvshow.path = path
        ComboBox4.Items.Clear()
        ComboBox4.Text = ""
        For i = Panel13.Controls.Count - 1 To 0 Step -1
            Panel13.Controls.RemoveAt(i)
        Next
        tvdbposterlist.Clear()
        PictureBox6.Image = Nothing
        PictureBox4.Image = Nothing
        PictureBox5.Image = Nothing
        TextBox10.Text = ""
        TextBox11.Text = ""
        TextBox9.Text = ""
        TextBox12.Text = ""
        TextBox13.Text = ""
        TextBox14.Text = ""
        TextBox15.Text = ""
        TextBox16.Text = ""
        TextBox18.Text = ""
        TextBox19.Text = ""
        workingtvshow.path = ""
        ComboBox4.Items.Clear()
        ComboBox4.Text = ""
        Dim hg As New IO.DirectoryInfo(path.Replace(IO.Path.GetFileName(path), ""))
        If Not hg.Exists Then
            workingtvshow.episodeactorsource = Nothing
            workingtvshow.episodeguideurl = Nothing
            workingtvshow.fanart = Nothing
            workingtvshow.fanartpath = Nothing
            workingtvshow.genre = Nothing
            workingtvshow.imdbid = Nothing
            workingtvshow.language = Nothing
            workingtvshow.listactors.Clear()
            workingtvshow.mpaa = Nothing
            workingtvshow.plot = Nothing
            workingtvshow.posterpath = Nothing
            workingtvshow.posters.Clear()
            workingtvshow.premiered = Nothing
            workingtvshow.rating = Nothing
            workingtvshow.runtime = Nothing
            workingtvshow.sortorder = Nothing
            workingtvshow.studio = Nothing
            workingtvshow.tvdbid = Nothing
            workingtvshow.year = Nothing
            workingtvshow.locked = True
            TextBox2.Text = "Unable to find folder: " & path.Replace(IO.Path.GetFileName(path), "")
            workingtvshow.title = TextBox2.Text
            TextBox10.Text = ""
            TextBox11.Text = ""
            TextBox9.Text = ""
            TextBox12.Text = ""
            TextBox13.Text = ""
            TextBox14.Text = ""
            TextBox15.Text = ""
            TextBox16.Text = ""
            TextBox18.Text = ""
            TextBox19.Text = "Unable to find folder: " & path.Replace(IO.Path.GetFileName(path), "")
            workingtvshow.plot = TextBox19.Text
            workingtvshow.path = path
            ComboBox4.Items.Clear()
            ComboBox4.Text = ""
            workingtvshow.episodeactorsource = Nothing
            workingtvshow.episodeguideurl = Nothing
            workingtvshow.fanart = Nothing
            workingtvshow.fanartpath = Nothing
            workingtvshow.genre = Nothing
            workingtvshow.imdbid = Nothing
            workingtvshow.language = Nothing
            workingtvshow.listactors.Clear()
            workingtvshow.mpaa = Nothing
            workingtvshow.posterpath = Nothing
            workingtvshow.posters.Clear()
            workingtvshow.premiered = Nothing
            workingtvshow.rating = Nothing
            workingtvshow.runtime = Nothing
            workingtvshow.sortorder = Nothing
            workingtvshow.studio = Nothing
            workingtvshow.tvdbid = Nothing
            workingtvshow.year = Nothing
            PictureBox6.Image = Nothing
            PictureBox4.Image = Nothing
            PictureBox5.Image = Nothing
        Else
            workingtvshow = nfofunction.loadfulltnshownfo(path)


            TextBox2.Text = ""
            TextBox10.Text = ""
            TextBox11.Text = ""
            TextBox9.Text = ""
            TextBox12.Text = ""
            TextBox13.Text = ""
            TextBox14.Text = ""
            TextBox15.Text = ""
            TextBox16.Text = ""
            TextBox18.Text = ""
            TextBox19.Text = ""
            workingtvshow.path = path
            ComboBox4.Items.Clear()
            ComboBox4.Text = ""

            PictureBox6.Image = Nothing
            PictureBox4.Image = Nothing
            PictureBox5.Image = Nothing

            If workingtvshow.title <> Nothing Then TextBox2.Text = workingtvshow.title
            If workingtvshow.premiered <> Nothing Then TextBox10.Text = workingtvshow.premiered
            If workingtvshow.genre <> Nothing Then TextBox11.Text = workingtvshow.genre
            If workingtvshow.tvdbid <> Nothing Then TextBox9.Text = workingtvshow.tvdbid
            If workingtvshow.imdbid <> Nothing Then TextBox12.Text = workingtvshow.imdbid
            If workingtvshow.rating <> Nothing Then TextBox13.Text = workingtvshow.rating
            If workingtvshow.mpaa <> Nothing Then TextBox14.Text = workingtvshow.mpaa
            If workingtvshow.runtime <> Nothing Then TextBox15.Text = workingtvshow.runtime
            If workingtvshow.studio <> Nothing Then TextBox16.Text = workingtvshow.studio
            If workingtvshow.plot <> Nothing Then TextBox19.Text = workingtvshow.plot
            If workingtvshow.locked = 1 Then
                Button60.Text = "Locked"
                Button60.BackColor = Color.Red
            ElseIf workingtvshow.locked = 0 Then
                Button60.Text = "Open"
                Button60.BackColor = Color.LawnGreen
            ElseIf workingtvshow.locked = -1 Then
                Button60.Text = "Open"
                Button60.BackColor = Color.LawnGreen
            ElseIf workingtvshow.locked = 2 Then
                Button60.Text = "Un-Verified"
                Button60.BackColor = Color.Red
            End If

            If workingtvshow.sortorder = Nothing Then workingtvshow.sortorder = userprefs.sortorder
            If workingtvshow.sortorder = "" Then workingtvshow.sortorder = userprefs.sortorder
            If workingtvshow.sortorder = "dvd" Then
                Button47.Text = "DVD"
            ElseIf workingtvshow.sortorder = "default" Then
                Button47.Text = "Default"
            End If
            '0	-	all from tvdb
            '1	-	all from imdb
            '2	-	tv imdb, eps tvdb
            '3	-	tv TVDB, eps IMDB
            If workingtvshow.episodeactorsource = Nothing Then
                tempstring = userprefs.tvdbactorscrape
                If tempstring = "0" Or tempstring = "2" Then
                    workingtvshow.episodeactorsource = "tvdb"
                Else
                    workingtvshow.episodeactorsource = "imdb"
                End If
            End If

            If workingtvshow.episodeactorsource = "" Then
                tempstring = userprefs.tvdbactorscrape
                If tempstring = "0" Or tempstring = "2" Then
                    workingtvshow.episodeactorsource = "tvdb"
                Else
                    workingtvshow.episodeactorsource = "imdb"
                End If
            End If

            If workingtvshow.episodeactorsource = "imdb" Then
                Button46.Text = "IMDB"
            ElseIf workingtvshow.episodeactorsource = "tvdb" Then
                Button46.Text = "TVDB"
            End If

            If workingtvshow.tvshowactorsource = Nothing Then
                tempstring = userprefs.tvdbactorscrape
                If tempstring = "0" Or tempstring = "3" Then
                    workingtvshow.tvshowactorsource = "tvdb"
                Else
                    workingtvshow.tvshowactorsource = "imdb"
                End If
            End If

            If workingtvshow.tvshowactorsource = "" Then
                tempstring = userprefs.tvdbactorscrape
                If tempstring = "0" Or tempstring = "3" Then
                    workingtvshow.tvshowactorsource = "tvdb"
                Else
                    workingtvshow.tvshowactorsource = "imdb"
                End If
            End If

            If workingtvshow.tvshowactorsource = "imdb" Then
                Button45.Text = "IMDB"
            ElseIf workingtvshow.tvshowactorsource = "tvdb" Then
                Button45.Text = "TVDB"
            End If

            For Each actor In workingtvshow.listactors
                ComboBox4.Items.Add(actor.actorname)
            Next
            Try
                ComboBox4.SelectedIndex = 0
                'TextBox18.Text = workingtvshow.listactors(0).actorrole
                'PictureBox6.ImageLocation = workingtvshow.listactors(0).actorthumb
            Catch ex As Exception

            End Try

            If workingtvshow.path <> Nothing Then
                Try
                    If IO.File.Exists(workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")) Then
                        Dim OriginalImage As New Bitmap(workingtvshow.path.Replace("tvshow.nfo", "folder.jpg"))
                        Dim Image2 As New Bitmap(OriginalImage)
                        OriginalImage.Dispose()
                        PictureBox5.Image = Image2
                    End If

                    If IO.File.Exists(workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg")) Then
                        Dim OriginalImage2 As New Bitmap(workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg"))
                        Dim Image22 As New Bitmap(OriginalImage2)
                        OriginalImage2.Dispose()
                        PictureBox4.Image = Image22
                    End If
                Catch
                End Try
            End If






            End If
            Panel9.Visible = False
    End Sub

    Private Sub loadtvepisode(ByVal path As String, ByVal season As String, ByVal episode As String)
        Dim tempstring As String = ""
        TextBox2.Text = """"
        TextBox20.Text = ""
        TextBox21.Text = ""
        TextBox22.Text = ""
        TextBox23.Text = ""
        TextBox24.Text = ""
        TextBox25.Text = ""
        ComboBox5.Items.Clear()
        ComboBox5.Text = ""

        TextBox17.Text = ""
        TextBox29.Text = ""
        TextBox29.Text = IO.Path.GetFileName(path)
        TextBox17.Text = path.Replace(TextBox29.Text, "")
        If Not IO.File.Exists(TreeView1.SelectedNode.Name) Then

            TextBox2.Text = "Unable to find episode: " & path
            TextBox21.Text = "Unable to find episode: " & path
            workingepisode(workingepisodeindex).aired = Nothing
            workingepisode(workingepisodeindex).credits = Nothing
            workingepisode(workingepisodeindex).director = Nothing
            workingepisode(workingepisodeindex).episodeno = Nothing
            workingepisode(workingepisodeindex).episodepath = TreeView1.SelectedNode.Parent.Parent.Name
            workingepisode(workingepisodeindex).fanartpath = Nothing
            workingepisode(workingepisodeindex).filedetails = Nothing
            workingepisode(workingepisodeindex).listactors.Clear()
            workingepisode(workingepisodeindex).playcount = Nothing
            workingepisode(workingepisodeindex).plot = TextBox21.Text
            workingepisode(workingepisodeindex).rating = Nothing
            workingepisode(workingepisodeindex).seasonno = Nothing
            workingepisode(workingepisodeindex).thumb = Nothing
            workingepisode(workingepisodeindex).title = TextBox2.Text
            Panel9.Visible = True
            Exit Sub
        End If

        If workingtvshow.path <> TreeView1.SelectedNode.Parent.Parent.Name Then
            loadtvshow(TreeView1.SelectedNode.Parent.Parent.Name)
        End If


        Dim trueseason As String = season
        Dim trueepisode As String = episode
        If season.IndexOf("0") = 0 Then
            season = season.Substring(1, 1)
        End If
        If episode.IndexOf("0") = 0 Then
            episode = episode.Substring(1, 1)
        End If

        'Try
        workingepisodeindex = -5
        nfofunction.loadfullepisodenfo(path) ', season, episode)
        For f = 0 To workingepisode.Count - 1
            If workingepisode(f).seasonno = season And workingepisode(f).episodeno = episode Then
                workingepisodeindex = f
                Exit For
            End If
        Next

        If workingepisodeindex = -5 And workingepisode.Count > 0 Then
            workingepisodeindex = 0
            If workingepisode(0).plot.IndexOf("xml error") <> -1 Then
                TextBox21.Text = "This episode could not be loaded due to an xml error"
                TextBox2.Text = workingepisode(0).title
                TreeView1.SelectedNode.ForeColor = Color.Red
                Exit Sub
            ElseIf workingepisode(0).plot.IndexOf("missing file") <> -1 Then
                workingepisodeindex = 0
                TextBox21.Text = "Missing file: " & vbCrLf & path
                TextBox2.Text = workingepisode(0).title
                TreeView1.SelectedNode.ForeColor = Color.Red
                Exit Sub
            End If
            'Exit Sub
        End If

        If IsNumeric(workingepisode(workingepisodeindex).playcount) Then
            If Convert.ToInt32(workingepisode(workingepisodeindex).playcount) <= 0 Then
                Button48.Text = "UnWatched"
                Button48.BackColor = Color.Red
            ElseIf Convert.ToInt32(workingepisode(workingepisodeindex).playcount) > 0 Then
                Button48.Text = "Watched"
                Button48.BackColor = Color.Green
            End If
        Else
            workingepisode(workingepisodeindex).playcount = "0"
            Button48.Text = "UnWatched"
            Button48.BackColor = Color.Red
        End If
        TextBox20.Text = workingepisode(workingepisodeindex).rating
        TextBox21.Text = workingepisode(workingepisodeindex).plot
        TextBox22.Text = workingepisode(workingepisodeindex).director
        TextBox23.Text = workingepisode(workingepisodeindex).credits
        TextBox24.Text = workingepisode(workingepisodeindex).aired

        For Each actor In workingepisode(workingepisodeindex).listactors
            ComboBox5.Items.Add(actor.actorname)
        Next
        Try
            ComboBox5.SelectedIndex = 0
        Catch ex As Exception

        End Try
        Try
            tempstring = workingepisode(workingepisodeindex).episodepath.Substring(0, workingepisode(workingepisodeindex).episodepath.Length - 3)
            tempstring = tempstring & "tbn"
            If IO.File.Exists(tempstring) Then
                Try
                    Dim bitmap2 As New Bitmap(tempstring)
                    Dim bitmap3 As New Bitmap(bitmap2)
                    bitmap2.Dispose()
                    PictureBox4.Image = bitmap3
                    PictureBox14.Image = bitmap3
                Catch
                End Try
            Else
                Try
                    PictureBox14.Image = Nothing
                    PictureBox4.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg")
                Catch
                End Try
            End If
            Try
                If trueseason <> 0 Then
                    If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn")) Then
                        PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn")
                    End If
                Else
                    If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season" & trueseason.ToString & ".tbn")) Then
                        Try
                            Dim fi As New FileInfo(workingtvshow.path.Replace("tvshow.nfo", "season00.tbn"))
                            Dim rename2 As String = workingtvshow.path.Replace("tvshow.nfo", "season-specials.tbn")
                            fi.MoveTo(rename2)
                        Catch ex As Exception
                        End Try
                    End If

                    If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "season-specials.tbn")) Then
                        PictureBox5.ImageLocation = workingtvshow.path.ToLower.Replace("tvshow.nfo", "season-specials.tbn")
                    End If

                End If
            Catch
            End Try
            If trueseason <> "Unknown" Then
                TextBox2.Text = "S" & trueseason & "E" & trueepisode & " - " & workingepisode(workingepisodeindex).title
            Else
                TextBox2.Text = workingtvshow.title & ": " & IO.Path.GetFileName(workingepisode(workingepisodeindex).title)
                TextBox21.Text = "This media file has been found by Media Companion" & vbCrLf & "Within this TV Shows Folder" & vbCrLf & vbCrLf & "Season and/or episode numbers could" & vbCrLf & "identified from the filename"
            End If
            Panel9.Visible = True
        Catch
        End Try
    End Sub

    Private Sub ComboBox5_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox5.SelectedIndexChanged

        PictureBox8.Image = Nothing
        PictureBox8.Visible = True
        For Each actor In workingepisode(workingepisodeindex).listactors
            If actor.actorname = ComboBox5.Text Then
                TextBox25.Text = actor.actorrole
                Try
                    Dim temppath As String = workingepisode(workingepisodeindex).episodepath.Replace(IO.Path.GetFileName(workingepisode(workingepisodeindex).episodepath), "")
                    Dim tempname As String = actor.actorname.Replace(" ", "_") & ".tbn"
                    temppath = temppath & ".actors\" & tempname
                    If IO.File.Exists(temppath) Then
                        PictureBox8.ImageLocation = temppath
                        Exit Sub
                    End If
                    If actor.actorthumb <> Nothing Then
                        If actor.actorthumb.IndexOf("http") <> -1 Or IO.File.Exists(actor.actorthumb) Then
                            PictureBox8.ImageLocation = actor.actorthumb
                        Else
                            PictureBox8.ImageLocation = defaultactor
                        End If
                    Else
                        PictureBox8.ImageLocation = defaultactor
                    End If
                    PictureBox8.SizeMode = PictureBoxSizeMode.Zoom
                Catch ex As Exception
                    PictureBox8.ImageLocation = defaultactor
                End Try
            End If
        Next
    End Sub

    Private Sub ComboBox4_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox4.SelectedIndexChanged

        PictureBox6.Image = Nothing

        For Each actor In workingtvshow.listactors
            If actor.actorname = ComboBox4.Text Then
                TextBox18.Text = actor.actorrole
                Try
                    Dim temppath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "")
                    Dim tempname As String = actor.actorname.Replace(" ", "_") & ".tbn"
                    temppath = temppath & ".actors\" & tempname
                    If IO.File.Exists(temppath) Then
                        PictureBox6.ImageLocation = temppath
                        Exit Sub
                    End If
                    If actor.actorthumb <> Nothing Then
                        If actor.actorthumb.IndexOf("http") <> -1 Or IO.File.Exists(actor.actorthumb) Then
                            PictureBox6.ImageLocation = actor.actorthumb
                        Else
                            PictureBox6.ImageLocation = defaultactor
                        End If
                    Else
                        PictureBox6.ImageLocation = defaultactor
                    End If
                    PictureBox6.SizeMode = PictureBoxSizeMode.Zoom
                Catch ex As Exception
                    MsgBox(ex)
                End Try
            End If
        Next
    End Sub

    Private Sub ToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem1.Click
        Dim tempstring As String = ""
        Try
            If TreeView1.SelectedNode.Parent.Text = "" Then
                tempstring = workingtvshow.path
            ElseIf TreeView1.SelectedNode.Parent.Text.ToLower.IndexOf("season") <> -1 Then
                tempstring = workingepisode(workingepisodeindex).episodepath
            ElseIf TreeView1.SelectedNode.Parent.Text.ToLower.IndexOf("specials") <> -1 Then
                tempstring = workingepisode(workingepisodeindex).episodepath
            Else
                Exit Sub
            End If
        Catch
            tempstring = workingtvshow.path
        End Try
        Try
            Dim thePSI As New System.Diagnostics.ProcessStartInfo("notepad")
            thePSI.Arguments = """" & tempstring & """"
            System.Diagnostics.Process.Start(thePSI)
        Catch ex As Exception

        End Try
    End Sub

    Private Sub ExpandAllToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExpandAllToolStripMenuItem.Click
        Dim node As TreeNode
        For Each node In TreeView1.Nodes
            node.ExpandAll()
        Next
    End Sub

    Private Sub CollapseAllToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CollapseAllToolStripMenuItem.Click
        Dim node As TreeNode
        For Each node In TreeView1.Nodes
            node.Collapse()
        Next
    End Sub

    Private Sub ExpandSelectedShowToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExpandSelectedShowToolStripMenuItem.Click
        Dim node As TreeNode
        For Each node In TreeView1.Nodes
            If node.Name = workingtvshow.path Then
                node.ExpandAll()
            End If
        Next
    End Sub

    Private Sub CollapseSelectedShowToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CollapseSelectedShowToolStripMenuItem.Click
        Dim node As TreeNode
        For Each node In TreeView1.Nodes
            If node.Name = workingtvshow.path Then
                node.Collapse()
            End If
        Next
    End Sub

    Private Sub TreeView1_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles TreeView1.DoubleClick
        Dim tempstring2 As String
        Dim tempstring As String = ""
        Dim pathandfilename As String = TreeView1.SelectedNode.Name
        If pathandfilename.IndexOf("tvshow.nfo") <> -1 Then Exit Sub
        If pathandfilename = "" Then Exit Sub
        If pathandfilename <> Nothing Then
            If pathandfilename.ToLower.Substring(pathandfilename.Length - 4, 4) = ".nfo" Then
                pathandfilename = pathandfilename.Substring(0, pathandfilename.Length - 4)
                Dim extensions(100) As String
                Dim extensioncount As Integer
                extensions(1) = ".avi"
                extensions(2) = ".xvid"
                extensions(3) = ".divx"
                extensions(4) = ".img"
                extensions(5) = ".mpg"
                extensions(6) = ".mpeg"
                extensions(7) = ".mov"
                extensions(8) = ".rm"
                extensions(9) = ".3gp"
                extensions(10) = ".m4v"
                extensions(11) = ".wmv"
                extensions(12) = ".asf"
                extensions(13) = ".mp4"
                extensions(14) = ".mkv"
                extensions(15) = ".nrg"
                extensions(16) = ".iso"
                extensions(17) = ".rmvb"
                extensions(18) = ".ogm"
                extensions(19) = ".bin"
                extensions(20) = ".ts"
                extensions(21) = ".vob"
                extensions(22) = ".m2ts"
                extensions(23) = ".rar"
                extensions(24) = ".IFO"
                extensions(25) = ".dvr-ms"
                extensioncount = 25
                Dim exists As Boolean = False
                For f = 1 To extensioncount
                    tempstring2 = pathandfilename & extensions(f)

                    If IO.File.Exists(tempstring2) Then
                        exists = True
                        tempstring = applicationpath & "\settings\temp.m3u"
                        Dim file As IO.StreamWriter = IO.File.CreateText(tempstring)
                        file.WriteLine(tempstring2)
                        file.Close()

                        If userprefs.videomode = 1 Then Call videomode1(tempstring)
                        If userprefs.videomode = 2 Then Call videomode2(tempstring)

                        If userprefs.videomode = 3 Then
                            userprefs.videomode = 2
                            Call videomode2(tempstring)
                        End If

                        If userprefs.videomode >= 4 Then
                            If userprefs.selectedvideoplayer <> Nothing Then
                                Call videomode4(tempstring)
                            Else
                                Call videomode1(tempstring)
                            End If
                        End If
                        Exit For
                    End If
                Next
                If exists = False Then
                    MsgBox("Could not find file: """ & pathandfilename & """ with any supported extension")
                End If
            End If
        End If

    End Sub

    Private Sub TreeView1_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles TreeView1.MouseUp
        If e.Button = MouseButtons.Right Then
            Dim n As TreeNode = Me.TreeView1.GetNodeAt(e.X, e.Y)
            If Not n Is Nothing Then
                Me.TreeView1.SelectedNode = n
            End If
        End If
    End Sub

    Private Sub ReloadItemToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ReloadItemToolStripMenuItem.Click
        Call reloadtvshow(True)
    End Sub

    Private Sub reloadtvshow(Optional ByVal force As Boolean = False)
        On Error Resume Next
        If TreeView1.SelectedNode Is Nothing Then Exit Sub
        If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Then
            'load tvshow.nfo
            If workingtvshow.path <> TreeView1.SelectedNode.Name Or force = True Then
                Call loadtvshow(TreeView1.SelectedNode.Name)
                If workingtvshow.plot.IndexOf("xml error") = -1 Then
                    If Me.TreeView1.SelectedNode.ForeColor = Color.Red Then
                        Me.TreeView1.SelectedNode.ForeColor = Color.Black
                    End If
                    Call savetvdata()
                Else
                    If Me.TreeView1.SelectedNode.ForeColor = Color.Black Then
                        Me.TreeView1.SelectedNode.ForeColor = Color.Red
                    End If
                    Call savetvdata()
                End If
            Else
                If workingtvshow.path <> Nothing Then
                    TextBox2.Text = workingtvshow.title
                    PictureBox5.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                    PictureBox4.ImageLocation = workingtvshow.path.Replace("tvshow.nfo", "fanart.jpg")
                End If
                Panel9.Visible = False
            End If
        ElseIf TreeView1.SelectedNode.Name.ToLower.IndexOf(".nfo") <> -1 Then
            'loadepisode
            Dim season As String = TreeView1.SelectedNode.Parent.Text.Replace("Season ", "")
            Dim episode As String = TreeView1.SelectedNode.Text.Substring(0, 2)
            Call loadtvepisode(TreeView1.SelectedNode.Name, season, episode)

            If workingepisode(workingepisodeindex).plot.IndexOf("xml error") = -1 Then
                If Me.TreeView1.SelectedNode.ForeColor = Color.Red Then
                    Me.TreeView1.SelectedNode.ForeColor = Color.Black
                End If
                Call savetvdata()
            Else
                If Me.TreeView1.SelectedNode.ForeColor = Color.Black Then
                    Me.TreeView1.SelectedNode.ForeColor = Color.Red
                End If
            End If


        Else
            'MsgBox("Season")
        End If
    End Sub

    Private Sub TabControl3_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabControl3.SelectedIndexChanged
        Dim tab As String = TabControl3.SelectedTab.Text
        Dim tempstring As String = ""
        If tab <> "Main Browser" And tab <> "Folders" And tab <> "TV Preferences" Then

            If workingtvshow.path = "" And tvfolders.Count = 0 Then
                Me.TabControl3.SelectedIndex = tv_CurrentTabIndex
                MsgBox("There are no TV Shows in your list to work on" & vbCrLf & "Set the Preferences as you want them" & vbCrLf & "Using the Preferences Tab, then" & vbCrLf & "add your TV Folders using the Folders Tab" & vbCrLf & "Once the tvshow has been scraped then" & vbCrLf & "Use the tab, ""Search for new episodes""")
                If tab <> "TV Preferences" Then Exit Sub
            ElseIf workingtvshow.path = "" And tvfolders.Count > 0 And tab <> "Search for new Episodes" And tab <> "TV Preferences" Then
                Me.TabControl3.SelectedIndex = tv_CurrentTabIndex
                If basictvlist.Count > 0 Then
                    MsgBox("No TV Show is selected")
                    Exit Sub
                Else
                    MsgBox("There are no TV Shows in your list to work on")
                    Exit Sub
                End If
            End If
        ElseIf tab = "TV Preferences" Then
            Call setuptvpreferences()
            Exit Sub
        ElseIf tab = "Folders" Then
            tv_CurrentTabIndex = TabControl3.SelectedIndex
            TabControl3.SelectedIndex = tv_CurrentTabIndex
            Call setuptvfolders()
        Else
            tv_CurrentTabIndex = 0
            Exit Sub
        End If
        If tab = "TV Show Selector" Then
            If ListBox3.Items.Count = 0 Then
                tv_CurrentTabIndex = TabControl3.SelectedIndex
                Call populate_changetvshow()
            End If
        ElseIf tab = "Search for new Episodes" Then
            TabControl3.SelectedIndex = tv_CurrentTabIndex
            Call startsearchforepisodes()
        ElseIf tab = "Cancel Episode Search" Then
            TabControl3.SelectedIndex = tv_CurrentTabIndex
            bckgroundscanepisodes.CancelAsync()
        ElseIf tab = "Main Browser" Then
            tv_CurrentTabIndex = 0
        ElseIf tab = "Posters" Then
            tv_CurrentTabIndex = TabControl3.SelectedIndex
            Call setup_tvposters()
        ElseIf tab = "" Then
            If workingtvshow.imdbid <> Nothing Then
                If workingtvshow.imdbid = "" Then
                    MsgBox("No IMDB ID is available for this TV Show")
                End If
                If workingtvshow.imdbid.IndexOf("tt") <> 0 Then
                    MsgBox("This shows IMDB ID cannot be recognised")
                End If

                If userprefs.externalbrowser = True Then
                    Me.TabControl3.SelectedIndex = tv_CurrentTabIndex
                    tempstring = "http://www.imdb.com/title/" & workingtvshow.imdbid & "/"
                    Process.Start(tempstring)
                Else
                    tv_CurrentTabIndex = TabControl3.SelectedIndex
                    Dim url As String
                    url = "http://www.imdb.com/title/" & workingtvshow.imdbid & "/"
                    Try
                        If WebBrowser3.Url.AbsoluteUri.ToLower.ToString <> url Then
                            WebBrowser3.Stop()
                            WebBrowser3.ScriptErrorsSuppressed = True

                            WebBrowser3.Navigate(url)
                            WebBrowser3.Refresh()
                        End If
                    Catch
                        WebBrowser3.Stop()
                        WebBrowser3.ScriptErrorsSuppressed = True

                        WebBrowser3.Navigate(url)
                        WebBrowser3.Refresh()

                    End Try
                End If
            Else
                MsgBox("No IMDB ID is available for this TV Show")
                TabControl3.SelectedIndex = tv_CurrentTabIndex
            End If

        ElseIf tab = "TVDB" Then
            Try
                If IsNumeric(workingtvshow.tvdbid) Then
                    If userprefs.externalbrowser = True Then
                        Me.TabControl3.SelectedIndex = tv_CurrentTabIndex
                        tempstring = "http://thetvdb.com/?tab=series&id=" & workingtvshow.tvdbid & "&lid=7"
                        Process.Start(tempstring)
                    Else
                        tv_CurrentTabIndex = TabControl3.SelectedIndex
                        Dim url As String
                        url = "http://thetvdb.com/?tab=series&id=" & workingtvshow.tvdbid & "&lid=7"
                        Try
                            If WebBrowser4.Url.AbsoluteUri.ToLower.ToString <> url And WebBrowser4.Url.AbsoluteUri.ToLower.ToString.IndexOf("seriesid=" & workingtvshow.tvdbid) = -1 Then
                                WebBrowser4.Stop()
                                WebBrowser4.ScriptErrorsSuppressed = True

                                WebBrowser4.Navigate(url)
                                WebBrowser4.Refresh()
                            End If
                        Catch
                            WebBrowser4.Stop()
                            WebBrowser4.ScriptErrorsSuppressed = True

                            WebBrowser4.Navigate(url)
                            WebBrowser4.Refresh()

                        End Try
                    End If
                End If
            Catch
            End Try
        ElseIf tab.ToLower = "fanart" Then
            If Panel13.Controls.Count = 0 Then
                Call loadtvfanart()
            End If
            tv_CurrentTabIndex = TabControl3.SelectedIndex
        ElseIf tab.ToLower = "screenshot" Then
            tv_CurrentTabIndex = TabControl3.SelectedIndex
            If IO.File.Exists(workingepisode(0).episodepath.Replace(IO.Path.GetExtension(workingepisode(0).episodepath), ".tbn")) Then
                PictureBox14.ImageLocation = workingepisode(0).episodepath.Replace(IO.Path.GetExtension(workingepisode(0).episodepath), ".tbn")
            Else
                PictureBox14.Image = Nothing
            End If
            If TextBox35.Text = "" Then
                TextBox35.Text = "10"
            End If
        ElseIf tab.ToLower = "folders" Then
            tv_CurrentTabIndex = TabControl3.SelectedIndex
            Call setuptvfolders()

        End If

    End Sub

    Private Sub populate_changetvshow()
        'messbox = New message_box("Please wait,", "", "Getting possible TV Shows from TVDB")
        'System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        'messbox.Show()
        'Me.Refresh()
        'messbox.Refresh()
        Try
            If languagelist.Count = 0 Then
                Dim xmlfile As String
                Dim wrGETURL As WebRequest
                Dim mirrorsurl As String = "http://thetvdb.com/api/6E82FED600783400/languages.xml"
                wrGETURL = WebRequest.Create(mirrorsurl)
                Dim myProxy As New WebProxy("myproxy", 80)
                myProxy.BypassProxyOnLocal = True
                Dim objStream As Stream
                objStream = wrGETURL.GetResponse.GetResponseStream()
                Dim objReader As New StreamReader(objStream)
                xmlfile = objReader.ReadToEnd
                objReader.Close()
                objStream.Close()
                Dim showlist As New XmlDocument
                'Try
                showlist.LoadXml(xmlfile)
                Dim thisresult As XmlNode = Nothing
                For Each thisresult In showlist("Languages")
                    Select Case thisresult.Name
                        Case "Language"
                            Dim results As XmlNode = Nothing
                            Dim lan As New tvshowlanguages
                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "name"
                                        lan.language = results.InnerText
                                    Case "abbreviation"
                                        lan.abbreviation = results.InnerText
                                End Select
                            Next
                            languagelist.Add(lan)
                    End Select
                Next
                For Each lan In languagelist
                    ListBox1.Items.Add(lan.language)
                Next
            End If
            TextBox26.Text = filefunction.getlastfolder(workingtvshow.path)
            PictureBox9.Image = Nothing
            If workingtvshow.language <> Nothing Then
                For Each language In languagelist
                    If language.abbreviation = workingtvshow.language Then
                        ListBox1.SelectedItem = language.language
                        Exit For
                    End If
                Next
            Else
                ListBox1.SelectedItem = userprefs.tvdblanguage
            End If
            Label55.Text = "Default Language for TV Shows is :- " & userprefs.tvdblanguage
            Call loadshowlist()
            Try
                If userprefs.sortorder <> Nothing Then
                    If userprefs.sortorder = "dvd" Then
                        RadioButton14.Checked = True
                    Else
                        RadioButton15.Checked = True
                    End If
                Else
                    RadioButton15.Checked = True
                End If
            Catch
                RadioButton15.Checked = True
            End Try

            Select Case userprefs.seasonall
                Case "none"
                    RadioButton18.Checked = True
                Case "poster"
                    RadioButton17.Checked = True
                Case "wide"
                    RadioButton16.Checked = True
            End Select
            'everything from TVDB
            'Everything from IMDB
            'TV show Nfo From IMDB, Episode nfo from TVDB
            'TV show Nfo From TVDB, Episode nfo from IMDB
            If userprefs.tvdbactorscrape = 0 Then
                RadioButton13.Checked = True
                RadioButton11.Checked = True
            End If
            If userprefs.tvdbactorscrape = 1 Then
                RadioButton12.Checked = True
                RadioButton10.Checked = True
            End If
            If userprefs.tvdbactorscrape = 2 Then
                RadioButton12.Checked = True
                RadioButton11.Checked = True
            End If
            If userprefs.tvdbactorscrape = 3 Then
                RadioButton13.Checked = True
                RadioButton10.Checked = True
            End If
            If userprefs.postertype = "poster" Then
                RadioButton9.Checked = True
            Else
                RadioButton8.Checked = True
            End If
            If userprefs.tvfanart = True Then
                CheckBox4.CheckState = CheckState.Checked
            Else
                CheckBox4.CheckState = CheckState.Unchecked
            End If

            If userprefs.tvposter = True Then
                CheckBox5.CheckState = CheckState.Checked
            Else
                CheckBox5.CheckState = CheckState.Unchecked
            End If

            If userprefs.downloadtvseasonthumbs = True Then
                CheckBox3.CheckState = CheckState.Checked
            Else
                CheckBox3.CheckState = CheckState.Unchecked
            End If
            If userprefs.tvshow_useXBMC_Scraper = True Then
                GroupBox2.Enabled = False
                GroupBox3.Enabled = False
                GroupBox5.Enabled = False
            Else
                GroupBox2.Enabled = True
                GroupBox3.Enabled = True
                GroupBox5.Enabled = True
            End If
        Catch ex As WebException
            MsgBox("There seems to be a problem with the tvdb website, please try again later")
            tv_CurrentTabIndex = 0
            TabControl3.SelectedIndex = 0
        End Try

        'messbox.Close()
    End Sub

    Private Sub loadshowlist()
        If TextBox26.Text <> "" Then

            messbox = New message_box("Please wait,", "", "Getting possible TV Shows from TVDB")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            Me.Refresh()
            messbox.Refresh()

            'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
            Dim tvdbstuff As New TVDBScraper
            Dim mirror As List(Of String) = tvdbstuff.getmirrors()
            Dim showslist As String = tvdbstuff.findshows(TextBox26.Text, mirror(0))

            listofshows.Clear()
            If showslist = "error" Then
                messbox.Close()
                MsgBox("TVDB seems to have an error with the xml for this search")
                Exit Sub
            End If
            If showslist <> "none" Then
                Dim showlist As New XmlDocument
                showlist.LoadXml(showslist)
                Dim thisresult As XmlNode = Nothing
                For Each thisresult In showlist("allshows")
                    Select Case thisresult.Name
                        Case "show"
                            Dim results As XmlNode = Nothing
                            Dim lan As New possibleshowlist
                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "showid"
                                        lan.showid = results.InnerText
                                    Case "showtitle"
                                        lan.showtitle = results.InnerText
                                    Case "showbanner"
                                        lan.showbanner = results.InnerText
                                End Select
                            Next
                            Dim exists As Boolean = False
                            For Each item In listofshows
                                If item.showid = lan.showid Then
                                    exists = True
                                    Exit For
                                End If
                            Next
                            If exists = False Then
                                listofshows.Add(lan)
                            End If
                    End Select
                Next
            Else
                Dim lan As New possibleshowlist
                lan.showid = "none"
                lan.showtitle = "TVDB Search Returned Zero Results"
                lan.showbanner = Nothing
                listofshows.Add(lan)
            End If
            ListBox3.Items.Clear()
            For Each item In listofshows
                ListBox3.Items.Add(item.showtitle)
            Next
            Try
                ListBox3.SelectedIndex = 0
                If listofshows(0).showbanner <> Nothing Then
                    Try
                        PictureBox9.ImageLocation = listofshows(0).showbanner
                    Catch ex As Exception
                        PictureBox9.Image = Nothing
                    End Try
                End If
            Catch ex As Exception

            End Try
            Call checklanguage()
            messbox.Close()
        Else
            MsgBox("Please Enter a Search Term")
        End If
    End Sub

    Private Sub Button30_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button30.Click
        Call loadshowlist()
    End Sub

    Private Sub ListBox3_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ListBox3.SelectedIndexChanged
        PictureBox9.Image = Nothing
        Try
            If listofshows(ListBox3.SelectedIndex).showbanner <> Nothing Then
                Try
                    PictureBox9.ImageLocation = listofshows(ListBox3.SelectedIndex).showbanner
                Catch ex As Exception
                    PictureBox9.Image = Nothing
                End Try
            Else
                PictureBox9.Image = Nothing
            End If
        Catch ex As Exception

        End Try
        Call checklanguage()
    End Sub

    Private Sub checklanguage()
        Try
            Dim languagecode As String = languagelist(ListBox1.SelectedIndex).abbreviation
            Dim url As String = "http://thetvdb.com/api/6E82FED600783400/series/" & listofshows(ListBox3.SelectedIndex).showid & "/" & languagecode & ".xml"
            Dim websource(10000)


            Dim urllinecount As Integer = 0
            Try
                Dim wrGETURL As WebRequest
                wrGETURL = WebRequest.Create(url)
                Dim myProxy As New WebProxy("myproxy", 80)
                myProxy.BypassProxyOnLocal = True
                Dim objStream As Stream
                objStream = wrGETURL.GetResponse.GetResponseStream()
                Dim objReader As New StreamReader(objStream)
                Dim sLine As String = ""
                urllinecount = 0

                Do While Not sLine Is Nothing
                    urllinecount += 1
                    sLine = objReader.ReadLine
                    If Not sLine Is Nothing Then
                        websource(urllinecount) = sLine
                    End If
                Loop
                objReader.Close()
                objStream.Close()
                urllinecount -= 1

            Catch ex As Exception
                'MsgBox(ex.ToString)
            End Try
            For f = 1 To urllinecount
                If websource(f).IndexOf("<Language>") <> -1 Then
                    websource(f) = websource(f).Replace("<Language>", "")
                    websource(f) = websource(f).Replace("</Language>", "")
                    websource(f) = websource(f).Replace("  ", "")
                    If websource(f).ToLower <> languagecode Then
                        Label55.BackColor = Color.Red
                        Label55.Text = ListBox3.SelectedItem.ToString & " is not available in " & ListBox1.SelectedItem.ToString & ", Please try another language"
                    Else
                        Label55.BackColor = Color.Transparent
                        Label55.Text = ListBox3.SelectedItem.ToString & " is available in " & ListBox1.SelectedItem.ToString
                    End If
                End If
            Next
        Catch
        End Try
    End Sub

    Private Sub ListBox1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox1.SelectedIndexChanged
        Call checklanguage()
    End Sub

    Private Sub RebuildShowsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RebuildShowsToolStripMenuItem.Click
        Dim messbox As message_box = New message_box("Please wait,", "", "Rebuilding TV DB")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Call rebuildtvshows()
        messbox.Close()
    End Sub

    Private Sub ReloadShowCacheToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ReloadShowCacheToolStripMenuItem.Click
        If IO.File.Exists(workingprofile.tvcache) Then
            Call loadtvcache()
        Else
            MsgBox("No Cache exists to load")
        End If
    End Sub

    Private Sub Button29_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button29.Click
        If listofshows.Count = 1 And listofshows(0).showtitle = "TVDB Search Returned Zero Results" Then
            MsgBox("No show is selected")
            Exit Sub
        End If
        Dim tempstring As String = ""
        If Label55.Text.IndexOf("is not available in") <> -1 Then
            MsgBox("Please select a language that is available for this show")
            Exit Sub
        End If
        Dim messbox As message_box = New message_box("The Selected TV Show is being Scraped", "", "Please Wait")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()

        If userprefs.tvshow_useXBMC_Scraper = True Then

            Dim TVShowNFOContent As String = XBMCScrape_TVShow_General_Info("metadata.tvdb.com", listofshows(ListBox3.SelectedIndex).showid, languagelist(ListBox1.SelectedIndex).abbreviation, workingtvshow.path)
            If TVShowNFOContent <> "error" Then CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            Call loadtvshow(workingtvshow.path)
            messbox.Close()
            TabControl3.SelectedIndex = 0

        Else
            'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
            Dim tvdbstuff As New TVDBScraper
            Dim tvshowxmlstring As String = tvdbstuff.getshow(listofshows(ListBox3.SelectedIndex).showid, languagelist(ListBox1.SelectedIndex).abbreviation)
            If tvshowxmlstring = "!!!Error!!!" Then
                MsgBox("Error scraping show")
                Exit Sub
            End If

            Dim posterurl As String
            Dim bannerurl As String
            Dim fanarturl As String
            workingtvshow.title = Nothing
            workingtvshow.year = Nothing
            workingtvshow.genre = Nothing
            workingtvshow.tvdbid = Nothing
            workingtvshow.imdbid = Nothing
            workingtvshow.rating = Nothing
            workingtvshow.mpaa = Nothing
            workingtvshow.runtime = Nothing
            workingtvshow.studio = Nothing
            workingtvshow.language = Nothing
            workingtvshow.plot = Nothing
            workingtvshow.sortorder = Nothing
            workingtvshow.premiered = Nothing
            workingtvshow.posterpath = Nothing
            workingtvshow.listactors.Clear()
            workingtvshow.fanartpath = Nothing
            workingtvshow.episodeguideurl = Nothing
            workingtvshow.episodeactorsource = Nothing
            workingtvshow.locked = 0

            workingtvshow.title = listofshows(ListBox3.SelectedIndex).showtitle
            workingtvshow.tvdbid = listofshows(ListBox3.SelectedIndex).showid
            workingtvshow.language = languagelist(ListBox1.SelectedIndex).abbreviation


            If RadioButton11.Checked = True Then
                workingtvshow.episodeactorsource = "tvdb"
            Else
                workingtvshow.episodeactorsource = "imdb"
            End If

            If RadioButton15.Checked = True Then
                workingtvshow.sortorder = "default"
            Else
                workingtvshow.sortorder = "dvd"
            End If

            Dim showlist As New XmlDocument
            showlist.LoadXml(tvshowxmlstring)
            Dim thisresult As XmlNode = Nothing
            For Each thisresult In showlist("fulltvshow")
                Select Case thisresult.Name
                    Case "mpaa"
                        workingtvshow.mpaa = thisresult.InnerText
                    Case "premiered"
                        workingtvshow.premiered = thisresult.InnerText
                        workingtvshow.year = thisresult.InnerText.Substring(0, 4)
                    Case "genre"
                        Dim newstring As String
                        newstring = thisresult.InnerText
                        newstring = newstring.TrimEnd("|")
                        newstring = newstring.TrimStart("|")
                        newstring = newstring.Replace("|", " / ")
                        workingtvshow.genre = newstring
                    Case "imdbid"
                        workingtvshow.imdbid = thisresult.InnerText
                    Case "studio"
                        workingtvshow.studio = thisresult.InnerText
                    Case "plot"
                        workingtvshow.plot = thisresult.InnerText
                    Case "rating"
                        workingtvshow.rating = thisresult.InnerText
                    Case "runtime"
                        workingtvshow.runtime = thisresult.InnerText
                    Case "banner"
                        bannerurl = thisresult.InnerText
                    Case "fanart"
                        fanarturl = thisresult.InnerText
                    Case "poster"
                        posterurl = thisresult.InnerText
                    Case "episodeguideurl"
                        workingtvshow.episodeguideurl = thisresult.InnerText

                    Case "actor"
                        If RadioButton13.Checked = True Or workingtvshow.imdbid = Nothing Then
                            Dim id As String = ""
                            Dim acts As New MovieActors
                            Dim results As XmlNode = Nothing
                            Dim lan As New possibleshowlist
                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "name"
                                        acts.actorname = results.InnerText
                                    Case "role"
                                        acts.actorrole = results.InnerText
                                    Case "thumb"
                                        acts.actorthumb = results.InnerText
                                    Case "actorid"
                                        id = results.InnerText
                                End Select
                            Next

                            If acts.actorthumb <> Nothing Then
                                If userprefs.actorsave = True And id <> "" Then
                                    Dim workingpath As String = ""
                                    Dim networkpath As String = Form1.userprefs.actorsavepath
                                    Try
                                        tempstring = networkpath & "\" & id.Substring(id.Length - 2, 2)
                                        Dim hg As New IO.DirectoryInfo(tempstring)
                                        If Not hg.Exists Then
                                            IO.Directory.CreateDirectory(tempstring)
                                        End If
                                        workingpath = networkpath & "\" & id.Substring(id.Length - 2, 2) & "\tv" & id & ".jpg"
                                        If Not IO.File.Exists(workingpath) Then
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = acts.actorthumb
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While

                                            Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                            fstrm.Write(buffer, 0, bytesRead)
                                            contents.Close()
                                            fstrm.Close()
                                        End If
                                        acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2))
                                        If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                            acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2) & "/tv" & id & ".jpg")
                                        Else
                                            acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2) & "\tv" & id & ".jpg")
                                        End If

                                    Catch
                                    End Try
                                End If
                            End If
                            Dim exists As Boolean = False
                            For Each actors In workingtvshow.listactors
                                If actors.actorname = acts.actorname And actors.actorrole = acts.actorrole Then
                                    exists = True
                                End If
                            Next
                            If exists = False Then
                                workingtvshow.listactors.Add(acts)
                            End If
                        End If
                End Select
            Next

            If RadioButton12.Checked = True And workingtvshow.imdbid <> Nothing Then
                '                    Dim imdbscraper As New imdb.Classimdbscraper
                Dim imdbscraper As New Classimdb
                Dim actorlist As String
                Dim actorstring As New XmlDocument
                actorlist = imdbscraper.getimdbactors(userprefs.imdbmirror, workingtvshow.imdbid)
                Try
                    actorstring.LoadXml(actorlist)
                    thisresult = Nothing
                    For Each thisresult In actorstring("actorlist")
                        Select Case thisresult.Name
                            Case "actor"
                                Dim newactor As New MovieActors
                                Dim detail As XmlNode = Nothing
                                For Each detail In thisresult.ChildNodes
                                    Select Case detail.Name
                                        Case "name"
                                            newactor.actorname = detail.InnerText
                                        Case "role"
                                            newactor.actorrole = detail.InnerText
                                        Case "thumb"
                                            newactor.actorthumb = detail.InnerText
                                        Case "actorid"
                                            If newactor.actorthumb <> Nothing Then
                                                If userprefs.actorsave = True And detail.InnerText <> "" Then
                                                    Dim workingpath As String = ""
                                                    Dim networkpath As String = Form1.userprefs.actorsavepath
                                                    Try
                                                        tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                        Dim hg As New IO.DirectoryInfo(tempstring)
                                                        If Not hg.Exists Then
                                                            IO.Directory.CreateDirectory(tempstring)
                                                        End If
                                                        workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                        If Not IO.File.Exists(workingpath) Then
                                                            Dim buffer(4000000) As Byte
                                                            Dim size As Integer = 0
                                                            Dim bytesRead As Integer = 0
                                                            Dim thumburl As String = newactor.actorthumb
                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                            Dim contents As Stream = res.GetResponseStream()
                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                            While bytesToRead > 0
                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                If size = 0 Then Exit While
                                                                bytesToRead -= size
                                                                bytesRead += size
                                                            End While

                                                            Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                            fstrm.Write(buffer, 0, bytesRead)
                                                            contents.Close()
                                                            fstrm.Close()
                                                        End If
                                                        newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                        If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                            newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                        Else
                                                            newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                        End If
                                                    Catch
                                                    End Try
                                                End If
                                            End If
                                    End Select
                                Next
                                workingtvshow.listactors.Add(newactor)
                        End Select
                    Next
                    scraperlog = scraperlog & "Actors scraped OK"
                    While workingtvshow.listactors.Count > userprefs.maxactors
                        workingtvshow.listactors.RemoveAt(workingtvshow.listactors.Count - 1)
                    End While
                Catch ex As Exception

                End Try
            End If

            Dim artlist As New List(Of tvbanners)
            Dim artdone As Boolean = False
            If CheckBox3.CheckState = CheckState.Checked Or CheckBox4.CheckState = CheckState.Checked Or CheckBox5.CheckState = CheckState.Checked Then
                Dim thumblist As String = tvdbstuff.getposterlist(listofshows(ListBox3.SelectedIndex).showid)
                showlist.LoadXml(thumblist)
                artdone = True
                thisresult = Nothing
                'CheckBox3 = seasons
                'CheckBox4 = fanart
                'CheckBox5 = poster
                For Each thisresult In showlist("banners")
                    Select Case thisresult.Name
                        Case "banner"
                            Dim individualposter As New tvbanners
                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "url"
                                        individualposter.url = results.InnerText
                                    Case "bannertype"
                                        individualposter.bannertype = results.InnerText
                                    Case "resolution"
                                        individualposter.resolution = results.InnerText
                                    Case "language"
                                        individualposter.language = results.InnerText
                                    Case "season"
                                        individualposter.season = results.InnerText
                                End Select
                            Next
                            artlist.Add(individualposter)
                    End Select
                Next
            End If

            If CheckBox3.CheckState = CheckState.Checked Then
                For f = 0 To 1000
                    Dim seasonposter As String = ""
                    If CheckBox7.CheckState = CheckState.Checked Then
                        For Each Image In artlist
                            If Image.season = f.ToString And Image.language = languagelist(ListBox1.SelectedIndex).abbreviation Then
                                seasonposter = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonposter = "" Then
                        For Each Image In artlist
                            If Image.season = f.ToString And Image.language = "en" Then
                                seasonposter = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonposter = "" Then
                        For Each Image In artlist
                            If Image.season = f.ToString Then
                                seasonposter = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonposter <> "" Then
                        If f < 10 Then
                            tempstring = "0" & f.ToString
                        Else
                            tempstring = f.ToString
                        End If

                        Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season" & tempstring & ".tbn")
                        If tempstring = "00" Then
                            seasonpath = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season-specials.tbn")
                        End If
                        If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                            Try
                                Dim buffer(4000000) As Byte
                                Dim size As Integer = 0
                                Dim bytesRead As Integer = 0
                                Dim thumburl As String = seasonposter
                                Dim req As HttpWebRequest = req.Create(thumburl)
                                Dim res As HttpWebResponse = req.GetResponse()
                                Dim contents As Stream = res.GetResponseStream()
                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                While bytesToRead > 0
                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                    If size = 0 Then Exit While
                                    bytesToRead -= size
                                    bytesRead += size
                                End While
                                Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                fstrm.Write(buffer, 0, bytesRead)
                                contents.Close()
                                fstrm.Close()
                            Catch ex As WebException
                                'MsgBox("Error Downloading season poster from TVDB")
                            End Try
                        End If
                    End If
                Next
            End If



            If CheckBox4.CheckState = CheckState.Checked Then
                Dim fanartposter As String
                If CheckBox7.CheckState = CheckState.Checked Then
                    For Each Image In artlist
                        If Image.language = languagelist(ListBox1.SelectedIndex).abbreviation And Image.bannertype = "fanart" Then
                            fanartposter = Image.url
                            Exit For
                        End If
                    Next
                End If
                If fanartposter = "" Then
                    For Each Image In artlist
                        If Image.language = "en" And Image.bannertype = "fanart" Then
                            fanartposter = Image.url
                            Exit For
                        End If
                    Next
                End If
                If fanartposter = "" Then
                    For Each Image In artlist
                        If Image.bannertype = "fanart" Then
                            fanartposter = Image.url
                            Exit For
                        End If
                    Next
                End If
                If fanartposter <> "" Then

                    Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "fanart.jpg")
                    If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                        Try
                            Dim buffer(4000000) As Byte
                            Dim size As Integer = 0
                            Dim bytesRead As Integer = 0

                            Dim thumburl As String = fanartposter
                            Dim req As HttpWebRequest = req.Create(thumburl)
                            Dim res As HttpWebResponse = req.GetResponse()
                            Dim contents As Stream = res.GetResponseStream()
                            Dim bytesToRead As Integer = CInt(buffer.Length)
                            Dim bmp As New Bitmap(contents)



                            While bytesToRead > 0
                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                If size = 0 Then Exit While
                                bytesToRead -= size
                                bytesRead += size
                            End While


                            Try
                                If Form1.userprefs.resizefanart = 1 Then
                                    bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                    scraperlog = scraperlog & "Fanart not resized" & vbCrLf
                                ElseIf Form1.userprefs.resizefanart = 2 Then
                                    If bmp.Width > 1280 Or bmp.Height > 720 Then
                                        Dim bm_source As New Bitmap(bmp)
                                        Dim bm_dest As New Bitmap(1280, 720)
                                        Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                        gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                        bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                        scraperlog = scraperlog & "Farart Resized to 1280x720" & vbCrLf
                                    Else
                                        scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                        bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                    End If
                                ElseIf Form1.userprefs.resizefanart = 3 Then
                                    If bmp.Width > 960 Or bmp.Height > 540 Then
                                        Dim bm_source As New Bitmap(bmp)
                                        Dim bm_dest As New Bitmap(960, 540)
                                        Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                        gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                        bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                        scraperlog = scraperlog & "Farart Resized to 960x540" & vbCrLf
                                    Else
                                        scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                        bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                    End If

                                End If
                            Catch
                            End Try
                        Catch ex As WebException
                            'MsgBox("Error Downloading season poster from TVDB")
                        End Try
                    End If
                End If
            End If

            Dim seasonallpath As String = ""
            If CheckBox5.CheckState = CheckState.Checked Then
                Dim posterurlpath As String = ""
                If RadioButton9.Checked = True Then 'poster
                    If CheckBox7.CheckState = CheckState.Checked Then
                        For Each Image In artlist
                            If Image.language = languagelist(ListBox1.SelectedIndex).abbreviation And Image.bannertype = "poster" Then
                                posterurl = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If posterurlpath = "" Then
                        For Each Image In artlist
                            If Image.language = "en" And Image.bannertype = "poster" Then
                                posterurlpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If posterurlpath = "" Then
                        For Each Image In artlist
                            If Image.bannertype = "poster" Then
                                posterurlpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If posterurlpath <> "" And RadioButton17.Checked = True Then
                        seasonallpath = posterurlpath
                    End If
                ElseIf RadioButton9.Checked = False Then 'banner
                    If CheckBox7.CheckState = CheckState.Checked Then
                        For Each Image In artlist
                            If Image.language = languagelist(ListBox1.SelectedIndex).abbreviation And Image.bannertype = "series" And Image.season = Nothing Then
                                posterurl = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If posterurlpath = "" Then
                        For Each Image In artlist
                            If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                                posterurlpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If posterurlpath = "" Then
                        For Each Image In artlist
                            If Image.bannertype = "series" And Image.season = Nothing Then
                                posterurlpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If posterurlpath <> "" And RadioButton16.Checked = True Then
                        seasonallpath = posterurlpath
                    End If
                End If

                If posterurlpath <> "" Then

                    Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "folder.jpg")
                    If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                        Try
                            Dim buffer(4000000) As Byte
                            Dim size As Integer = 0
                            Dim bytesRead As Integer = 0
                            Dim thumburl As String = posterurlpath
                            Dim req As HttpWebRequest = req.Create(thumburl)
                            Dim res As HttpWebResponse = req.GetResponse()
                            Dim contents As Stream = res.GetResponseStream()
                            Dim bytesToRead As Integer = CInt(buffer.Length)
                            While bytesToRead > 0
                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                If size = 0 Then Exit While
                                bytesToRead -= size
                                bytesRead += size
                            End While
                            Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                            fstrm.Write(buffer, 0, bytesRead)
                            contents.Close()
                            fstrm.Close()
                        Catch ex As WebException
                            'MsgBox("Error Downloading main poster from TVDB")
                        End Try
                    End If
                End If
            End If









            If RadioButton18.Checked = False And seasonallpath = "" Then

                If RadioButton17.Checked = True Then 'poster
                    If CheckBox7.CheckState = CheckState.Checked Then
                        For Each Image In artlist
                            If Image.language = languagelist(ListBox1.SelectedIndex).abbreviation And Image.bannertype = "poster" Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.language = "en" And Image.bannertype = "poster" Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.bannertype = "poster" Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                ElseIf RadioButton16.Checked = True Then 'banner
                    If CheckBox7.CheckState = CheckState.Checked Then
                        For Each Image In artlist
                            If Image.language = languagelist(ListBox1.SelectedIndex).abbreviation And Image.bannertype = "series" And Image.season = Nothing Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.bannertype = "series" And Image.season = Nothing Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                End If

                If seasonallpath <> "" Then

                    Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season-all.tbn")
                    If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                        Try
                            Dim buffer(4000000) As Byte
                            Dim size As Integer = 0
                            Dim bytesRead As Integer = 0
                            Dim thumburl As String = seasonallpath
                            Dim req As HttpWebRequest = req.Create(thumburl)
                            Dim res As HttpWebResponse = req.GetResponse()
                            Dim contents As Stream = res.GetResponseStream()
                            Dim bytesToRead As Integer = CInt(buffer.Length)
                            While bytesToRead > 0
                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                If size = 0 Then Exit While
                                bytesToRead -= size
                                bytesRead += size
                            End While
                            Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                            fstrm.Write(buffer, 0, bytesRead)
                            contents.Close()
                            fstrm.Close()
                        Catch ex As WebException
                            'MsgBox("Error Downloading main poster from TVDB")
                        End Try
                    End If
                End If
            ElseIf RadioButton18.Checked = False And seasonallpath <> "" Then
                Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season-all.tbn")
                If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                    Try
                        Dim buffer(4000000) As Byte
                        Dim size As Integer = 0
                        Dim bytesRead As Integer = 0
                        Dim thumburl As String = seasonallpath
                        Dim req As HttpWebRequest = req.Create(thumburl)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)
                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While
                        Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                        fstrm.Write(buffer, 0, bytesRead)
                        contents.Close()
                        fstrm.Close()
                    Catch ex As WebException
                        'MsgBox("Error Downloading main poster from TVDB")
                    End Try
                End If
            End If
















            If artdone = False Then
                Dim thumblist As String = tvdbstuff.getposterlist(listofshows(ListBox3.SelectedIndex).showid)
                showlist.LoadXml(thumblist)
                artdone = True
                thisresult = Nothing
                'CheckBox3 = seasons
                'CheckBox4 = fanart
                'CheckBox5 = poster
                For Each thisresult In showlist("banners")
                    Select Case thisresult.Name
                        Case "banner"
                            Dim individualposter As New tvbanners
                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "url"
                                        individualposter.url = results.InnerText
                                    Case "bannertype"
                                        individualposter.bannertype = results.InnerText
                                    Case "resolution"
                                        individualposter.resolution = results.InnerText
                                    Case "language"
                                        individualposter.language = results.InnerText
                                    Case "season"
                                        individualposter.season = results.InnerText
                                End Select
                            Next
                            artlist.Add(individualposter)
                    End Select
                Next
            End If
            For Each url In artlist
                If url.bannertype <> "fanart" Then
                    workingtvshow.posters.Add(url.url)
                Else
                    workingtvshow.fanart.Add(url.url)
                End If
            Next

            nfofunction.savetvshownfo(workingtvshow.path, workingtvshow, True, "unlocked")
            Call loadtvshow(workingtvshow.path)
            messbox.Close()
            TabControl3.SelectedIndex = 0
        End If
    End Sub

    Private Function tvencodespecialchrs(ByVal text As String)
        If text.IndexOf("&") <> -1 Then text = text.Replace("&", "&amp;")
        If text.IndexOf("<") <> -1 Then text = text.Replace("", "&lt;")
        If text.IndexOf(">") <> -1 Then text = text.Replace("", "&gt;")
        If text.IndexOf(Chr(34)) <> -1 Then text = text.Replace(Chr(34), "&quot;")
        If text.IndexOf("'") <> -1 Then text = text.Replace("'", "&apos;")
        If text.IndexOf(vbCrLf) <> -1 Then text = text.Replace(vbCrLf, "&#xA;")
        Return text
    End Function

    Private Sub doscreenshot(ByVal filenameandpath As String)
        Dim thumbpathandfilename As String = filenameandpath
        Dim pathandfilename As String = filenameandpath.Replace(IO.Path.GetExtension(filenameandpath), "")
        Dim extensions(100) As String
        Dim extensioncount As Integer
        extensions(1) = ".avi"
        extensions(2) = ".xvid"
        extensions(3) = ".divx"
        extensions(4) = ".img"
        extensions(5) = ".mpg"
        extensions(6) = ".mpeg"
        extensions(7) = ".mov"
        extensions(8) = ".rm"
        extensions(9) = ".3gp"
        extensions(10) = ".m4v"
        extensions(11) = ".wmv"
        extensions(12) = ".asf"
        extensions(13) = ".mp4"
        extensions(14) = ".mkv"
        extensions(15) = ".nrg"
        extensions(16) = ".iso"
        extensions(17) = ".rmvb"
        extensions(18) = ".ogm"
        extensions(19) = ".bin"
        extensions(20) = ".ts"
        extensions(21) = ".vob"
        extensions(22) = ".m2ts"
        extensions(23) = ".rar"
        extensions(24) = ".flv"
        extensions(25) = ".dvr-ms"
        extensions(26) = "VIDEO_TS.IFO"
        extensioncount = 26
        Dim exists As Boolean = False
        For f = 1 To extensioncount
            Dim tempstring2 As String
            tempstring2 = pathandfilename & extensions(f)
            If IO.File.Exists(tempstring2) Then
                Dim seconds As Integer = 10
                Dim myProcess As Process = New Process
                myProcess.StartInfo.WindowStyle = ProcessWindowStyle.Hidden
                myProcess.StartInfo.CreateNoWindow = False
                myProcess.StartInfo.FileName = applicationpath & "\ffmpeg.exe"
                Dim proc_arguments As String = "-y -i """ & tempstring2 & """ -f mjpeg -ss " & seconds.ToString & " -vframes 1 -an " & """" & thumbpathandfilename & """"
                myProcess.StartInfo.Arguments = proc_arguments
                myProcess.Start()
                myProcess.WaitForExit()
            End If
        Next
        messbox.Close()
    End Sub

    Private Function renameepisode(ByVal path As String, ByVal seasonno As String, ByVal episodeno As List(Of String), ByVal showtitle As String, ByVal episodetitle As String)
        Dim s As String = ""
        Dim e As String = ""
        Dim x As String = ""
        If userprefs.eprenamelowercase = False Then
            s = "S"
            e = "E"
            x = "X"
        Else
            s = "s"
            e = "e"
            x = "x"
        End If
        Dim returnpath As String = "false"
        Dim extensioncount As Integer
        Dim extensions(100)
        extensions(1) = ".avi"
        extensions(2) = ".xvid"
        extensions(3) = ".divx"
        extensions(4) = ".img"
        extensions(5) = ".mpg"
        extensions(6) = ".mpeg"
        extensions(7) = ".mov"
        extensions(8) = ".rm"
        extensions(9) = ".3gp"
        extensions(10) = ".m4v"
        extensions(11) = ".wmv"
        extensions(12) = ".asf"
        extensions(13) = ".mp4"
        extensions(14) = ".mkv"
        extensions(15) = ".nrg"
        extensions(16) = ".iso"
        extensions(17) = ".rmvb"
        extensions(18) = ".ogm"
        extensions(19) = ".bin"
        extensions(20) = ".ts"
        extensions(21) = ".vob"
        extensions(22) = ".m2ts"
        extensions(23) = ".flv"
        extensions(24) = ".dvr-ms"
        extensioncount = 24
        Dim medianame As String = path.Replace(IO.Path.GetExtension(path), "")
        For f = 1 To extensioncount
            Dim actualname As String = medianame & extensions(f)
            If IO.File.Exists(actualname) Then
                Dim newfilename As String
                newfilename = ""
                If seasonno.Length = 1 Then
                    seasonno = "0" & seasonno
                End If
                For g = 0 To episodeno.Count - 1
                    If episodeno(g).Length = 1 Then
                        episodeno(g) = "0" & episodeno(g)
                    End If
                Next
                Select Case userprefs.tvrename
                    Case 0
                        'Show Title - S01E01 - Episode Title.ext
                        newfilename = showtitle & " - " & s & seasonno
                        For Each ep In episodeno
                            newfilename = newfilename & e & ep
                        Next
                        newfilename = newfilename & " - " & episodetitle
                    Case 1
                        'S01E01 - Episode Title.ext
                        newfilename = s & seasonno
                        For Each ep In episodeno
                            newfilename = newfilename & e & ep
                        Next
                        newfilename = newfilename & " - " & episodetitle
                    Case 2
                        'Show Title - 1x01 - Episode Title.ext
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        newfilename = showtitle & " - " & seasonno
                        For Each ep In episodeno
                            newfilename = newfilename & x & ep
                        Next
                        newfilename = newfilename & " - " & episodetitle
                    Case 3
                        '1x01 - Episode Title.ext
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        newfilename = seasonno
                        For Each ep In episodeno
                            newfilename = newfilename & x & ep
                        Next
                        newfilename = newfilename & " - " & episodetitle
                    Case 4
                        'Show Title - 101 - Episode Title.ext
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        newfilename = showtitle & " - " & seasonno
                        For g = 0 To episodeno.Count - 1
                            If g = 0 Then
                                newfilename = newfilename & episodeno(g)
                            Else
                                newfilename = newfilename & x & episodeno(g)
                            End If
                        Next
                        newfilename = newfilename & " - " & episodetitle
                    Case 5
                        '101 - Episode Title.ext
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                            seasonno = seasonno.Substring(1, seasonno.Length - 1)
                        End If
                        newfilename = seasonno
                        For g = 0 To episodeno.Count - 1
                            If g = 0 Then
                                newfilename = newfilename & episodeno(g)
                            Else
                                newfilename = newfilename & x & episodeno(g)
                            End If
                        Next
                        newfilename = newfilename & " - " & episodetitle
                End Select
                newfilename = newfilename.Replace("?", "")
                newfilename = newfilename.Replace("/", "")
                newfilename = newfilename.Replace("\", "")
                newfilename = newfilename.Replace("<", "")
                newfilename = newfilename.Replace(">", "")
                newfilename = newfilename.Replace(":", "")
                newfilename = newfilename.Replace("""", "")
                newfilename = newfilename.Replace("*", "")
                Dim listtorename As New List(Of String)
                listtorename.Clear()
                Dim done As String = ""
                Dim temppath As String = path

                listtorename.Add(actualname)

                Dim di As DirectoryInfo = New DirectoryInfo(path.Replace(IO.Path.GetFileName(path), ""))
                Dim filenama As String = IO.Path.GetFileNameWithoutExtension(path)
                Dim fils As FileInfo() = di.GetFiles(filenama & ".*")
                For Each fiNext In fils
                    If Not listtorename.Contains(fiNext.FullName) Then
                        listtorename.Add(fiNext.FullName)
                    End If
                Next

                temppath = temppath.Replace(IO.Path.GetExtension(temppath), ".nfo")
                If IO.File.Exists(temppath) Then
                    If Not listtorename.Contains(temppath) Then
                        listtorename.Add(temppath)
                    End If
                End If
                temppath = temppath.Replace(IO.Path.GetExtension(temppath), ".tbn")
                If IO.File.Exists(temppath) Then
                    If Not listtorename.Contains(temppath) Then
                        listtorename.Add(temppath)
                    End If
                End If
                temppath = temppath.Replace(IO.Path.GetExtension(temppath), ".rar")
                If IO.File.Exists(temppath) Then
                    If Not listtorename.Contains(temppath) Then
                        listtorename.Add(temppath)
                    End If
                End If


                For Each items In listtorename
                    Dim newname As String = items.Replace(IO.Path.GetFileName(items), newfilename) & IO.Path.GetExtension(items)
                    newname = newname.Replace("..", ".")
                    done = newname.Replace(IO.Path.GetExtension(newname), ".nfo")
                    Try
                        Dim fi As New FileInfo(items)
                        If Not IO.File.Exists(newname) Then
                            fi.MoveTo(newname)
                        End If
                    Catch ex As Exception
                        done = path
                    End Try
                Next
                returnpath = done
                Exit For
            End If
        Next
        Return returnpath
    End Function

    Private Function addepisode(ByVal alleps As List(Of episodeinfo), ByVal path As String, ByVal show As String)


        If userprefs.autorenameepisodes = True Then
            Dim eps As New List(Of String)
            eps.Clear()
            For Each ep In alleps
                eps.Add(ep.episodeno)
            Next
            Dim tempspath As String = renameepisode(path, alleps(0).seasonno, eps, show, alleps(0).title)
            If tempspath <> "false" Then
                path = tempspath
            End If
        End If



        tvscraperlog = tvscraperlog & "Saving episode" & vbCrLf
        Call nfofunction.saveepisodenfo(alleps, path)

        Dim ext As String = path.Replace(IO.Path.GetExtension(path), ".tbn")

        If IO.File.Exists(ext) Or alleps(0).thumb = Nothing Then
            If Not IO.File.Exists(ext) Then
                Call doscreenshot(ext)
            End If
        Else


            Dim buffer(400000) As Byte
            Dim size As Integer = 0
            Dim bytesRead As Integer = 0
            Dim url As String = alleps(0).thumb
            If url = Nothing Then
            Else
                If url.IndexOf("http") = 0 And url.IndexOf(".jpg") <> -1 Then
                    Try
                        Dim req As HttpWebRequest = req.Create(url)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)




                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While


                        Try
                            tvscraperlog = tvscraperlog & "Saving Thumbnail To :- " & ext & vbCrLf
                            Dim fstrm As New FileStream(ext, FileMode.OpenOrCreate, FileAccess.Write)
                            fstrm.Write(buffer, 0, bytesRead)
                            contents.Close()
                            fstrm.Close()
                        Catch ex As Exception
                            tvscraperlog = tvscraperlog & "Unable to Save Thumb" & vbCrLf
                            tvscraperlog = tvscraperlog & "Error :- " & ex.Message.ToString & vbCrLf
                        End Try
                    Catch
                    End Try
                Else
                    If Not IO.File.Exists(ext) Then
                        Call doscreenshot(ext)
                    End If
                End If
            End If
        End If
        Return path
    End Function

    Private Function valdateepisodenfo(ByVal nfopath As String)
        Dim validated As Boolean = True
        If IO.File.Exists(nfopath) Then
            Dim tvshow As New XmlDocument
            Try
                tvshow.Load(nfopath)
            Catch ex As Exception
                validated = False
            End Try
            If validated = True Then
                Try
                    Dim tempstring As String
                    Dim filechck As IO.StreamReader = IO.File.OpenText(nfopath)
                    tempstring = filechck.ReadToEnd.ToLower
                    filechck.Close()
                    If tempstring = Nothing Then
                        validated = False
                    End If
                    Try
                        Dim seasonno As String = tempstring.Substring(tempstring.IndexOf("<season>") + 8, tempstring.IndexOf("</season>") - tempstring.IndexOf("<season>") - 8)
                        If Not IsNumeric(seasonno) Then
                            validated = False
                        End If
                    Catch ex As Exception
                        validated = False
                    End Try
                    Try
                        Dim episodeno As String = tempstring.Substring(tempstring.IndexOf("<episode>") + 9, tempstring.IndexOf("</episode>") - tempstring.IndexOf("<episode>") - 9)
                        If Not IsNumeric(episodeno) Then
                            validated = False
                        End If
                    Catch ex As Exception
                        validated = False
                    End Try
                Catch
                End Try
            End If
            Return validated
        End If
    End Function

    Private Sub findnewepisodes(ByVal path As String, ByVal pattern As String)
        Dim exists As Boolean
        Dim episode As New List(Of BasicEpisodeNFO)
        Dim propfile As Boolean = False
        Dim allok As Boolean = False
        Dim dir_info As New System.IO.DirectoryInfo(path)
        Dim fs_infos() As System.IO.FileInfo = dir_info.GetFiles(pattern, SearchOption.TopDirectoryOnly)
        Dim counter As Integer = 1
        Dim counter2 As Integer = 1
        For Each fs_info As System.IO.FileInfo In fs_infos

            Try
                Dim filename As String = IO.Path.Combine(path, fs_info.Name)
                Dim filename2 As String = filename.Replace(IO.Path.GetExtension(filename), ".nfo")
                If IO.File.Exists(filename2) Then
                    If valdateepisodenfo(filename2) = False Then
                        Dim movefilename As String = filename2.Replace(IO.Path.GetExtension(filename2), ".info")
                        Try
                            IO.File.Move(filename2, movefilename)
                        Catch
                        End Try
                    End If
                End If
                If Not IO.File.Exists(filename2) Then
                    Dim add As Boolean = True
                    If pattern = "*.vob" Then 'If a vob file is detected, check that it is not part of a dvd file structure
                        Dim name As String = filename2
                        name = name.Replace(IO.Path.GetFileName(name), "VIDEO_TS.IFO")
                        If IO.File.Exists(name) Then
                            add = False
                        End If
                    End If
                    If pattern = "*.rar" Then
                        Dim tempmovie As String
                        Dim tempint As Integer
                        Dim tempint2 As Integer
                        Dim tempmovie2 As String = fs_info.FullName
                        If IO.Path.GetExtension(tempmovie2).ToLower = ".rar" Then
                            If IO.File.Exists(tempmovie2) = True Then
                                If IO.File.Exists(tempmovie) = False Then
                                    Dim rarname As String = tempmovie2
                                    Dim SizeOfFile As Integer
                                    tempint2 = Convert.ToInt32(userprefs.rarsize) * 1048576
                                    SizeOfFile = FileLen(rarname)
                                    If SizeOfFile > tempint2 Then
                                        Dim mat As Match
                                        mat = Regex.Match(rarname, "\.part[0-9][0-9]?[0-9]?[0-9]?.rar")
                                        If mat.Success = True Then
                                            rarname = mat.Value
                                            If rarname.ToLower.IndexOf(".part1.rar") <> -1 Or rarname.ToLower.IndexOf(".part01.rar") <> -1 Or rarname.ToLower.IndexOf(".part001.rar") <> -1 Or rarname.ToLower.IndexOf(".part0001.rar") <> -1 Then
                                                Dim stackrarexists As Boolean = False
                                                rarname = tempmovie.Replace(".nfo", ".rar")
                                                If rarname.ToLower.IndexOf(".part1.rar") <> -1 Then
                                                    rarname = rarname.Replace(".part1.rar", ".nfo")
                                                    If IO.File.Exists(rarname) Then
                                                        stackrarexists = True
                                                        tempmovie = rarname
                                                    Else
                                                        stackrarexists = False
                                                        tempmovie = rarname
                                                    End If
                                                End If
                                                If rarname.ToLower.IndexOf(".part01.rar") <> -1 Then
                                                    rarname = rarname.Replace(".part01.rar", ".nfo")
                                                    If IO.File.Exists(rarname) Then
                                                        stackrarexists = True
                                                        tempmovie = rarname
                                                    Else
                                                        stackrarexists = False
                                                        tempmovie = rarname
                                                    End If
                                                End If
                                                If rarname.ToLower.IndexOf(".part001.rar") <> -1 Then
                                                    rarname = rarname.Replace(".part001.rar", ".nfo")
                                                    If IO.File.Exists(rarname) Then
                                                        tempmovie = rarname
                                                        stackrarexists = True
                                                    Else
                                                        stackrarexists = False
                                                        tempmovie = rarname
                                                    End If
                                                End If
                                                If rarname.ToLower.IndexOf(".part0001.rar") <> -1 Then
                                                    rarname = rarname.Replace(".part0001.rar", ".nfo")
                                                    If IO.File.Exists(rarname) Then
                                                        tempmovie = rarname
                                                        stackrarexists = True
                                                    Else
                                                        stackrarexists = False
                                                        tempmovie = rarname
                                                    End If
                                                End If
                                            Else
                                                add = False
                                            End If
                                        Else
                                            'remove = True
                                        End If
                                    Else
                                        add = False
                                    End If
                                End If
                            End If
                        End If
                    End If
                    If add = True Then
                        Dim newep As New EpisodeInfo
                        newep.episodepath = filename2
                        newep.mediaextension = filename
                        newepisodelist.Add(newep)
                    End If
                End If
            Catch ex As Exception

            End Try

        Next fs_info

        fs_infos = Nothing
    End Sub

    Private Sub bckgroundscanepisodes_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bckgroundscanepisodes.RunWorkerCompleted
        

        If scrapeandquit = True Then
            Me.Close()
        End If


        If Not (e.Error Is Nothing) Then
            tvscraperlog = tvscraperlog & vbCrLf
            tvscraperlog = tvscraperlog & "Error, exiting TV episode scraper" & vbCrLf
            tvscraperlog = tvscraperlog & "Error:-" & vbCrLf
            tvscraperlog = tvscraperlog & e.Error.ToString & vbCrLf
        Else
            tvscraperlog = tvscraperlog & vbCrLf & "Operation Completed" & vbCrLf
        End If


        ToolStripProgressBar5.Value = 0
        ToolStripProgressBar5.ProgressBar.Refresh()
        ToolStripProgressBar5.Visible = False
        ToolStripStatusLabel6.Text = "TV Show Scraper"
        ToolStripStatusLabel6.Visible = False
        TabPage15.Text = "Search for new Episodes"
        TabPage15.ToolTipText = "Searches folders for new episodes"
        If userprefs.disabletvlogs = False Then
            Dim MyFormObject As New frmoutputlog(tvscraperlog, True)
            Try
                MyFormObject.ShowDialog()
            Catch ex As ObjectDisposedException
            End Try
        End If
        'Call populatetvtree()
        globalthreadcounter -= 1
        Call checkforrunningthreads()

    End Sub

    Private Sub OpenFolderToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OpenFolderToolStripMenuItem.Click
        If Not TreeView1.SelectedNode Is Nothing Then
            If Not TreeView1.SelectedNode.Name Is Nothing Then
                Call openfolder(TreeView1.SelectedNode.Name)
            Else
                MsgBox("There is no show selected to open")
            End If
        Else
            MsgBox("There is no show selected to open")
        End If
    End Sub

    Private Sub WebBrowser2_NewWindow(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles WebBrowser2.NewWindow
        e.Cancel = True
    End Sub

    Private Sub WebBrowser3_NewWindow(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles WebBrowser3.NewWindow
        e.Cancel = True
    End Sub

    Private Sub WebBrowser4_NewWindow(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles WebBrowser4.NewWindow
        e.Cancel = True
    End Sub

    Private Sub PictureBox4_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles PictureBox4.DoubleClick
        If PictureBox4.ImageLocation <> Nothing Then
            If IO.File.Exists(PictureBox4.ImageLocation) Then
                Me.ControlBox = False
                MenuStrip1.Enabled = False
                'ToolStrip1.Enabled = False
                Dim newimage As New Bitmap(PictureBox4.ImageLocation)
                Call zoomimage(newimage)
            End If
        End If
    End Sub

    Private Sub PictureBox5_DoubleClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles PictureBox5.DoubleClick
        If PictureBox5.ImageLocation <> Nothing Then
            If IO.File.Exists(PictureBox5.ImageLocation) Then
                Me.ControlBox = False
                MenuStrip1.Enabled = False
                'ToolStrip1.Enabled = False
                Dim newimage As New Bitmap(PictureBox5.ImageLocation)
                Call zoomimage(newimage)
            End If
        End If
    End Sub

    Private Sub loadtvfanart()
        listoftvfanarts.Clear()
        Button40.Visible = False
        Button39.Visible = False
        If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Or TreeView1.SelectedNode.Name = "" Then
            If Not PictureBox4.Image Is Nothing Then
                PictureBox10.Image = PictureBox4.Image
                PictureBox11.Image = PictureBox4.Image
            Else
                PictureBox10.Image = Nothing
                PictureBox11.Image = Nothing
            End If
        Else
            If IO.File.Exists(workingtvshow.path.ToLower.Replace("tvshow.nfo", "fanart.jpg")) Then
                Try
                    PictureBox10.ImageLocation = workingtvshow.path.ToLower.Replace("tvshow.nfo", "fanart.jpg")
                    PictureBox11.ImageLocation = workingtvshow.path.ToLower.Replace("tvshow.nfo", "fanart.jpg")
                Catch
                    PictureBox10.Image = Nothing
                    PictureBox11.Image = Nothing
                End Try
            Else
                PictureBox10.Image = Nothing
                PictureBox11.Image = Nothing
            End If
        End If
        Try
            Label58.Text = PictureBox10.Image.Height.ToString
            Label59.Text = PictureBox10.Image.Width.ToString
        Catch
        End Try
        TextBox28.Text = workingtvshow.title
        messbox = New message_box("Please wait,", "", "Querying TVDB for fanart list")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Dim tmdbid As String
        Dim fanarturl As String = "http://www.thetvdb.com/api/6E82FED600783400/series/" & workingtvshow.tvdbid & "/banners.xml"
        Dim apple2(2000) As String
        Dim fanartlinecount As Integer = 0
        Try
            Dim wrGETURL As WebRequest
            wrGETURL = WebRequest.Create(fanarturl)
            Dim myProxy As New WebProxy("myproxy", 80)
            myProxy.BypassProxyOnLocal = True
            Dim objStream As Stream
            objStream = wrGETURL.GetResponse.GetResponseStream()
            Dim objReader As New StreamReader(objStream)
            Dim sLine As String = ""
            fanartlinecount = 0

            sLine = objReader.ReadToEnd


            Dim bannerslist As New XmlDocument
            'Try
            Dim bannerlist As String = "<banners>"
            bannerslist.LoadXml(sLine)
            Dim thisresult As XmlNode = Nothing
            objReader.Close()
            objStream.Close()
            For Each thisresult In bannerslist("Banners")

                Select Case thisresult.Name
                    Case "Banner"
                        Dim fanart As New fanartlist
                        Dim bannerselection As XmlNode = Nothing
                        For Each bannerselection In thisresult.ChildNodes
                            Select Case bannerselection.Name
                                Case "BannerPath"
                                    fanart.bigurl = "http://thetvdb.com/banners/" & bannerselection.InnerXml
                                    fanart.smallurl = "http://thetvdb.com/banners/_cache/" & bannerselection.InnerXml
                                Case "BannerType"
                                    fanart.type = bannerselection.InnerXml
                                Case "BannerType2"
                                    fanart.resolution = bannerselection.InnerXml
                            End Select
                        Next
                        If fanart.type = "fanart" Then
                            listoftvfanarts.Add(fanart)
                        End If
                End Select
            Next





        Catch ex As WebException
            MsgBox("TVDB appears to be down at the moment, please try again later")
        End Try



        If listoftvfanarts.Count > 0 Then




            Dim location As Integer = 0
            Dim itemcounter As Integer = 0
            For f = 0 To listoftvfanarts.Count - 1
                tvfanartboxes() = New PictureBox()

                With tvfanartboxes
                    .Location = New Point(0, location)
                    If listoftvfanarts.Count > 2 Then
                        .Width = 405
                        .Height = 245
                    Else
                        .Width = 415
                        .Height = 250
                    End If
                    .SizeMode = PictureBoxSizeMode.Zoom
                    .ImageLocation = listoftvfanarts(f).smallurl
                    .Visible = True
                    .BorderStyle = BorderStyle.Fixed3D
                    .Name = "tvfanart" & f.ToString
                    AddHandler tvfanartboxes.DoubleClick, AddressOf zoomimage2
                End With

                tvfanartcheckboxes() = New RadioButton()
                With tvfanartcheckboxes
                    .BringToFront()
                    .Location = New Point(199, location + 245)
                    .Name = "checkbox" & itemcounter.ToString
                End With

                resolutionlabels() = New Label
                With resolutionlabels
                    .BringToFront()
                    .Location = New Point(10, location + 245)
                    .Name = listoftvfanarts(f).resolution
                    .Text = listoftvfanarts(f).resolution
                End With

                itemcounter += 1
                location += 270

                Me.Panel13.Controls.Add(tvfanartboxes())
                Me.Panel13.Controls.Add(tvfanartcheckboxes())
                Me.Panel13.Controls.Add(resolutionlabels())
                Me.Refresh()
                Application.DoEvents()
            Next
        Else
            Dim mainlabel2 As Label
            mainlabel2 = New Label
            With mainlabel2
                .Location = New Point(0, 100)
                .Width = 700
                .Height = 100
                .Font = New System.Drawing.Font("Arial", 15, FontStyle.Bold)
                .Text = "No Fanart Was Found At TVDB For This Movie"
            End With
            Me.Panel13.Controls.Add(mainlabel2)
        End If

        System.Windows.Forms.Cursor.Current = Cursors.Default
        messbox.Close()
        'Catch ex As Exception

        'End Try

    End Sub

    Private Sub Button42_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button42.Click
        Label2.Text = "Please Wait, Trying to Download Fanart"
        Me.Refresh()
        Application.DoEvents()

        Dim miscvar As String
        Dim miscint As Integer
        Dim miscvar2 As String
        Dim allok As Boolean = False
        For Each button As Control In Me.Panel13.Controls
            If button.Name.IndexOf("checkbox") <> -1 Then
                Dim b1 As RadioButton = CType(button, RadioButton)
                If b1.Checked = True Then
                    miscvar = b1.Name
                    miscvar = miscvar.Replace("checkbox", "")
                    miscint = Convert.ToDecimal(miscvar)
                    miscvar2 = listoftvfanarts(miscint).bigurl
                    allok = True
                    Exit For
                End If
            End If
        Next
        If allok = False Then
            MsgBox("No Fanart Is Selected")
        Else
            Try
                'Panel1.Controls.Remove(Label1)
                Dim buffer(4000000) As Byte
                Dim size As Integer = 0
                Dim bytesRead As Integer = 0

                Dim fanartthumburl As String = miscvar2
                Dim req As HttpWebRequest = req.Create(fanartthumburl)
                Dim res As HttpWebResponse = req.GetResponse()
                Dim contents As Stream = res.GetResponseStream()
                Dim bmp As New Bitmap(contents)
                Dim savepath As String = workingtvshow.path.ToLower.Replace("tvshow.nfo", "fanart.jpg")

                Dim bytesToRead As Integer = CInt(buffer.Length)

                While bytesToRead > 0
                    size = contents.Read(buffer, bytesRead, bytesToRead)
                    If size = 0 Then Exit While
                    bytesToRead -= size
                    bytesRead += size
                End While
                If Form1.userprefs.resizefanart = 1 Then
                    Try
                        Dim tempbitmap As Bitmap = bmp
                        tempbitmap.Save(savepath, Imaging.ImageFormat.Jpeg)
                    Catch ex As Exception
                        miscvar = ex.Message.ToString
                    End Try
                ElseIf Form1.userprefs.resizefanart = 2 Then
                    If bmp.Width > 1280 Or bmp.Height > 720 Then
                        Dim bm_source As New Bitmap(bmp)
                        Dim bm_dest As New Bitmap(1280, 720)
                        Dim gr As Graphics = Graphics.FromImage(bm_dest)
                        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                        gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                        Dim tempbitmap As Bitmap = bm_dest
                        tempbitmap.Save(savepath, Imaging.ImageFormat.Jpeg)
                    Else
                        Threading.Thread.CurrentThread.Sleep(30)
                        bmp.Save(savepath, Imaging.ImageFormat.Jpeg)
                    End If
                ElseIf Form1.userprefs.resizefanart = 3 Then
                    If bmp.Width > 960 Or bmp.Height > 540 Then
                        Dim bm_source As New Bitmap(bmp)
                        Dim bm_dest As New Bitmap(960, 540)
                        Dim gr As Graphics = Graphics.FromImage(bm_dest)
                        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                        gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                        Dim tempbitmap As Bitmap = bm_dest
                        tempbitmap.Save(savepath, Imaging.ImageFormat.Jpeg)
                    Else
                        Threading.Thread.CurrentThread.Sleep(30)
                        bmp.Save(savepath, Imaging.ImageFormat.Jpeg)
                    End If
                End If
                Dim exists As Boolean = System.IO.File.Exists(savepath)
                If exists = True Then

                    Try
                        'mainfanart = New PictureBox
                        PictureBox10.ImageLocation = savepath
                        PictureBox11.Image = PictureBox10.Image
                        If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Or TreeView1.SelectedNode.Name = "" Then
                            PictureBox4.ImageLocation = savepath
                        End If
                        'Label8.Visible = False
                    Catch
                    End Try
                Else
                    PictureBox10.Image = Nothing
                    PictureBox11.Image = Nothing
                    'Label8.Text = "No Local Fanart Is Available"
                    'Label8.Visible = True
                End If
                Label59.Text = PictureBox2.Image.Width
                Label58.Text = PictureBox2.Image.Height

            Catch ex As WebException
                MsgBox(ex.Message)
            End Try



        End If
    End Sub

    Private Sub tvfanartcroptop()
        Dim imagewidth As Integer = PictureBox10.Image.Width
        Dim imageheight As Integer = PictureBox10.Image.Height
        PictureBox10.Image = CropImage(PictureBox10.Image, New Size(imagewidth, imageheight - 1), New Point(0, 1)).Clone
        PictureBox10.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub tvfanartcropbottom()
        Dim imagewidth As Integer = PictureBox10.Image.Width
        Dim imageheight As Integer = PictureBox10.Image.Height
        PictureBox10.Image = CropImage(PictureBox10.Image, New Size(imagewidth, imageheight - 1), New Point(0, 0)).Clone
        PictureBox10.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub tvfanartcropleft()
        Dim imagewidth As Integer = PictureBox10.Image.Width
        Dim imageheight As Integer = PictureBox10.Image.Height
        PictureBox10.Image = CropImage(PictureBox10.Image, New Size(imagewidth - 1, imageheight), New Point(1, 0)).Clone
        PictureBox10.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub tvfanartcropright()
        Dim imagewidth As Integer = PictureBox10.Image.Width
        Dim imageheight As Integer = PictureBox10.Image.Height
        PictureBox10.Image = CropImage(PictureBox10.Image, New Size(imagewidth - 1, imageheight), New Point(0, 0)).Clone
        PictureBox10.SizeMode = PictureBoxSizeMode.Zoom
    End Sub

    Private Sub Button35_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button35.MouseDown
        'up
        If PictureBox10.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        Button40.Visible = True
        Button39.Visible = True
        cropstring = "top"
        Timer4.Enabled = True
    End Sub

    Private Sub Button36_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button36.MouseDown
        'down
        If PictureBox10.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        Button40.Visible = True
        Button39.Visible = True
        cropstring = "bottom"
        Timer4.Enabled = True
    End Sub

    Private Sub Button38_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button38.MouseDown
        'left
        If PictureBox10.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        Button40.Visible = True
        Button39.Visible = True
        cropstring = "left"
        Timer4.Enabled = True
    End Sub

    Private Sub Button37_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button37.MouseDown
        'right
        If PictureBox10.Image Is Nothing Then Exit Sub
        thumbeditsmade = True
        Button40.Visible = True
        Button39.Visible = True
        cropstring = "right"
        Timer4.Enabled = True
    End Sub

    Private Sub Timer4_Tick(ByVal sender As Object, ByVal e As System.EventArgs) Handles Timer4.Tick
        If cropstring = "top" Then Call tvfanartcroptop()
        If cropstring = "bottom" Then Call tvfanartcropbottom()
        If cropstring = "left" Then Call tvfanartcropleft()
        If cropstring = "right" Then Call tvfanartcropright()
        Label58.Text = PictureBox10.Image.Height.ToString
        Label59.Text = PictureBox10.Image.Width.ToString
    End Sub

    Private Sub Button35_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button35.MouseUp
        Timer4.Enabled = False
    End Sub

    Private Sub Button36_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button36.MouseUp
        Timer4.Enabled = False
    End Sub

    Private Sub Button38_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button38.MouseUp
        Timer4.Enabled = False
    End Sub

    Private Sub Button37_MouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles Button37.MouseUp
        Timer4.Enabled = False
    End Sub

    Private Sub Button40_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button40.Click
        PictureBox10.Image = PictureBox11.Image
        Label58.Text = PictureBox10.Image.Height.ToString
        Label59.Text = PictureBox10.Image.Width.ToString
        Button40.Visible = False
        Button39.Visible = False
    End Sub

    Private Sub Button39_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button39.Click
        Try
            Dim stream As New System.IO.MemoryStream
            PictureBox10.Image.Save(workingtvshow.path.ToLower.Replace("tvshow.nfo", "fanart.jpg"), System.Drawing.Imaging.ImageFormat.Jpeg)
            PictureBox11.Image = PictureBox10.Image
            If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Or TreeView1.SelectedNode.Name = "" Then
                PictureBox4.Image = PictureBox11.Image
            End If
            Label58.Text = PictureBox10.Image.Height.ToString
            Label59.Text = PictureBox10.Image.Width.ToString
            Button40.Visible = False
            Button39.Visible = False
        Catch ex As Exception
        End Try
    End Sub

    Private Sub Button41_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button41.Click
        Panel11.Visible = True
    End Sub

    Private Sub Button32_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button32.Click
        Panel11.Visible = False
    End Sub

    Private Sub Button31_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button31.Click
        'browser
        openFD.InitialDirectory = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "")
        openFD.Title = "Select a jpeg image file"
        openFD.FileName = ""
        openFD.Filter = "Media Companion Image Files|*.jpg;*.tbn|All Files|*.*"
        openFD.FilterIndex = 0
        openFD.ShowDialog()
        TextBox27.Text = openFD.FileName
    End Sub

    Private Sub Button33_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button33.Click
        'set thumb

        Dim MyWebClient As New System.Net.WebClient
        Try
            Dim ImageInBytes() As Byte = MyWebClient.DownloadData(TextBox27.Text)
            Dim ImageStream As New IO.MemoryStream(ImageInBytes)

            'mainfanart.Image = New System.Drawing.Bitmap(ImageStream)





            Dim tempstring As String

            Dim bmp As New Bitmap(ImageStream)
            Dim savepath As String = workingtvshow.path.ToLower.Replace("tvshow.nfo", "fanart.jpg")

            If Form1.userprefs.resizefanart = 1 Then
                Try
                    Dim tempbitmap As Bitmap = bmp
                    tempbitmap.Save(savepath, Imaging.ImageFormat.Jpeg)
                Catch ex As Exception
                    tempstring = ex.Message.ToString
                End Try
            ElseIf Form1.userprefs.resizefanart = 2 Then
                If bmp.Width > 1280 Or bmp.Height > 720 Then
                    Dim bm_source As New Bitmap(bmp)
                    Dim bm_dest As New Bitmap(1280, 720)
                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                    gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                    Dim tempbitmap As Bitmap = bm_dest
                    tempbitmap.Save(savepath, Imaging.ImageFormat.Jpeg)
                Else
                    Threading.Thread.CurrentThread.Sleep(30)
                    bmp.Save(savepath, Imaging.ImageFormat.Jpeg)
                End If
            ElseIf Form1.userprefs.resizefanart = 3 Then
                If bmp.Width > 960 Or bmp.Height > 540 Then
                    Dim bm_source As New Bitmap(bmp)
                    Dim bm_dest As New Bitmap(960, 540)
                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                    gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                    Dim tempbitmap As Bitmap = bm_dest
                    tempbitmap.Save(savepath, Imaging.ImageFormat.Jpeg)
                Else
                    Threading.Thread.CurrentThread.Sleep(30)
                    bmp.Save(savepath, Imaging.ImageFormat.Jpeg)
                End If
            End If

            Dim exists As Boolean = System.IO.File.Exists(savepath)
            If exists = True Then


                'mainfanart = New PictureBox
                PictureBox10.ImageLocation = savepath
                PictureBox11.Image = PictureBox10.Image
                If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Or TreeView1.SelectedNode.Name = "" Then
                    PictureBox4.ImageLocation = savepath
                End If
                'Label8.Visible = False
            Else
                PictureBox10.Image = Nothing
                PictureBox11.Image = Nothing
                'Label8.Text = "No Local Fanart Is Available"
                'Label8.Visible = True
            End If
            Label59.Text = PictureBox2.Image.Width
            Label58.Text = PictureBox2.Image.Height


        Catch ex As Exception
            MsgBox("Unable To Download Image")
        End Try
        Panel11.Visible = False
    End Sub

    Private Sub TextBox2_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles TextBox2.Enter
        If Panel9.Visible = False Then
            TextBox2.Text = workingtvshow.title
            If TextBox2.Text.ToLower.IndexOf(", the") = TextBox2.Text.Length - 5 Then
                TextBox2.Text = "The " & TextBox2.Text.Substring(0, TextBox2.Text.Length - 5)
            End If
        Else
            TextBox2.Text = workingepisode(workingepisodeindex).title
        End If
    End Sub

    Private Sub TextBox2_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TextBox2.Leave
        On Error Resume Next
        If Panel9.Visible = False Then
            '-------------- Aqui
            If userprefs.ignorearticle = True Then
                If TextBox2.Text.ToLower.IndexOf("the ") = 0 Then
                    TextBox2.Text = TextBox2.Text.Substring(4, TextBox2.Text.Length - 4) & ", The"
                End If
            End If
            workingtvshow.title = TextBox2.Text
        Else
            workingepisode(workingepisodeindex).title = TextBox2.Text
            Dim trueseason As String = workingepisode(workingepisodeindex).seasonno
            Dim trueepisode As String = workingepisode(workingepisodeindex).episodeno
            If trueseason.Length = 1 Then trueseason = "0" & trueseason
            If trueepisode.Length = 1 Then trueepisode = "0" & trueepisode
            TextBox2.Text = "S" & trueseason & "E" & trueepisode & " - " & workingepisode(workingepisodeindex).title
        End If
    End Sub

    Private Sub Button43_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button43.Click
        Dim tempint As Integer
        Dim tempstring As String = ""
        If Panel9.Visible = False Then
            Dim changed As Integer = 0
            If workingtvshow.tvdbid <> TextBox9.Text Then
                changed += 1
            End If
            If workingtvshow.imdbid.ToLower <> TextBox12.Text.ToLower Then
                changed += 2
            End If
            If changed > 0 Then
                If changed = 1 Then
                    tempint = MessageBox.Show("It appears that you have changed the TVDB ID" & vbCrLf & "Media Companion depends on this ID for scraping episodes and art" & vbCrLf & vbCrLf & "Are you sure you wish to continue and save this?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
                    If tempint = DialogResult.No Then
                        Exit Sub
                    End If
                ElseIf changed = 2 Then
                    tempint = MessageBox.Show("It appears that you have changed the IMDB ID" & vbCrLf & "Media Companion depends on this ID for scraping actors from IMDB" & vbCrLf & vbCrLf & "Are you sure you wish to continue and save this?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
                    If tempint = DialogResult.No Then
                        Exit Sub
                    End If
                ElseIf changed = 3 Then
                    tempint = MessageBox.Show("It appears that you have changed the IMDB ID & TVDB ID" & vbCrLf & "Media Companion depends on these IDs being correct for a number of scraping operations" & vbCrLf & vbCrLf & "Are you sure you wish to continue and save this?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
                    If tempint = DialogResult.No Then
                        Exit Sub
                    End If
                End If
            End If
            'its a tvshow
            Dim TVShowNFOContent As String = ""
            If TextBox2.Text.ToLower.IndexOf(", the") = TextBox2.Text.Length - 5 And TextBox2.Text.Length > 5 Then
                TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "title", "The " & TextBox2.Text.Substring(0, TextBox2.Text.Length - 5))
            Else
                TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "title", TextBox2.Text)
            End If
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "plot", TextBox19.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "runtime", TextBox15.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "premiered", TextBox10.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "studio", TextBox16.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "rating", TextBox13.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "id", TextBox12.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "tvdbid", TextBox9.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "mpaa", TextBox14.Text)
            If TVShowNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            'title(2)
            'plot(19)
            'Runtime(15)
            'premiered(10)
            'studio(16)
            'rating(13)
            'genre(11)
            'IMDBID(12)
            'TVDBID(9)
            'Cert(14)
            'Call nfofunction.savetvshownfo(workingtvshow.path, workingtvshow, True)
            Dim node As TreeNode
            For Each node In TreeView1.Nodes
                If node.Name = workingtvshow.path Then
                    node.Text = TextBox2.Text
                    Exit For
                End If
            Next
            Call savetvdata()
            rebuildselectedshow(Node.Name.ToString)
            'reloadtvshow()
        Else
            'its an episode


            Dim trueseason As String = workingepisode(workingepisodeindex).seasonno
            Dim trueepisode As String = workingepisode(workingepisodeindex).episodeno
            If trueseason.Length = 1 Then trueseason = "0" & trueseason
            If trueepisode.Length = 1 Then trueepisode = "0" & trueepisode
            tempstring = "S" & trueseason & "E" & trueepisode & " - "
            Dim Temp As String = TextBox2.Text.Replace(tempstring, "")
            Dim TVShowEpisodeNFOContent As String = ""
            TVShowEpisodeNFOContent = nfofunction.ChangeFieldEpisodeTVShow(workingepisode(0).episodepath, "title", Temp)
            If TVShowEpisodeNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingepisode(0).episodepath, TVShowEpisodeNFOContent)

            TVShowEpisodeNFOContent = nfofunction.ChangeFieldEpisodeTVShow(workingepisode(0).episodepath, "plot", TextBox21.Text)
            If TVShowEpisodeNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingepisode(0).episodepath, TVShowEpisodeNFOContent)

            TVShowEpisodeNFOContent = nfofunction.ChangeFieldEpisodeTVShow(workingepisode(0).episodepath, "aired", TextBox24.Text)
            If TVShowEpisodeNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingepisode(0).episodepath, TVShowEpisodeNFOContent)

            TVShowEpisodeNFOContent = nfofunction.ChangeFieldEpisodeTVShow(workingepisode(0).episodepath, "rating", TextBox20.Text)
            If TVShowEpisodeNFOContent <> "error" Then Dim DiditWork As Boolean = CreateMovieNfo(workingepisode(0).episodepath, TVShowEpisodeNFOContent)

            'workingepisode(workingepisodeindex).director = TextBox22.Text
            'workingepisode(workingepisodeindex).aired = TextBox24.Text
            'workingepisode(workingepisodeindex).credits = TextBox23.Text
            'workingepisode(workingepisodeindex).plot = TextBox21.Text
            'workingepisode(workingepisodeindex).rating = TextBox20.Text
            ''workingepisode(workingepisodeindex).title = TextBox2.Text
            'Dim trueseason As String = workingepisode(workingepisodeindex).seasonno
            'Dim trueepisode As String = workingepisode(workingepisodeindex).episodeno
            'If trueseason.Length = 1 Then trueseason = "0" & trueseason
            'If trueepisode.Length = 1 Then trueepisode = "0" & trueepisode
            'tempstring = "S" & trueseason & "E" & trueepisode & " - "
            'workingepisode(workingepisodeindex).title = TextBox2.Text.Replace(tempstring, "")
            'Call nfofunction.saveepisodenfo(workingepisode, workingepisode(0).episodepath, workingepisode(workingepisodeindex).seasonno, workingepisode(workingepisodeindex).episodeno)
            Dim MainNode As TreeNode
            For Each node As TreeNode In TreeView1.Nodes
                For Each childnode In node.Nodes
                    Dim counter As Integer = -1
                    For Each epie In childnode.nodes
                        If epie.Name = workingepisode(0).episodepath Then
                            counter += 1
                            If counter = workingepisodeindex Then
                                Dim eps As String
                                MainNode = node
                                If workingepisode(workingepisodeindex).episodeno < 10 Then
                                    eps = "0" & workingepisode(workingepisodeindex).episodeno
                                Else
                                    eps = workingepisode(workingepisodeindex).episodeno.ToString
                                End If
                                eps = eps & " - " & workingepisode(workingepisodeindex).title
                                epie.Text = eps
                            End If
                        End If
                    Next
                Next
            Next
            savetvdata()
            rebuildselectedshow(MainNode.Name.ToString)
        End If
    End Sub

    Private Sub Button44_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button44.Click
        Dim tempint As Integer
        Dim tempstring As String = ""
        If Panel9.Visible = False Then
            'its a tv show
            tempint = MessageBox.Show("Rescraping the TV Show will Overwrite all the current details" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
            If tempint = DialogResult.No Then
                Exit Sub
            End If
            Dim messbox As message_box = New message_box("The Selected TV Show is being Rescraped", "", "Please Wait")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()
            Dim langu As String = workingtvshow.language
            If langu = "" Then langu = "en"


            If userprefs.tvshow_useXBMC_Scraper = True Then

                Dim TVShowNFOContent As String = XBMCScrape_TVShow_General_Info("metadata.tvdb.com", workingtvshow.tvdbid, langu, workingtvshow.path)
                If TVShowNFOContent <> "error" Then CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
                Call loadtvshow(workingtvshow.path)
                For Each item In basictvlist
                    If item.fullpath = workingtvshow.path Then
                        Dim newitem As New BasicTvShowNFO
                        For Each episode In item.allepisodes
                            newitem.allepisodes.Add(episode)
                        Next
                        newitem.fullpath = item.fullpath
                        newitem.status = "ok"
                        newitem.episodeactorsource = item.episodeactorsource
                        newitem.genre = workingtvshow.genre
                        newitem.imdbid = workingtvshow.imdbid
                        newitem.language = workingtvshow.language
                        newitem.rating = workingtvshow.rating
                        newitem.sortorder = workingtvshow.sortorder
                        newitem.title = workingtvshow.title
                        newitem.titleandyear = item.titleandyear
                        newitem.tvdbid = workingtvshow.tvdbid
                        newitem.year = workingtvshow.year
                        basictvlist.Remove(item)
                        basictvlist.Add(newitem)
                        Call populatetvtree()
                        Exit For
                    End If
                Next
                messbox.Close()
                TabControl3.SelectedIndex = 0
                Exit Sub
            Else

                'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
                Dim tvdbstuff As New TVDBScraper
                Dim tvshowxmlstring As String = tvdbstuff.getshow(workingtvshow.tvdbid, langu)
                If tvshowxmlstring = "!!!Error!!!" Then
                    MsgBox("Error scraping show")
                    Exit Sub
                End If
                Dim showlist As New XmlDocument
                showlist.LoadXml(tvshowxmlstring)
                workingtvshow.listactors.Clear()
                Dim thisresult As XmlNode = Nothing
                Dim maxcount As Integer = 0
                For Each thisresult In showlist("fulltvshow")
                    Select Case thisresult.Name
                        Case "title"
                            workingtvshow.title = thisresult.InnerText
                        Case "mpaa"
                            workingtvshow.mpaa = thisresult.InnerText
                        Case "premiered"
                            workingtvshow.premiered = thisresult.InnerText
                        Case "genre"
                            Dim newstring As String
                            newstring = thisresult.InnerText
                            newstring = newstring.TrimEnd("|")
                            newstring = newstring.TrimStart("|")
                            newstring = newstring.Replace("|", " / ")
                            workingtvshow.genre = newstring
                        Case "imdbid"
                            workingtvshow.imdbid = thisresult.InnerText
                        Case "studio"
                            workingtvshow.studio = thisresult.InnerText
                        Case "plot"
                            workingtvshow.plot = thisresult.InnerText
                        Case "rating"
                            workingtvshow.rating = thisresult.InnerText
                        Case "runtime"
                            workingtvshow.runtime = thisresult.InnerText
                        Case "episodeguideurl"
                            workingtvshow.episodeguideurl = thisresult.InnerText
                        Case "actor"
                            If maxcount >= userprefs.maxactors Then
                                Exit For
                            End If
                            maxcount += 1
                            Dim id As String = ""
                            Dim acts As New MovieActors
                            Dim results As XmlNode = Nothing
                            Dim lan As New possibleshowlist

                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "name"
                                        acts.actorname = results.InnerText
                                    Case "role"
                                        acts.actorrole = results.InnerText
                                    Case "thumb"
                                        acts.actorthumb = results.InnerText
                                    Case "actorid"
                                        id = results.InnerText
                                End Select
                            Next

                            If acts.actorthumb <> Nothing Then
                                If acts.actorthumb <> "" And userprefs.actorseasy = True Then
                                    If workingtvshow.tvshowactorsource <> "imdb" Or workingtvshow.imdbid = Nothing Then
                                        Dim workingpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "")
                                        workingpath = workingpath & ".actors\"
                                        Dim hg As New IO.DirectoryInfo(workingpath)
                                        Dim destsorted As Boolean = False
                                        If Not hg.Exists Then
                                            Try
                                                IO.Directory.CreateDirectory(workingpath)
                                                destsorted = True
                                            Catch ex As Exception

                                            End Try
                                        Else
                                            destsorted = True
                                        End If
                                        If destsorted = True Then
                                            Dim filename As String = acts.actorname.Replace(" ", "_")
                                            filename = filename & ".tbn"
                                            filename = IO.Path.Combine(workingpath, filename)
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = acts.actorthumb
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While

                                            Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                            fstrm.Write(buffer, 0, bytesRead)
                                            contents.Close()
                                            fstrm.Close()
                                        End If
                                    End If
                                End If
                                If userprefs.actorsave = True And id <> "" And userprefs.actorseasy = False Then
                                    Dim workingpath As String = ""
                                    Dim networkpath As String = Form1.userprefs.actorsavepath
                                    Try
                                        tempstring = networkpath & "\" & id.Substring(id.Length - 2, 2)
                                        Dim hg As New IO.DirectoryInfo(tempstring)
                                        If Not hg.Exists Then
                                            IO.Directory.CreateDirectory(tempstring)
                                        End If
                                        workingpath = networkpath & "\" & id.Substring(id.Length - 2, 2) & "\tv" & id & ".jpg"
                                        If Not IO.File.Exists(workingpath) Then
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = acts.actorthumb
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While

                                            Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                            fstrm.Write(buffer, 0, bytesRead)
                                            contents.Close()
                                            fstrm.Close()
                                        End If
                                        acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2))
                                        If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                            acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2) & "/tv" & id & ".jpg")
                                        Else
                                            acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2) & "\tv" & id & ".jpg")
                                        End If

                                    Catch
                                    End Try
                                End If
                            End If
                            Dim exists As Boolean = False
                            For Each actors In workingtvshow.listactors
                                If actors.actorname = acts.actorname And actors.actorrole = acts.actorrole Then
                                    exists = True
                                End If
                            Next
                            If exists = False Then
                                workingtvshow.listactors.Add(acts)
                            End If
                    End Select
                Next
                If workingtvshow.tvshowactorsource = "imdb" And workingtvshow.imdbid <> Nothing Then
                    workingtvshow.listactors.Clear()
                    '                    Dim imdbscraper As New imdb.Classimdbscraper
                    Dim imdbscraper As New Classimdb
                    Dim actorlist As String
                    Dim actorstring As New XmlDocument
                    actorlist = imdbscraper.getimdbactors(userprefs.imdbmirror, workingtvshow.imdbid)
                    Try
                        actorstring.LoadXml(actorlist)
                        thisresult = Nothing
                        Dim actorcount As Integer = 0
                        For Each thisresult In actorstring("actorlist")
                            Select Case thisresult.Name
                                Case "actor"
                                    If actorcount > userprefs.maxactors Then
                                        Exit For
                                    End If
                                    actorcount += 1
                                    Dim newactor As New MovieActors
                                    Dim detail As XmlNode = Nothing
                                    For Each detail In thisresult.ChildNodes
                                        Select Case detail.Name
                                            Case "name"
                                                newactor.actorname = detail.InnerText
                                            Case "role"
                                                newactor.actorrole = detail.InnerText
                                            Case "thumb"
                                                newactor.actorthumb = detail.InnerText
                                            Case "actorid"
                                                If newactor.actorthumb <> Nothing Then
                                                    If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                        Dim workingpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "")
                                                        workingpath = workingpath & ".actors\"
                                                        Dim hg As New IO.DirectoryInfo(workingpath)
                                                        Dim destsorted As Boolean = False
                                                        If Not hg.Exists Then
                                                            Try
                                                                IO.Directory.CreateDirectory(workingpath)
                                                                destsorted = True
                                                            Catch ex As Exception

                                                            End Try
                                                        Else
                                                            destsorted = True
                                                        End If
                                                        If destsorted = True Then
                                                            Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                            filename = filename & ".tbn"
                                                            filename = IO.Path.Combine(workingpath, filename)
                                                            Dim buffer(4000000) As Byte
                                                            Dim size As Integer = 0
                                                            Dim bytesRead As Integer = 0
                                                            Dim thumburl As String = newactor.actorthumb
                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                            Dim contents As Stream = res.GetResponseStream()
                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                            While bytesToRead > 0
                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                If size = 0 Then Exit While
                                                                bytesToRead -= size
                                                                bytesRead += size
                                                            End While

                                                            Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                            fstrm.Write(buffer, 0, bytesRead)
                                                            contents.Close()
                                                            fstrm.Close()
                                                        End If
                                                    End If
                                                    If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                        Dim workingpath As String = ""
                                                        Dim networkpath As String = Form1.userprefs.actorsavepath
                                                        Try
                                                            tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                            Dim hg As New IO.DirectoryInfo(tempstring)
                                                            If Not hg.Exists Then
                                                                IO.Directory.CreateDirectory(tempstring)
                                                            End If
                                                            workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                            If Not IO.File.Exists(workingpath) Then
                                                                Dim buffer(4000000) As Byte
                                                                Dim size As Integer = 0
                                                                Dim bytesRead As Integer = 0
                                                                Dim thumburl As String = newactor.actorthumb
                                                                Dim req As HttpWebRequest = req.Create(thumburl)
                                                                Dim res As HttpWebResponse = req.GetResponse()
                                                                Dim contents As Stream = res.GetResponseStream()
                                                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                While bytesToRead > 0
                                                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                    If size = 0 Then Exit While
                                                                    bytesToRead -= size
                                                                    bytesRead += size
                                                                End While

                                                                Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                fstrm.Write(buffer, 0, bytesRead)
                                                                contents.Close()
                                                                fstrm.Close()
                                                            End If
                                                            newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                            If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                            Else
                                                                newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                            End If
                                                        Catch
                                                        End Try
                                                    End If
                                                End If
                                        End Select
                                    Next
                                    workingtvshow.listactors.Add(newactor)
                            End Select
                        Next
                        scraperlog = scraperlog & "Actors scraped OK"
                        While workingtvshow.listactors.Count > userprefs.maxactors
                            workingtvshow.listactors.RemoveAt(workingtvshow.listactors.Count - 1)
                        End While
                    Catch ex As Exception

                    End Try

                End If
                Call nfofunction.savetvshownfo(workingtvshow.path, workingtvshow, True)
                Call loadtvshow(workingtvshow.path)
                For Each item In basictvlist
                    If item.fullpath = workingtvshow.path Then
                        Dim newitem As New BasicTvShowNFO
                        For Each episode In item.allepisodes
                            newitem.allepisodes.Add(episode)
                        Next
                        newitem.fullpath = item.fullpath
                        newitem.status = "ok"
                        newitem.episodeactorsource = item.episodeactorsource
                        newitem.genre = workingtvshow.genre
                        newitem.imdbid = workingtvshow.imdbid
                        newitem.language = workingtvshow.language
                        newitem.rating = workingtvshow.rating
                        newitem.sortorder = workingtvshow.sortorder
                        newitem.title = workingtvshow.title
                        newitem.titleandyear = item.titleandyear
                        newitem.tvdbid = workingtvshow.tvdbid
                        newitem.year = workingtvshow.year
                        basictvlist.Remove(item)
                        basictvlist.Add(newitem)
                        Call populatetvtree()
                        Exit For
                    End If
                Next
                messbox.Close()
            End If
        Else
            'its an episode
            tempint = MessageBox.Show("Rescraping the Episode will Overwrite all the current details" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
            If tempint = DialogResult.No Then
                Exit Sub
            End If
            Dim messbox As message_box = New message_box("The Selected Episode is being Rescraped", "", "Please Wait")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()
            Dim newepisode As New EpisodeInfo
            Dim sortorder As String = workingtvshow.sortorder
            Dim language As String = workingtvshow.language
            Dim actorsource As String = workingtvshow.episodeactorsource
            Dim tvdbid As String = workingtvshow.tvdbid
            Dim imdbid As String = workingtvshow.imdbid
            Dim seasonno As String = workingepisode(workingepisodeindex).seasonno
            Dim episodeno As String = workingepisode(workingepisodeindex).episodeno
            'its an episode
            'Dim episodescraper As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
            Dim episodescraper As New TVDBScraper
            If sortorder = "" Then sortorder = "default"
            If language = "" Then language = "en"
            If actorsource = "" Then actorsource = "tvdb"
            Dim tempepisode As String = episodescraper.getepisode(tvdbid, sortorder, seasonno, episodeno, language)


            Dim scrapedepisode As New XmlDocument
            Try
                scrapedepisode.LoadXml(tempepisode)
                Dim thisresult As XmlNode = Nothing
                For Each thisresult In scrapedepisode("episodedetails")
                    Select Case thisresult.Name
                        Case "title"
                            newepisode.title = thisresult.InnerText
                        Case "premiered"
                            newepisode.aired = thisresult.InnerText
                        Case "plot"
                            newepisode.plot = thisresult.InnerText
                        Case "director"
                            newepisode.director = thisresult.InnerText
                            newepisode.director = newepisode.director.TrimStart("|")
                            newepisode.director = newepisode.director.TrimEnd("|")
                            newepisode.director = newepisode.director.Replace("|", " / ")
                        Case "credits"
                            newepisode.credits = thisresult.InnerText
                            newepisode.credits = newepisode.credits.TrimStart("|")
                            newepisode.credits = newepisode.credits.TrimEnd("|")
                            newepisode.credits = newepisode.credits.Replace("|", " / ")
                        Case "rating"
                            newepisode.rating = thisresult.InnerText
                        Case "thumb"
                            newepisode.thumb = thisresult.InnerText
                        Case "genre"
                            newepisode.genre = thisresult.InnerText
                        Case "actor"
                            Dim actors As XmlNode = Nothing
                            For Each actorl In thisresult.ChildNodes
                                Select Case actorl.name
                                    Case "name"
                                        Dim newactor As New MovieActors
                                        newactor.actorname = actorl.innertext
                                        newepisode.listactors.Add(newactor)
                                End Select
                            Next
                    End Select
                Next
                newepisode.playcount = "0"
            Catch ex As Exception

            End Try

            If actorsource = "tvdb" Then
                If newepisode.listactors.Count > 0 Then
                    workingtvshow.listactors.Clear()
                    For Each act In newepisode.listactors
                        workingtvshow.listactors.Add(act)
                    Next
                End If
            Else
                tvscraperlog = tvscraperlog & "Scraping actors from IMDB" & vbCrLf
                Dim url As String
                url = "http://www.imdb.com/title/" & imdbid & "/episodes"
                Dim tvfblinecount As Integer = 0
                Dim tvdbwebsource(10000)
                tvfblinecount = 0
                If bckgroundscanepisodes.CancellationPending Then
                    tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                    Exit Sub
                End If
                Try
                    Dim wrGETURL As WebRequest
                    wrGETURL = WebRequest.Create(url)
                    Dim myProxy As New WebProxy("myproxy", 80)
                    myProxy.BypassProxyOnLocal = True
                    Dim objStream As Stream
                    objStream = wrGETURL.GetResponse.GetResponseStream()
                    Dim objReader As New StreamReader(objStream)
                    Dim tvdbsLine As String = ""
                    tvfblinecount = 0

                    Do While Not tvdbsLine Is Nothing
                        tvfblinecount += 1
                        tvdbsLine = objReader.ReadLine
                        If Not tvdbsLine Is Nothing Then
                            tvdbwebsource(tvfblinecount) = tvdbsLine
                        End If
                        If bckgroundscanepisodes.CancellationPending Then
                            tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                            Exit Sub
                        End If
                    Loop
                    objReader.Close()
                    tvfblinecount -= 1
                Catch ex As WebException
                    tvdbwebsource(0) = "404"
                End Try
                If tvfblinecount <> 0 Then
                    Dim tvtempstring As String
                    tvtempstring = "Season " & seasonno & ", Episode " & episodeno & ":"
                    For g = 1 To tvfblinecount
                        If tvdbwebsource(g).indexof(tvtempstring) <> -1 Then
                            Dim tvtempint As Integer
                            tvtempint = tvdbwebsource(g).indexof("<a href=""/title/")
                            If tvtempint <> -1 Then
                                tvtempstring = tvdbwebsource(g).substring(tvtempint + 16, 9)
                                '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
                                Dim scraperfunction As New Classimdb
                                Dim actorlist As String = ""
                                actorlist = scraperfunction.getimdbactors(userprefs.imdbmirror, tvtempstring, , userprefs.maxactors)
                                Dim tempactorlist As New List(Of MovieActors)
                                Dim thumbstring As New XmlDocument
                                Dim thisresult As XmlNode = Nothing
                                Try
                                    thumbstring.LoadXml(actorlist)
                                    thisresult = Nothing
                                    Dim actorcount As Integer = 0
                                    For Each thisresult In thumbstring("actorlist")
                                        If bckgroundscanepisodes.CancellationPending Then
                                            tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                            Exit Sub
                                        End If
                                        Select Case thisresult.Name
                                            Case "actor"
                                                If actorcount > userprefs.maxactors Then
                                                    Exit For
                                                End If
                                                actorcount += 1

                                                Dim newactor As New MovieActors
                                                Dim detail As XmlNode = Nothing
                                                For Each detail In thisresult.ChildNodes
                                                    Select Case detail.Name
                                                        Case "name"
                                                            newactor.actorname = detail.InnerText
                                                        Case "role"
                                                            newactor.actorrole = detail.InnerText
                                                        Case "thumb"
                                                            newactor.actorthumb = detail.InnerText
                                                        Case "actorid"
                                                            If newactor.actorthumb <> Nothing Then
                                                                If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                                    Dim workingpath As String = workingepisode(workingepisodeindex).episodepath.Replace(IO.Path.GetFileName(workingepisode(workingepisodeindex).episodepath), "")
                                                                    workingpath = workingpath & ".actors\"
                                                                    Dim hg As New IO.DirectoryInfo(workingpath)
                                                                    Dim destsorted As Boolean = False
                                                                    If Not hg.Exists Then
                                                                        Try
                                                                            IO.Directory.CreateDirectory(workingpath)
                                                                            destsorted = True
                                                                        Catch ex As Exception

                                                                        End Try
                                                                    Else
                                                                        destsorted = True
                                                                    End If
                                                                    If destsorted = True Then
                                                                        Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                                        filename = filename & ".tbn"
                                                                        Dim tvshowactorpath As String = workingtvshow.path
                                                                        tvshowactorpath = tvshowactorpath.Replace(IO.Path.GetFileName(tvshowactorpath), "")
                                                                        tvshowactorpath = IO.Path.Combine(tvshowactorpath, ".actors\")
                                                                        tvshowactorpath = IO.Path.Combine(tvshowactorpath, filename)

                                                                        filename = IO.Path.Combine(workingpath, filename)
                                                                        If userprefs.copytvactorthumbs = True Then
                                                                            If IO.File.Exists(tvshowactorpath) Then
                                                                                Try
                                                                                    IO.File.Copy(tvshowactorpath, filename, True)
                                                                                Catch
                                                                                End Try
                                                                            End If
                                                                        End If
                                                                        If Not IO.File.Exists(filename) Then
                                                                            Dim buffer(4000000) As Byte
                                                                            Dim size As Integer = 0
                                                                            Dim bytesRead As Integer = 0
                                                                            Dim thumburl As String = newactor.actorthumb
                                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                                            Dim contents As Stream = res.GetResponseStream()
                                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                            While bytesToRead > 0
                                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                                If size = 0 Then Exit While
                                                                                bytesToRead -= size
                                                                                bytesRead += size
                                                                            End While

                                                                            Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                            fstrm.Write(buffer, 0, bytesRead)
                                                                            contents.Close()
                                                                            fstrm.Close()
                                                                        End If
                                                                    End If
                                                                End If
                                                                If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                                    Dim workingpath As String = ""
                                                                    Dim networkpath As String = Form1.userprefs.actorsavepath
                                                                    Try
                                                                        tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                        Dim hg As New IO.DirectoryInfo(tempstring)
                                                                        If Not hg.Exists Then
                                                                            IO.Directory.CreateDirectory(tempstring)
                                                                        End If
                                                                        workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                        If Not IO.File.Exists(workingpath) Then
                                                                            Dim buffer(4000000) As Byte
                                                                            Dim size As Integer = 0
                                                                            Dim bytesRead As Integer = 0
                                                                            Dim thumburl As String = newactor.actorthumb
                                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                                            Dim contents As Stream = res.GetResponseStream()
                                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                            While bytesToRead > 0
                                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                                If size = 0 Then Exit While
                                                                                bytesToRead -= size
                                                                                bytesRead += size
                                                                            End While
                                                                            Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                            fstrm.Write(buffer, 0, bytesRead)
                                                                            contents.Close()
                                                                            fstrm.Close()
                                                                        End If
                                                                        newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                        If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                            newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                        Else
                                                                            newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                        End If
                                                                    Catch
                                                                    End Try
                                                                End If
                                                            End If
                                                    End Select
                                                Next
                                                tempactorlist.Add(newactor)
                                        End Select
                                    Next
                                Catch ex As Exception
                                    tvscraperlog = tvscraperlog & "Error scraping episode actors from IMDB, " & vbCrLf & ex.Message.ToString & vbCrLf & vbCrLf
                                End Try




                                If tempactorlist.Count > 0 Then
                                    While tempactorlist.Count > userprefs.maxactors
                                        tempactorlist.RemoveAt(tempactorlist.Count - 1)
                                    End While
                                    newepisode.listactors.Clear()
                                    For Each actor In tempactorlist
                                        newepisode.listactors.Add(actor)
                                    Next
                                    tempactorlist.Clear()
                                End If
                                Exit For
                            End If
                        End If
                    Next
                End If
            End If
            If newepisode.title <> "" Then
                workingepisode(workingepisodeindex).aired = newepisode.aired
                workingepisode(workingepisodeindex).credits = newepisode.credits
                workingepisode(workingepisodeindex).director = newepisode.director
                workingepisode(workingepisodeindex).genre = newepisode.genre
                workingepisode(workingepisodeindex).plot = newepisode.plot
                workingepisode(workingepisodeindex).rating = newepisode.rating
                workingepisode(workingepisodeindex).title = newepisode.title
                workingepisode(workingepisodeindex).listactors.Clear()
                For Each actor In newepisode.listactors
                    workingepisode(workingepisodeindex).listactors.Add(actor)
                Next
















                If userprefs.enablehdtags = True Then
                    workingepisode(workingepisodeindex).filedetails = filefunction.get_hdtags(filefunction.getfilename(workingepisode(workingepisodeindex).episodepath))
                    If workingepisode(workingepisodeindex).filedetails.filedetails_video.duration <> Nothing Then
                        Try
                            '1h 24mn 48s 546ms
                            Dim hours As Integer
                            Dim minutes As Integer
                            tempstring = workingepisode(workingepisodeindex).filedetails.filedetails_video.duration
                            tempint = tempstring.IndexOf("h")
                            If tempint <> -1 Then
                                hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                tempstring = Trim(tempstring)
                            End If
                            tempint = tempstring.IndexOf("mn")
                            If tempint <> -1 Then
                                minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                            End If
                            If hours <> 0 Then
                                hours = hours * 60
                            End If
                            minutes = minutes + hours
                            workingepisode(workingepisodeindex).runtime = minutes.ToString & " min"
                        Catch
                        End Try
                    End If
                End If






















                Call nfofunction.saveepisodenfo(workingepisode, workingepisode(0).episodepath)
                Call loadtvepisode(workingepisode(workingepisodeindex).episodepath, workingepisode(workingepisodeindex).seasonno, workingepisode(workingepisodeindex).episodeno)
                messbox.Close()
            End If
        End If
    End Sub

    Private Sub Button45_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button45.Click
        Dim TVShowNFOContent As String = ""
        If Button45.Text = "TVDB" Then
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "tvshowactorsource", "imdb")
        Else
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "tvshowactorsource", "tvdb")
        End If
        Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
        If DiditWork = True Then
            If Button45.Text = "TVDB" Then
                Button45.Text = "IMDB"
            Else
                Button45.Text = "TVDB"
            End If
        End If
    End Sub

    Private Sub Button46_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button46.Click
        Dim TVShowNFOContent As String = ""
        If Button46.Text = "TVDB" Then
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "episodeactorsource", "imdb")
        Else
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "episodeactorsource", "tvdb")
        End If
        Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
        If DiditWork = True Then
            If Button46.Text = "TVDB" Then
                Button46.Text = "IMDB"
            Else
                Button46.Text = "TVDB"
            End If
        End If
    End Sub

    Private Sub Button47_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button47.Click

        Dim TVShowNFOContent As String = ""
        If Button47.Text = "Default" Then
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "sortorder", "dvd")
        Else
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "sortorder", "default")
        End If
        Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
        If DiditWork = True Then
            If Button47.Text = "Default" Then
                Button47.Text = "DVD"
                workingtvshow.sortorder = "dvd"
            Else
                Button47.Text = "Default"
                workingtvshow.sortorder = "default"
            End If
            For Each Shows In basictvlist
                If workingtvshow.path = Shows.fullpath Then
                    Dim newtv As New BasicTvShowNFO
                    newtv = Shows
                    If Button47.Text = "Default" Then
                        newtv.sortorder = "default"
                    Else
                        newtv.sortorder = "dvd"
                    End If
                    basictvlist.Remove(Shows)
                    basictvlist.Add(newtv)
                    Exit For
                End If
            Next
        End If
        '        Call nfofunction.savetvshownfo(workingtvshow.path, workingtvshow, True)
    End Sub

    Private Sub RenameTVShowsToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RenameTVShowsToolStripMenuItem.Click
        Dim renamelog As String = ""
        Dim tempint As Integer


        Dim s As String = ""
        Dim ee As String = ""
        Dim x As String = ""
        If userprefs.eprenamelowercase = False Then
            s = "S"
            ee = "E"
            x = "X"
        Else
            s = "s"
            ee = "e"
            x = "x"
        End If

        Dim oldname As String = ""

        Dim noder As TreeNode
        Dim extensioncount As Integer
        Dim extensions(100)
        extensions(1) = ".avi"
        extensions(2) = ".xvid"
        extensions(3) = ".divx"
        extensions(4) = ".img"
        extensions(5) = ".mpg"
        extensions(6) = ".mpeg"
        extensions(7) = ".mov"
        extensions(8) = ".rm"
        extensions(9) = ".3gp"
        extensions(10) = ".m4v"
        extensions(11) = ".wmv"
        extensions(12) = ".asf"
        extensions(13) = ".mp4"
        extensions(14) = ".mkv"
        extensions(15) = ".nrg"
        extensions(16) = ".iso"
        extensions(17) = ".rmvb"
        extensions(18) = ".ogm"
        extensions(19) = ".bin"
        extensions(20) = ".ts"
        extensions(21) = ".vob"
        extensions(22) = ".m2ts"
        extensions(23) = ".flv"
        extensions(24) = ".dvr-ms"
        extensioncount = 24
        Dim nfofilestorename As New List(Of String)
        nfofilestorename.Clear()
        Dim donelist As New List(Of String)
        donelist.Clear()
        If TreeView1.SelectedNode.Name.IndexOf("Missing: ") <> 0 Then
            If IO.Path.GetExtension(TreeView1.SelectedNode.Name).ToLower = ".nfo" And IO.Path.GetFileName(TreeView1.SelectedNode.Name).ToLower <> "tvshow.nfo" Then
                'individual episode
                tempint = MessageBox.Show("Using this option will rename the selected episode" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
                If tempint = DialogResult.No Then
                    Exit Sub
                End If
                If Not nfofilestorename.Contains(TreeView1.SelectedNode.Name) And TreeView1.SelectedNode.Name.IndexOf("Missing: ") <> 0 Then
                    nfofilestorename.Add(TreeView1.SelectedNode.Name)
                End If
            ElseIf IO.Path.GetExtension(TreeView1.SelectedNode.Name) = "" Then
                'season
                tempint = MessageBox.Show("Using this option will rename all episode nfo's within the selected season" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
                If tempint = DialogResult.No Then
                    Exit Sub
                End If
                Dim childnode As TreeNode
                For Each childnode In TreeView1.SelectedNode.Nodes
                    If Not nfofilestorename.Contains(childnode.Name) And childnode.Name.IndexOf("Missing: ") <> 0 Then
                        nfofilestorename.Add(childnode.Name)
                    End If
                Next
            ElseIf IO.Path.GetExtension(TreeView1.SelectedNode.Name).ToLower = ".nfo" And IO.Path.GetFileName(TreeView1.SelectedNode.Name).ToLower = "tvshow.nfo" Then
                'full show
                tempint = MessageBox.Show("Using this option will rename all episode nfo's within the selected show" & vbCrLf & "Do you wish to continue?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Warning)
                If tempint = DialogResult.No Then
                    Exit Sub
                End If
                Dim childnode As TreeNode
                Dim childchildnode As TreeNode
                For Each childnode In TreeView1.SelectedNode.Nodes
                    For Each childchildnode In childnode.Nodes
                        If Not nfofilestorename.Contains(childchildnode.Name) And childchildnode.Name.IndexOf("Missing: ") <> 0 Then
                            nfofilestorename.Add(childchildnode.Name)
                        End If
                    Next
                Next
            End If
        End If
     
        Dim messbox As New message_box("Renaming episodes,", "", "   Please Wait")
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()
        If nfofilestorename.Count <= 0 Then
            messbox.Close()
            Exit Sub
        End If
        renamelog = renamelog & nfofilestorename.Count & " nfo's to rename" & vbCrLf & vbCrLf
        For Each renamefile In nfofilestorename
            Dim seasonno As String = ""
            Dim episodetitle As String = ""
            Dim showtitle As String = ""
            Dim episodeno As New List(Of String)
            episodeno.Clear()
            For Each tvshow In basictvlist
                Dim showpath As String = tvshow.fullpath.Replace(IO.Path.GetFileName(tvshow.fullpath), "")
                If renamefile.IndexOf(showpath) <> -1 Then
                    showtitle = tvshow.title
                    For Each episode In tvshow.allepisodes
                        If episode.episodepath = renamefile Then
                            If seasonno = "" Then
                                seasonno = episode.seasonno
                            End If
                            If episodetitle = "" Then
                                episodetitle = episode.title
                            End If
                            episodeno.Add(episode.episodeno)
                        End If
                    Next
                    Dim newfilename As String
                    newfilename = ""
                    If seasonno.Length = 1 Then
                        seasonno = "0" & seasonno
                    End If
                    For f = 0 To episodeno.Count - 1
                        If episodeno(f).Length = 1 Then
                            episodeno(f) = "0" & episodeno(f)
                        End If
                    Next
                    Select Case userprefs.tvrename
                        Case 0
                            'Show Title - S01E01 - Episode Title.ext
                            newfilename = showtitle & " - " & s & seasonno
                            For Each ep In episodeno
                                newfilename = newfilename & ee & ep
                            Next
                            newfilename = newfilename & " - " & episodetitle
                        Case 1
                            'S01E01 - Episode Title.ext
                            newfilename = s & seasonno
                            For Each ep In episodeno
                                newfilename = newfilename & ee & ep
                            Next
                            newfilename = newfilename & " - " & episodetitle
                        Case 2
                            'Show Title - 1x01 - Episode Title.ext
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            newfilename = showtitle & " - " & seasonno
                            For Each ep In episodeno
                                newfilename = newfilename & x & ep
                            Next
                            newfilename = newfilename & " - " & episodetitle
                        Case 3
                            '1x01 - Episode Title.ext
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            newfilename = seasonno
                            For Each ep In episodeno
                                newfilename = newfilename & x & ep
                            Next
                            newfilename = newfilename & " - " & episodetitle
                        Case 4
                            'Show Title - 101 - Episode Title.ext
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            newfilename = showtitle & " - " & seasonno
                            For f = 0 To episodeno.Count - 1
                                If f = 0 Then
                                    newfilename = newfilename & episodeno(f)
                                Else
                                    newfilename = newfilename & x & episodeno(f)
                                End If
                            Next
                            newfilename = newfilename & " - " & episodetitle
                        Case 5
                            '101 - Episode Title.ext
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            If seasonno.Length > 1 And seasonno.Substring(0, 1) = "0" Then
                                seasonno = seasonno.Substring(1, seasonno.Length - 1)
                            End If
                            newfilename = seasonno
                            For f = 0 To episodeno.Count - 1
                                If f = 0 Then
                                    newfilename = newfilename & episodeno(f)
                                Else
                                    newfilename = newfilename & x & episodeno(f)
                                End If
                            Next
                            newfilename = newfilename & " - " & episodetitle
                    End Select
                    newfilename = newfilename.Replace("?", "")
                    newfilename = newfilename.Replace("/", "")
                    newfilename = newfilename.Replace("\", "")
                    newfilename = newfilename.Replace("<", "")
                    newfilename = newfilename.Replace(">", "")
                    newfilename = newfilename.Replace(":", "")
                    newfilename = newfilename.Replace("""", "")
                    newfilename = newfilename.Replace("*", "")
                    Dim listtorename As New List(Of String)
                    listtorename.Clear()
                    listtorename.Add(renamefile)
                    For f = 1 To extensioncount
                        Dim temppath2 As String = renamefile.Replace(IO.Path.GetExtension(renamefile), extensions(f))
                        If IO.File.Exists(temppath2) Then
                            listtorename.Add(temppath2)
                        End If
                    Next
                    Dim temppath As String = renamefile
                    temppath = temppath.Replace(IO.Path.GetExtension(temppath), ".tbn")
                    If IO.File.Exists(temppath) Then
                        listtorename.Add(temppath)
                    End If
                    temppath = temppath.Replace(IO.Path.GetExtension(temppath), ".rar")
                    If IO.File.Exists(temppath) Then
                        listtorename.Add(temppath)
                    End If

                    Dim di As DirectoryInfo = New DirectoryInfo(renamefile.Replace(IO.Path.GetFileName(renamefile), ""))
                    Dim filenama As String = IO.Path.GetFileNameWithoutExtension(renamefile)
                    Dim fils As FileInfo() = di.GetFiles(filenama & ".*")
                    For Each fiNext In fils
                        If Not listtorename.Contains(fiNext.FullName) Then
                            listtorename.Add(fiNext.FullName)
                        End If
                    Next
                    Dim oldnfofile As String = ""
                    Dim newnfofile As String = ""
                    For Each items In listtorename
                        If IO.Path.GetExtension(items).ToLower = ".nfo" And oldnfofile = "" Then
                            oldnfofile = items
                            newnfofile = items.Replace(IO.Path.GetFileName(items), newfilename) & IO.Path.GetExtension(items)
                            newnfofile = newnfofile.Replace("..", ".")
                        End If
                        Dim newname As String = items.Replace(IO.Path.GetFileName(items), newfilename) & IO.Path.GetExtension(items)
                        newname = newname.Replace("..", ".")
                        Try
                            renamelog = renamelog & "Renaming" & vbCrLf
                            renamelog = renamelog & items & vbCrLf & " to " & vbCrLf & newname & vbCrLf
                            Dim fi As New FileInfo(items)
                            If Not IO.File.Exists(newname) Then
                                fi.MoveTo(newname)
                                If items.ToLower = IO.Path.Combine(TextBox17.Text, TextBox29.Text).ToLower Then
                                    TextBox29.Text = IO.Path.GetFileName(fi.FullName)
                                End If
                                renamelog = renamelog & "Succeeded" & vbCrLf & vbCrLf
                            Else
                                renamelog = renamelog & "Not Renamed - Same" & vbCrLf & vbCrLf
                            End If

                        Catch ex As Exception
                            renamelog = renamelog & "Not Succeeded" & vbCrLf & ex.Message.ToString
                        End Try
                    Next
                    renamelog = renamelog & "Updating Tables" & vbCrLf
                    Try
                        For Each noder2 In TreeView1.Nodes
                            If noder2.name = oldnfofile Then
                                noder2.name = newnfofile
                            End If
                            For Each noder3 In noder2.nodes
                                If noder3.name = oldnfofile Then
                                    noder3.name = newnfofile
                                End If
                                For Each noder4 In noder3.nodes
                                    If noder4.name = oldnfofile Then
                                        noder4.name = newnfofile
                                    End If
                                Next
                            Next
                        Next
                        For Each item In basictvlist
                            For Each ep In item.allepisodes
                                If ep.episodepath = oldnfofile Then
                                    ep.episodepath = newnfofile
                                End If
                            Next
                        Next
                        renamelog = renamelog & "Tables Updated" & vbCrLf & vbCrLf
                    Catch
                        renamelog = renamelog & "Failed to update tables, use 'Rebuild TV Shows' menu item to fix" & vbCrLf & vbCrLf
                    End Try
                End If
            Next
        Next
        Call savetvdata()
        messbox.Close()
        If userprefs.disabletvlogs = False Then
            Dim MyFormObject As New frmoutputlog(renamelog, True)
            Try
                MyFormObject.ShowDialog()
            Catch ex As ObjectDisposedException
            End Try
        End If
    End Sub

    Private Sub Button48_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button48.Click
        Try
            If IsNumeric(workingepisode(workingepisodeindex).playcount) Then
                If Convert.ToInt32(workingepisode(workingepisodeindex).playcount) <= 0 Then
                    workingepisode(workingepisodeindex).playcount = "1"
                    Button48.Text = "Watched"
                    Button48.BackColor = Color.Green
                Else
                    workingepisode(workingepisodeindex).playcount = "0"
                    Button48.Text = "UnWatched"
                    Button48.BackColor = Color.Red
                End If
            Else
                workingepisode(workingepisodeindex).playcount = "0"
                Button48.Text = "UnWatched"
                Button48.BackColor = Color.Red
            End If
            Call nfofunction.saveepisodenfo(workingepisode, workingepisode(0).episodepath)
        Catch ex As Exception

        End Try
    End Sub

    Private Sub setup_tvposters()
        If workingtvshow.tvdbid = currentposterid Then
            Exit Sub
        End If
        tvposterpage = 0
        imdbposterlist.Clear()
        tvdbposterlist.Clear()
        CheckBox8.Checked = True
        CheckBox8.Visible = False
        ComboBox2.Items.Clear()
        tvobjects.Clear()
        TextBox31.Text = workingtvshow.title
        Label72.Text = ""
        'If IO.File.Exists(workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")) Then
        '    Dim bmp As New Bitmap(workingtvshow.path.Replace("tvshow.nfo", "folder.jpg"))
        '    PictureBox12.Image = bmp
        'End If
        For i = Panel16.Controls.Count - 1 To 0 Step -1
            Panel16.Controls.RemoveAt(i)
        Next

        tvobjects.Add("Main Poster")
        For Each tvshow In basictvlist
            If tvshow.tvdbid = workingtvshow.tvdbid Then
                currentposterid = tvshow.tvdbid
                For Each ep In tvshow.allepisodes
                    If ep.seasonno <> "-1" Then
                        Dim exists As Boolean = False
                        Dim seasonstring As String = ""
                        If ep.seasonno.Length >= 2 Then
                            seasonstring = "Season " & ep.seasonno.ToString
                        ElseIf ep.seasonno.Length = 1 And ep.seasonno <> "0" Then
                            seasonstring = "Season 0" & ep.seasonno.ToString
                        ElseIf ep.seasonno = "0" Then
                            seasonstring = "Specials"
                        End If
                        For Each item In tvobjects
                            If item = seasonstring Then
                                exists = True
                                Exit For
                            End If
                        Next
                        If exists = False Then tvobjects.Add(seasonstring)
                    End If
                Next
                Exit For
            End If
        Next
        tvobjects.Sort()

        Try
            If TreeView1.SelectedNode.Text.IndexOf("Season") <> -1 Or TreeView1.SelectedNode.Text.IndexOf("Specials") <> -1 Then
                combostart = TreeView1.SelectedNode.Text
            End If
        Catch
        End Try
        Try
            If TreeView1.SelectedNode.Parent.Text.IndexOf("Season") <> -1 Or TreeView1.SelectedNode.Parent.Text.IndexOf("Specials") <> -1 Then
                combostart = TreeView1.SelectedNode.Parent.Text
            End If
        Catch
        End Try
        If combostart = "" Then
            combostart = "Main Poster"
        End If
        For Each item In tvobjects
            ComboBox2.Items.Add(item)
            If item = combostart Then
                Try
                    ComboBox2.SelectedIndex = ComboBox2.Items.Count - 1
                Catch
                End Try
            End If
        Next
        ComboBox2.Items.Add("Season All")
    End Sub

    Private Sub ComboBox2_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ComboBox2.SelectedIndexChanged
        Dim tempstring As String = ComboBox2.SelectedItem
        If tempstring = "Main Poster" Then
            CheckBox8.Visible = True
            Button53.Enabled = True
            If IO.File.Exists(workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")) Then
                Dim bmp As New Bitmap(workingtvshow.path.Replace("tvshow.nfo", "folder.jpg"))
                workingposterpath = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            Else
                workingposterpath = workingtvshow.path.Replace("tvshow.nfo", "folder.jpg")
                Dim bmp As New Bitmap(defaultposter)
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            End If
        ElseIf tempstring = "Specials" Then
            Button53.Enabled = True
            CheckBox8.Visible = False
            Dim path As String = workingtvshow.path.Replace("tvshow.nfo", "season-specials.tbn")
            If IO.File.Exists(path) Then
                workingposterpath = workingtvshow.path.Replace("tvshow.nfo", "season-specials.tbn")
                Dim bmp As New Bitmap(path)
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            Else
                If IO.File.Exists(workingtvshow.path.Replace("tvshow.nfo", "season00.tbn")) Then
                    Try
                        Dim fi As New FileInfo(workingtvshow.path.Replace("tvshow.nfo", "season00.tbn"))
                        Dim rename2 As String = workingtvshow.path.Replace("tvshow.nfo", "season-specials.tbn")
                        fi.MoveTo(rename2)
                    Catch ex As Exception
                        Dim bmp As New Bitmap(defaultposter)
                        Dim Image2 As New Bitmap(bmp)
                        bmp.Dispose()
                        PictureBox12.Image = Image2
                        Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
                    End Try
                Else
                    Dim bmp As New Bitmap(defaultposter)
                    Dim Image2 As New Bitmap(bmp)
                    bmp.Dispose()
                    PictureBox12.Image = Image2
                    Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
                End If
            End If
        ElseIf tempstring.IndexOf("Season") = 0 And tempstring.IndexOf("Season All") = -1 Then
            Button53.Enabled = True
            CheckBox8.Visible = False
            Dim path As String = tempstring.Replace("Season ", "")
            path = workingtvshow.path.Replace("tvshow.nfo", "season" & path & ".tbn")
            If IO.File.Exists(path) Then
                workingposterpath = path
                Dim bmp As New Bitmap(path)
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            Else
                workingposterpath = path
                Dim bmp As New Bitmap(defaultposter)
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            End If
        ElseIf tempstring = "Season All" Then
            CheckBox8.Visible = True
            Button53.Enabled = False
            Dim path As String = ""
            path = workingtvshow.path.Replace("tvshow.nfo", "season-all.tbn")
            If IO.File.Exists(path) Then
                workingposterpath = path
                Dim bmp As New Bitmap(path)
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            Else
                workingposterpath = path
                Dim bmp As New Bitmap(defaultposter)
                Dim Image2 As New Bitmap(bmp)
                bmp.Dispose()
                PictureBox12.Image = Image2
                Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
            End If
        End If
    End Sub

    Private Sub gettvdbthumbs()
        Dim showlist As New XmlDocument
        'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
        Dim tvdbstuff As New TVDBScraper
        Dim thumblist As String = tvdbstuff.getposterlist(workingtvshow.tvdbid)
        showlist.LoadXml(thumblist)
        'CheckBox3 = seasons
        'CheckBox4 = fanart
        'CheckBox5 = poster
        For Each thisresult In showlist("banners")
            Select Case thisresult.Name
                Case "banner"
                    Dim individualposter As New tvbanners
                    For Each results In thisresult.ChildNodes
                        Select Case results.Name
                            Case "url"
                                individualposter.url = results.InnerText
                            Case "bannertype"
                                individualposter.bannertype = results.InnerText
                            Case "resolution"
                                individualposter.resolution = results.InnerText
                            Case "language"
                                individualposter.language = results.InnerText
                            Case "season"
                                individualposter.season = results.InnerText
                        End Select
                    Next
                    individualposter.smallurl = individualposter.url.Replace("http://thetvdb.com/banners/", "http://thetvdb.com/banners/_cache/")
                    tvdbposterlist.Add(individualposter)
            End Select
        Next
    End Sub

    Private Sub Button53_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button53.Click
        'tvdb specific
        tvdbmode = True
        usedlist.Clear()
        Button56.Visible = False
        Button57.Visible = False
        If tvdbposterlist.Count = 0 Then
            Call gettvdbthumbs()
        End If
        Dim tempseason As String = ""
        If ComboBox2.SelectedItem.indexof("Season ") <> -1 Then
            tempseason = ComboBox2.SelectedItem.replace("Season ", "")
        End If
        If tempseason.IndexOf("0") = 0 And tempseason.Length > 1 Then
            tempseason = tempseason.Substring(1, tempseason.Length - 1)
        End If
        If ComboBox2.SelectedItem.indexof("Specials") <> -1 Then
            tempseason = "0"
        End If
        If ComboBox2.SelectedItem.indexof("Main Poster") <> -1 And CheckBox8.Checked = True Then
            tempseason = "poster"
        ElseIf ComboBox2.SelectedItem.indexof("Main Poster") <> -1 And CheckBox8.Checked = False Then
            tempseason = "series"
        End If
        If tempseason = "poster" Or tempseason = "series" Then
            For Each poster In tvdbposterlist
                If poster.bannertype = "poster" And CheckBox8.Checked = True Then
                    If poster.bannertype <> "fanart" Then usedlist.Add(poster)
                End If
                If poster.bannertype = "series" And CheckBox8.Checked = False Then
                    If poster.bannertype <> "fanart" Then usedlist.Add(poster)
                End If
            Next
        Else
            For Each poster In tvdbposterlist
                If poster.season = tempseason Then
                    If poster.bannertype <> "fanart" Then usedlist.Add(poster)
                End If
            Next
        End If

        Call populatetvposterpanel()
    End Sub

    Private Sub populatetvposterpanel()
        tvposterpage = 1
        If usedlist.Count <= 0 Then
            Label72.Text = "Displaying 0 of 0 Images"
            Button54.Visible = False
            Button55.Visible = False
            Exit Sub
        End If

        If usedlist.Count > userprefs.maximumthumbs Then
            Button54.Visible = True
            Button55.Visible = True
            If usedlist.Count >= userprefs.maximumthumbs Then
                Label72.Text = "Displaying 1 to 10 of " & usedlist.Count.ToString & " Images"
            Else
                Label72.Text = "Displaying 1 to " & usedlist.Count.ToString & " of " & usedlist.Count.ToString & " Images"
            End If
            Label72.Visible = True
            Me.Refresh()
            Application.DoEvents()
            Button55.Enabled = False
            Button54.Enabled = True
        Else
            Button54.Visible = False
            Button55.Visible = False
            If posterarray.Count >= userprefs.maximumthumbs Then
                Label72.Text = "Displaying 1 to " & userprefs.maximumthumbs & " of " & usedlist.Count.ToString & " Images"
            Else
                Label72.Text = "Displaying 1 to " & usedlist.Count.ToString & " of " & usedlist.Count.ToString & " Images"
            End If
            Label72.Visible = True
            Me.Refresh()
            Application.DoEvents()
        End If
        Call displaytvposterselection()
    End Sub

    Private Sub displaytvposterselection()

        For i = Panel16.Controls.Count - 1 To 0 Step -1
            Panel16.Controls.RemoveAt(i)
        Next

      

        Dim tempint As Integer = (tvposterpage * (userprefs.maximumthumbs) + 1) - userprefs.maximumthumbs
        Dim tempint2 As Integer = tvposterpage * 10

        If tempint2 > usedlist.Count Then
            tempint2 = usedlist.Count
        End If

        Label72.Text = "Displaying " & tempint.ToString & " to " & tempint2 & " of " & usedlist.Count.ToString & " Images"

        Dim location As Integer = 0
        Dim itemcounter As Integer = 0
        Dim tempboolean As Boolean = True
        If CheckBox8.Checked = True Or CheckBox8.Visible = False Then
            For f = tempint - 1 To tempint2 - 1
                If tempboolean = True Then
                    tvposterpicboxes() = New PictureBox()
                    With tvposterpicboxes
                        .Location = New Point(location, 0)
                        .Width = 123
                        .Height = 168
                        .SizeMode = PictureBoxSizeMode.Zoom
                        .ImageLocation = usedlist(f).smallurl
                        .Tag = usedlist(f).url
                        .Visible = True
                        .BorderStyle = BorderStyle.Fixed3D
                        .Name = "poster" & itemcounter.ToString
                        AddHandler tvposterpicboxes.DoubleClick, AddressOf tvposterdoubleclick
                        'AddHandler tvposterpicboxes.LoadCompleted, AddressOf imageres
                    End With

                    tvpostercheckboxes() = New RadioButton()
                    With tvpostercheckboxes
                        .Location = New Point(location + 50, 179)
                        .Name = "postercheckbox" & itemcounter.ToString
                        .SendToBack()
                        .Text = " "
                        AddHandler tvpostercheckboxes.CheckedChanged, AddressOf tvposterradiochanged
                    End With

                    itemcounter += 1


                    Me.Panel16.Controls.Add(tvposterpicboxes())
                    Me.Panel16.Controls.Add(tvpostercheckboxes())
                End If
                If tempboolean = False Then
                    tvposterpicboxes() = New PictureBox()
                    With tvposterpicboxes
                        .Location = New Point(location, 210)
                        .Width = 123
                        .Height = 168
                        .SizeMode = PictureBoxSizeMode.Zoom
                        .ImageLocation = usedlist(f).smallurl
                        .Tag = usedlist(f).url
                        .Visible = True
                        .BorderStyle = BorderStyle.Fixed3D
                        .Name = "poster" & itemcounter.ToString
                        AddHandler tvposterpicboxes.DoubleClick, AddressOf tvposterdoubleclick
                    End With

                    tvpostercheckboxes() = New RadioButton()
                    With tvpostercheckboxes
                        .Location = New Point(location + 50, 389)
                        .Name = "postercheckbox" & itemcounter.ToString
                        .SendToBack()
                        .Text = " "
                        AddHandler tvpostercheckboxes.CheckedChanged, AddressOf tvposterradiochanged
                    End With

                    itemcounter += 1


                    Me.Panel16.Controls.Add(tvposterpicboxes())
                    Me.Panel16.Controls.Add(tvpostercheckboxes())
                End If
                Me.Refresh()
                Application.DoEvents()
                If tempboolean = False Then location += 120
                tempboolean = Not tempboolean
            Next
        Else
            For f = tempint - 1 To tempint2 - 1
                If tempboolean = True Then
                    tvposterpicboxes() = New PictureBox()
                    With tvposterpicboxes
                        .Location = New Point(0, location)
                        .Width = 600
                        .Height = 114
                        .SizeMode = PictureBoxSizeMode.Zoom
                        .ImageLocation = usedlist(f).smallurl
                        .Tag = usedlist(f).url
                        .Visible = True
                        .BorderStyle = BorderStyle.Fixed3D
                        .Name = "poster" & itemcounter.ToString
                        AddHandler tvposterpicboxes.DoubleClick, AddressOf tvposterdoubleclick
                        'AddHandler tvposterpicboxes.LoadCompleted, AddressOf imageres
                    End With

                    tvpostercheckboxes() = New RadioButton()
                    With tvpostercheckboxes
                        .Location = New Point(290, location + 110)
                        .Name = "postercheckbox" & itemcounter.ToString
                        .SendToBack()
                        .Text = " "
                        AddHandler tvpostercheckboxes.CheckedChanged, AddressOf tvposterradiochanged
                    End With

                    itemcounter += 1
                    location += 140

                    Me.Panel16.Controls.Add(tvposterpicboxes())
                    Me.Panel16.Controls.Add(tvpostercheckboxes())
                End If
            Next
        End If
        Me.Refresh()
        Application.DoEvents()

    End Sub

    Private Sub tvposterradiochanged(ByVal sender As Object, ByVal e As EventArgs)
        PictureBox13.Image = Nothing
        Dim tempstring As String = sender.name
        Dim tempint As Integer
        Dim tempstring2 As String = tempstring
        Dim allok As Boolean = False
        tempstring = tempstring.Replace("postercheckbox", "")
        tempint = Convert.ToDecimal(tempstring)
        'For Each button As Control In Me.Panel8.Controls
        '    If button.Name.IndexOf("postercheckbox") <> -1 Then
        '        Dim b1 As RadioButton = CType(button, RadioButton)
        '        If b1.Checked = True Then
        '            allok = True
        '            Exit For
        '        End If
        '    End If
        'Next

        Dim hires(1)
        Dim lores(1)
        lores(0) = ""
        hires(0) = ""
        lores(1) = ""
        hires(1) = ""
        For Each cont As Control In Me.Panel16.Controls()
            If cont.Name.Replace("poster", "") = tempint.ToString Then
                Dim picbox As PictureBox = cont
                lores(0) = "Save Image (" & picbox.Image.Width & " x " & picbox.Image.Height & ")"
                lores(1) = picbox.Name
                If tvdbmode = True Then
                    For Each poster In usedlist
                        If poster.smallurl = picbox.ImageLocation Then
                            If IsNumeric(poster.resolution.Replace("x", "")) Then
                                hires(0) = "Save Image (" & poster.resolution & ")"
                                hires(0) = hires(0).replace("x", " x ")
                            Else
                                hires(0) = "Save Image (Hi-Res)"
                            End If
                            hires(1) = poster.url
                            Exit For
                        End If
                    Next
                    allok = True
                    Exit For
                Else
                    allok = True
                End If
            End If
        Next

        If allok = True Then
            Button57.Visible = True
            Button57.Tag = lores(1)
            Button57.Text = lores(0)
            If tvdbmode = True Then
                Button56.Text = hires(0)
                Button56.Visible = True
                Button56.Tag = hires(1)
            Else
                Button56.Visible = False
            End If

        Else
            Button56.Visible = False
            Button57.Visible = False
        End If
    End Sub

    Private Sub tvposterdoubleclick(ByVal sender As Object, ByVal e As EventArgs)
        Dim tempstring As String = sender.name.replace("poster", "postercheckbox")

        For Each Control In Panel16.Controls
            If Control.name = tempstring Then
                Dim rb As RadioButton = Control
                rb.Checked = True
            End If
        Next
        Dim messbox As message_box = New message_box("Please wait,", "", "Downloading Full Res Image")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        PictureBox13.ImageLocation = sender.tag
        messbox.Close()
        Call zoomimage(PictureBox13.Image)
    End Sub

    Private Sub Button52_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button52.Click
        'tvdb all
        tvdbmode = True
        usedlist.Clear()
        Button56.Visible = False
        Button57.Visible = False
        If tvdbposterlist.Count = 0 Then
            Call gettvdbthumbs()
        End If
        For Each poster In tvdbposterlist
            If CheckBox8.Visible = False Then
                If poster.bannertype <> "fanart" And poster.bannertype <> "series" Then
                    usedlist.Add(poster)
                End If
            Else
                If CheckBox8.Checked = False And poster.bannertype = "series" Then
                    usedlist.Add(poster)
                ElseIf CheckBox8.Checked = True And poster.bannertype <> "fanart" Then
                    If poster.bannertype <> "series" Then usedlist.Add(poster)
                End If

            End If
        Next


        Call populatetvposterpanel()
    End Sub

    Private Sub Button56_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button56.Click
        'savebig
        Dim witherror As Boolean = False
        Dim witherror2 As Boolean = False
        Dim path As String = ""
        If ComboBox2.Text.ToLower = "main poster" Then
            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), "folder.jpg")
        ElseIf ComboBox2.Text.ToLower.IndexOf("season") <> -1 And ComboBox2.Text.ToLower.IndexOf("all") = -1 Then
            Dim temp As String = ComboBox2.Text.ToLower
            temp = temp.Replace(" ", "")
            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), temp & ".tbn")
        ElseIf ComboBox2.Text.ToLower.IndexOf("season") <> -1 And ComboBox2.Text.ToLower.IndexOf("all") <> -1 Then
            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), "season-all.tbn")
        ElseIf ComboBox2.Text.ToLower = "specials" Then
            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), "season-specials.tbn")
        End If
        If PictureBox13.ImageLocation = Button56.Tag And Not PictureBox13.Image Is Nothing Then
            PictureBox13.Image.Save(path, Imaging.ImageFormat.Jpeg)
            If combostart = ComboBox2.SelectedItem Then
                PictureBox5.Image = PictureBox13.Image
            End If
            PictureBox12.Image = PictureBox13.Image
            Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
        Else
            Dim messbox As message_box = New message_box("Please wait,", "", "Downloading Full Res Image")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            Me.Refresh()
            messbox.Refresh()
            Dim i1 As New PictureBox

            With i1
                .WaitOnLoad = True
                Try
                    .ImageLocation = Button56.Tag
                Catch
                    witherror = True
                    Try
                        .ImageLocation = Button57.Tag
                    Catch
                        witherror2 = True
                    End Try
                End Try
            End With

            Try
                If Not i1 Is Nothing Then
                    i1.Image.Save(path, Imaging.ImageFormat.Jpeg)
                    Dim OriginalImage As New Bitmap(path)
                    Dim Image2 As New Bitmap(OriginalImage)
                    OriginalImage.Dispose()
                    If combostart = ComboBox2.SelectedItem Then
                        PictureBox5.Image = Image2
                    End If
                    PictureBox12.Image = Image2
                    Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
                End If

                If witherror = True And witherror2 = False Then
                    MsgBox("Unable to download hires image" & vbCrLf & "Lores Image downloaded instead")
                End If
                If witherror2 = True Then
                    MsgBox("Unable to download image")
                End If
            Catch ex As Exception
                MsgBox(ex.ToString)
            Finally
                messbox.Close()
            End Try
        End If
    End Sub

    Private Sub Button57_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button57.Click
        'savesmall
        Dim postname As String = ""
        For Each Control In Panel16.Controls
            If Control.name.indexof("postercheckbox") <> -1 Then
                Dim rb As RadioButton = Control
                If rb.Checked = True Then
                    postname = Control.name.replace("postercheckbox", "poster")
                    Exit For
                End If
            End If
        Next
        If postname <> "" Then
            For Each Control In Panel16.Controls
                If Control.name = postname Then
                    Try
                        Dim path As String = ""
                        If ComboBox2.Text.ToLower = "main poster" Then
                            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), "folder.jpg")
                        ElseIf ComboBox2.Text.ToLower.IndexOf("season") <> -1 And ComboBox2.Text.ToLower.IndexOf("all") = -1 Then
                            Dim temp As String = ComboBox2.Text.ToLower
                            temp = temp.Replace(" ", "")
                            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), temp & ".tbn")
                        ElseIf ComboBox2.Text.ToLower.IndexOf("season") <> -1 And ComboBox2.Text.ToLower.IndexOf("all") <> -1 Then
                            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), "season-all.tbn")
                        ElseIf ComboBox2.Text.ToLower = "specials" Then
                            path = workingposterpath.Replace(IO.Path.GetFileName(workingposterpath), "season-specials.tbn")
                        End If
                        Dim newpicbox As PictureBox = Control
                        newpicbox.Image.Save(path, Imaging.ImageFormat.Jpeg)
                        If combostart = ComboBox2.SelectedItem Then
                            PictureBox5.Image = newpicbox.Image
                        End If
                        PictureBox12.Image = newpicbox.Image
                        Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
                    Catch ex As Exception
                        MsgBox(ex.ToString)
                    End Try
                End If
            Next
        End If
    End Sub

    Private Sub Button54_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button54.Click
        tvposterpage += 1
        Button56.Visible = False
        Button57.Visible = False
        If usedlist.Count < 10 * tvposterpage Then
            Button54.Enabled = False
        End If
        Call displaytvposterselection()
        Button55.Enabled = True
    End Sub

    Private Sub Button55_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button55.Click
        tvposterpage -= 1
        Button56.Visible = False
        Button57.Visible = False
        If tvposterpage = 1 Then
            Button55.Enabled = False
        End If
        Call displaytvposterselection()
        Button54.Enabled = True
    End Sub

    Private Sub Button58_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button58.Click
        If workingtvshow.imdbid = Nothing Then
            MsgBox("No IMDB ID is available for this movie, cant scrape posters")
            Exit Sub
        End If
        If workingtvshow.imdbid = "" Then
            MsgBox("No IMDB ID is available for this movie, cant scrape posters")
            Exit Sub
        End If
        Dim ok As Boolean = False
        If workingtvshow.imdbid.ToLower.IndexOf("tt") = 0 Then
            Dim tempstring As String = workingtvshow.imdbid.ToLower.Substring(2, workingtvshow.imdbid.Length - 2)
            If IsNumeric(tempstring) Then
                ok = True
            End If
        End If
        If IsNumeric(workingtvshow.imdbid) And workingtvshow.imdbid.Length = 7 Then
            workingtvshow.imdbid = "tt" & workingtvshow.imdbid
            ok = True
        End If

        If ok = False Then
            MsgBox("IMDB ID seems to be an invalid format, can't scrape posters")
            Exit Sub
        End If

        tvdbmode = False
        usedlist.Clear()
        If imdbposterlist.Count <= 0 Then
            Dim newobject2 As New imdb_thumbs.Class1
            Dim posters(,) As String = newobject2.getimdbposters(workingtvshow.imdbid)
            For f = 0 To UBound(posters)
                If posters(f, 0) <> Nothing Then
                    Dim individualposter As New tvbanners
                    individualposter.smallurl = posters(f, 0)
                    individualposter.url = posters(f, 0)
                    imdbposterlist.Add(individualposter)
                End If
            Next
        End If
        For Each po In imdbposterlist
            usedlist.Add(po)
        Next
        usedlist.Reverse()
        Call populatetvposterpanel()
    End Sub

    Private Sub Button49_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button49.Click
        'browse
        openFD.InitialDirectory = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "")
        openFD.Title = "Select a jpeg image File"
        openFD.FileName = ""
        openFD.Filter = "Media Companion Image Files|*.jpg;*.tbn|All Files|*.*"
        openFD.FilterIndex = 0
        openFD.ShowDialog()
        TextBox30.Text = openFD.FileName
    End Sub

    Private Sub Button51_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button51.Click
        'set thumb
        Try
            Dim MyWebClient As New System.Net.WebClient

            Dim ImageInBytes() As Byte = MyWebClient.DownloadData(TextBox30.Text)
            Dim ImageStream As New IO.MemoryStream(ImageInBytes)

            PictureBox13.Image = New System.Drawing.Bitmap(ImageStream)
            PictureBox13.Image.Save(workingposterpath, Imaging.ImageFormat.Jpeg)

            If combostart = ComboBox2.SelectedItem Then
                PictureBox5.Image = PictureBox13.Image
            End If
            PictureBox12.Image = PictureBox13.Image
            Label73.Text = PictureBox12.Image.Width.ToString & " x " & PictureBox12.Image.Height.ToString
        Catch ex As Exception
            MsgBox(ex.ToString)
        Finally
            Panel14.Visible = False
        End Try
    End Sub

    Private Sub Button50_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button50.Click
        'cancel
        Panel14.Visible = False
    End Sub

    Private Sub Button59_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button59.Click
        Panel14.Visible = True
    End Sub

    Private Sub RadioButton19_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton19.CheckedChanged
        If RadioButton19.Checked = True Then
            userprefs.moviesortorder = 5
            Call sortorder()
        End If
    End Sub

    Private Sub TextBox26_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles TextBox26.KeyDown
        If e.KeyCode = Keys.Enter Then
            Call loadshowlist()
        End If

    End Sub

    Private Sub RebuildMovieNfoFilesToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RebuildMovieNfoFilesToolStripMenuItem.Click
        Call batchupdate()
    End Sub

    Private Sub Button62_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button62.Click
        Call quicksavemovie()
    End Sub

    Private Sub TextBox35_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles TextBox35.KeyPress
        If e.KeyChar.IsNumber(e.KeyChar) = False And e.KeyChar <> Chr(8) Then
            e.Handled = True
        End If
    End Sub

    Private Sub Button64_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button64.Click
        If IsNumeric(TextBox35.Text) Then
            Dim thumbpathandfilename As String = workingepisode(0).episodepath.Replace(IO.Path.GetExtension(workingepisode(0).episodepath), ".tbn")
            Dim pathandfilename As String = workingepisode(0).episodepath.Replace(IO.Path.GetExtension(workingepisode(0).episodepath), "")
            Dim extensions(100) As String
            Dim extensioncount As Integer
            extensions(1) = ".avi"
            extensions(2) = ".xvid"
            extensions(3) = ".divx"
            extensions(4) = ".img"
            extensions(5) = ".mpg"
            extensions(6) = ".mpeg"
            extensions(7) = ".mov"
            extensions(8) = ".rm"
            extensions(9) = ".3gp"
            extensions(10) = ".m4v"
            extensions(11) = ".wmv"
            extensions(12) = ".asf"
            extensions(13) = ".mp4"
            extensions(14) = ".mkv"
            extensions(15) = ".nrg"
            extensions(16) = ".iso"
            extensions(17) = ".rmvb"
            extensions(18) = ".ogm"
            extensions(19) = ".bin"
            extensions(20) = ".ts"
            extensions(21) = ".vob"
            extensions(22) = ".m2ts"
            extensions(23) = ".rar"
            extensions(24) = ".flv"
            extensions(25) = ".dvr-ms"
            extensions(26) = "VIDEO_TS.IFO"
            Dim messbox As message_box = New message_box("ffmpeg is working to capture the desired screenshot", "", "Please Wait")
            extensioncount = 26
            Dim exists As Boolean = False
            For f = 1 To extensioncount
                Dim tempstring2 As String
                tempstring2 = pathandfilename & extensions(f)
                If IO.File.Exists(tempstring2) Then
                    Dim tempstring3 As String
                    Dim seconds As Integer = 10
                    If Convert.ToInt32(TextBox35.Text) > 0 Then
                        seconds = Convert.ToInt32(TextBox35.Text)
                    End If

                    If IO.File.Exists(thumbpathandfilename) Then
                        PictureBox14.Image = Nothing
                        IO.File.Delete(thumbpathandfilename)
                    End If

                    System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
                    messbox.Show()
                    messbox.Refresh()
                    Application.DoEvents()
                 

                    Dim myProcess As Process = New Process
                    myProcess.StartInfo.WindowStyle = ProcessWindowStyle.Hidden
                    myProcess.StartInfo.CreateNoWindow = False
                    myProcess.StartInfo.FileName = applicationpath & "\ffmpeg.exe"
                    Dim proc_arguments As String = "-y -i """ & tempstring2 & """ -f mjpeg -ss " & seconds.ToString & " -vframes 1 -an " & """" & thumbpathandfilename & """"
                    myProcess.StartInfo.Arguments = proc_arguments
                    myProcess.Start()
                    myProcess.WaitForExit()


                    If System.IO.File.Exists(thumbpathandfilename) Then
                        Dim bitmap2 As New Bitmap(thumbpathandfilename)
                        Dim bitmap3 As New Bitmap(bitmap2)
                        bitmap2.Dispose()
                        PictureBox14.Image = bitmap3
                        PictureBox4.Image = bitmap3
                    End If
                    Exit For
                End If
            Next
            messbox.Close()
        Else
            MsgBox("Please enter a numerical value into the textbox")
            TextBox34.Focus()
            Exit Sub
        End If
    End Sub

    Private Sub TextBox35_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TextBox35.Leave
        If TextBox35.Text = "" Then
            MsgBox("Please enter a numerical value >0 into the textbox")
            TextBox35.Focus()
        ElseIf Convert.ToInt32(TextBox35.Text) = 0 Then
            MsgBox("Please enter a numerical value >0 into the textbox")
            TextBox35.Focus()
        End If
    End Sub

    Private Sub Button63_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button63.Click
        Dim messbox As message_box = New message_box("Checking TVDB for screenshot", "", "Please Wait")
        'Dim episodescraper As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
        Dim episodescraper As New TVDBScraper
        Dim id As String = workingtvshow.tvdbid
        Dim sortorder As String = workingtvshow.sortorder
        Dim seasonno As String = workingepisode(0).seasonno
        Dim episodeno As String = workingepisode(0).episodeno
        Dim language As String = workingtvshow.language
        If language = Nothing Then language = "en"
        If language = "" Then language = "en"
        If sortorder = Nothing Then sortorder = "default"
        If sortorder = "" Then sortorder = "default"

        If id = Nothing Then
            MsgBox("No ID is available for this show")
            Exit Sub
        End If
        If id = "" Then
            MsgBox("No ID is available for this show")
            Exit Sub
        End If
        If episodeno = Nothing Then
            MsgBox("No Episode Number is available for this show")
            Exit Sub
        End If
        If episodeno = "" Then
            MsgBox("No Episode Number is available for this show")
            Exit Sub
        End If
        If seasonno = Nothing Then
            MsgBox("No Season Number is available for this show")
            Exit Sub
        End If
        If seasonno = "" Then
            MsgBox("No Season Number is available for this show")
            Exit Sub
        End If
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()
        Dim tempepisode As String = episodescraper.getepisode(workingtvshow.tvdbid, sortorder, seasonno, episodeno, language)
        Dim thumburl As String = ""
        messbox.Close()
        Dim scrapedepisode As New XmlDocument
        Try
            If tempepisode <> Nothing Then
                scrapedepisode.LoadXml(tempepisode)
                Dim thisresult As XmlNode = Nothing
                For Each thisresult In scrapedepisode("episodedetails")
                    Select Case thisresult.Name
                        Case "thumb"
                            thumburl = thisresult.InnerText
                            Exit For
                            Exit Select
                    End Select
                Next
                If thumburl <> "" And thumburl.ToLower <> "http://www.thetvdb.com/banners/" Then
                    messbox = New message_box("Screenshot found, downloading now", "", "Please Wait")
                    System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
                    messbox.Show()
                    messbox.Refresh()
                    Application.DoEvents()
                    Dim tempstring As String = workingepisode(0).episodepath.Replace(IO.Path.GetExtension(workingepisode(0).episodepath), ".tbn")
                    Dim MyWebClient As New System.Net.WebClient
                    Try
                        Dim ImageInBytes() As Byte = MyWebClient.DownloadData(thumburl)
                        Dim ImageStream As New IO.MemoryStream(ImageInBytes)

                        PictureBox15.Image = New System.Drawing.Bitmap(ImageStream)
                        PictureBox15.Image.Save(tempstring, Imaging.ImageFormat.Jpeg)
                        Dim bitmap2 As New Bitmap(tempstring)
                        Dim bitmap3 As New Bitmap(bitmap2)
                        bitmap2.Dispose()
                        PictureBox14.Image = bitmap3
                        PictureBox4.Image = bitmap3
                        messbox.Close()
                    Catch ex As Exception
                        MsgBox("Unable To Download Image")
                    End Try
                Else
                    MsgBox("No Episode Screenshot Found On TVDB")
                End If
            Else
                MsgBox("No Episode Screenshot Found On TVDB")
            End If
        Catch
        Finally
            messbox.Close()
        End Try

    End Sub

    Private Sub Button11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button11.Click
        Dim movie_ids As New List(Of String)
        Dim topactorname As String = actorcb.Text
        For Each actor In actordb
            If actor.actorname = actorcb.Text Then
                movie_ids.Add(actor.movieid)
            End If
        Next
        filteredlist.Clear()
        For Each movie In fullmovielist
            Dim add As Boolean = False
            For Each id In movie_ids
                If id = movie.id Then
                    add = True
                    Exit For
                End If
            Next
            If add = True Then
                filteredlist.Add(movie)
            End If
        Next
        Call sortorder()
        Label39.Text = "Displaying " & filteredlist.Count & " " & topactorname & " movies"
    End Sub

    Private Sub resetwall()
        For i = TabPage22.Controls.Count - 1 To 0 Step -1
            'If  Is PictureBox(TabPage22.Controls(i)) Then
            TabPage22.Controls.RemoveAt(i)
            'End If
        Next
        walllocked = True
        Dim count As Integer = 0
        Dim locx As Integer = 0
        Dim locy As Integer = 0
        Dim maxcount As Integer = Convert.ToInt32((TabPage22.Width - 50) / 150)
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 159 Then
            maxcount += 1
        End If
        Try
            'Panel17.AutoScroll = False
            For Each pic In picturelist
                Try
                    If count = maxcount Then
                        count = 0
                        locx = 0
                        locy += 200
                    End If

                    With pic
                        Dim vscrollPos As Integer = TabPage22.VerticalScroll.Value
                        .Location = New Point(locx, locy - vscrollPos)
                        .ContextMenuStrip = ContextMenuStrip3
                    End With
                    locx += 150
                    count += 1

                    Me.TabPage22.Controls.Add(pic)
                    TabPage22.Refresh()
                    Application.DoEvents()

                Catch ex As Exception
                    MsgBox(ex.ToString)
                End Try
            Next

        Catch
        Finally
            walllocked = False
        End Try
    End Sub

    Private Sub setupwall()

        Dim check As Boolean
        check = True
        If moviecount_bak <> ComboBox1.Items.Count Then
            moviecount_bak = ComboBox1.Items.Count
            check = False
        End If
        For i = 0 To CheckedListBox1.Items.Count - 1
            If CheckedListBox1.GetItemChecked(i) <> CheckedListBox2.GetItemChecked(i) Then
                If CheckedListBox1.GetItemChecked(i) = True Then
                    CheckedListBox2.SetItemChecked(i, True)
                Else
                    CheckedListBox2.SetItemChecked(i, False)
                End If
                check = False
            End If
        Next

        If RadioButton3.Checked <> RadioButton28.Checked Then
            RadioButton28.Checked = RadioButton3.Checked
            check = False

        End If

        If RadioButton4.Checked <> RadioButton27.Checked Then
            RadioButton27.Checked = RadioButton4.Checked
            check = False
        End If

        If RadioButton5.Checked <> RadioButton26.Checked Then
            RadioButton26.Checked = RadioButton5.Checked
            check = False
        End If

        If RadioButton21.Checked <> RadioButton22.Checked Then
            RadioButton22.Checked = RadioButton21.Checked
            check = False
        End If

        If RadioButton7.Checked <> RadioButton25.Checked Then
            RadioButton25.Checked = RadioButton7.Checked
            check = False
        End If

        If RadioButton19.Checked <> RadioButton24.Checked Then
            RadioButton24.Checked = RadioButton19.Checked
            check = False
        End If

        If RadioButton20.Checked <> RadioButton23.Checked Then
            RadioButton23.Checked = RadioButton20.Checked
            check = False
        End If

        If btnreverse.CheckState <> CheckBox9.CheckState Then
            CheckBox9.CheckState = btnreverse.CheckState
            check = False
        End If

        If TextBox1.Text <> TextBox37.Text Then
            TextBox37.Text = CheckBox1.Text
            check = False
        End If

        If txt_titlesearch.Text <> TextBox36.Text Then
            TextBox36.Text = txt_titlesearch.Text
            check = False
        End If


        If check = True Then Exit Sub


        maxcount = Convert.ToInt32((TabPage22.Width - 50) / 150)
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        If filteredlist.Count / maxcount > 164 Then
            maxcount += 1
        End If
        picturelist.Clear()
        For i = TabPage22.Controls.Count - 1 To 0 Step -1
            If TabPage22.Controls(i).Name = "" Then
                TabPage22.Controls.RemoveAt(i)
            End If
        Next
        TabPage22.Refresh()
        Application.DoEvents()
        Dim count As Integer = 0
        Dim locx As Integer = 0
        Dim locy As Integer = 0
        'Panel17.AutoScroll = False
        For Each movie In filteredlist

            bigpicbox = New PictureBox()
            With bigpicbox
                '.Location = New Point(0, 0)
                .Width = 150
                .Height = 200
                .SizeMode = PictureBoxSizeMode.StretchImage
                '.Image = sender.image
                Dim filename As String = filefunction.GetCRC32(movie.fullpathandfilename)
                If IO.File.Exists(IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")) Then
                    Try
                        'Dim bitmap2 As New Bitmap(IO.Path.Combine(applicationpath, "settings\postercache\" & movie.id & ".jpg"))
                        'Dim bitmap3 As New Bitmap(bitmap2)
                        'bitmap2.Dispose()
                        .Image = imagefunctions.loadbitmap(IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg"))
                    Catch ex As Exception
                        'Dim bitmap2 As New Bitmap(defaultposter)
                        'Dim bitmap3 As New Bitmap(bitmap2)
                        'bitmap2.Dispose()
                        '.Image = bitmap3
                        .Image = imagefunctions.loadbitmap(defaultposter)
                    End Try
                ElseIf IO.File.Exists(filefunction.getposterpath(movie.fullpathandfilename)) Then
                    Try
                        Dim bitmap2 As New Bitmap(filefunction.getposterpath(movie.fullpathandfilename))
                        bitmap2 = imagefunctions.ResizeImage(bitmap2, 150, 200)
                        If loadsave.saveimage(bitmap2, IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg")) Then
                            .Image = imagefunctions.loadbitmap(IO.Path.Combine(applicationpath, "settings\postercache\" & filename & ".jpg"))
                        Else
                            .Image = imagefunctions.loadbitmap(defaultposter)
                        End If
                    Catch ex As Exception
                        .Image = imagefunctions.loadbitmap(defaultposter)
                    End Try
                Else
                    Dim bitmap2 As New Bitmap(defaultposter)
                    Dim bitmap3 As New Bitmap(bitmap2)
                    bitmap2.Dispose()
                    .Image = bitmap3
                End If
                .Tag = movie.fullpathandfilename
                Dim toolTip1 As ToolTip = New ToolTip(Me.components)

                Dim outline As String = movie.outline
                Dim newoutline As List(Of String) = wraptext(outline, 50)
                outline = ""
                For Each line In newoutline
                    outline = outline & vbCrLf & line
                Next
                outline.TrimEnd(vbCrLf)
                toolTip1.SetToolTip(bigpicbox, movie.fullpathandfilename & vbCrLf & vbCrLf & movie.titleandyear & vbCrLf & outline)
                toolTip1.Active = True
                toolTip1.InitialDelay = 0

                .Visible = True
                .BorderStyle = BorderStyle.None
                .WaitOnLoad = True
                .ContextMenuStrip = ContextMenuStrip3
                AddHandler bigpicbox.MouseEnter, AddressOf mouseenter
                AddHandler bigpicbox.DoubleClick, AddressOf wallclicked
                If count = maxcount Then
                    count = 0
                    locx = 0
                    locy += 200
                End If
                walllocked = True
                Dim vscrollPos As Integer = TabPage22.VerticalScroll.Value
                If mousedelta <> 0 Then
                    vscrollPos = vscrollPos - mousedelta
                    mousedelta = 0
                End If
                .Location = New Point(locx, locy - vscrollPos)
                locx += 150
                count += 1

            End With
            Me.TabPage22.Controls.Add(bigpicbox)
            picturelist.Add(bigpicbox)
            Me.TabPage22.Refresh()
            Application.DoEvents()
            walllocked = False
        Next
        walllocked = False
        'Panel17.AutoScroll = True
        'Try
        'Call resetwall()
        'Catch
        'End Try
    End Sub

    Private Sub wallclicked(ByVal sender As Object, ByVal e As EventArgs)

        Dim item As Windows.Forms.PictureBox = sender
        'Dim picbox As PictureBox = item.SourceControl
        Dim tempstring As String = item.Tag
        For f = 0 To ComboBox1.Items.Count - 1
            If CType(ComboBox1.Items(f), ValueDescriptionPair).Value = tempstring Then
                ComboBox1.SelectedItems.Clear()
                ComboBox1.SelectedIndex = f
                Application.DoEvents()
                m_CurrentTabIndex = 0
                Me.TabControl2.SelectedIndex = 0
                Exit For
            End If
        Next

    End Sub

    Private Function wraptext(ByVal text As String, ByVal linelength As Integer)
        Dim ReturnValue As New List(Of String)
        text = Trim(text)

        Dim Words As String() = text.Split(" ")

        If Words.Length = 1 And Words(0).Length > linelength Then
            Dim lines As Integer = (Int(text.Length / linelength) + 1)
            text = text.PadRight(lines * linelength)
            For i = 0 To lines - 1
                Dim SliceStart As Integer = i * linelength
                ReturnValue.Add(text.Substring(SliceStart, linelength))
            Next
        Else
            Dim CurrentLine As New System.Text.StringBuilder
            For Each Word As String In Words
                If CurrentLine.Length + Word.Length < linelength Then
                    CurrentLine.Append(Word & " ")
                Else
                    If Word.Length > linelength Then
                        Dim Slice As String = Word.Substring(0, linelength - CurrentLine.Length)
                        CurrentLine.Append(Slice)
                        ReturnValue.Add(CurrentLine.ToString)
                        CurrentLine = New System.Text.StringBuilder()
                        Word = Word.Substring(Slice.Length, Word.Length - Slice.Length)
                        Dim RemainingSlices As Integer = Int(Word.Length / linelength) + 1
                        For LineNumber = 1 To RemainingSlices
                            If LineNumber = RemainingSlices Then
                                CurrentLine.Append(Word & " ")
                            Else
                                Slice = Word.Substring(0, linelength)
                                CurrentLine.Append(Slice)
                                ReturnValue.Add(CurrentLine.ToString)
                                CurrentLine = New System.Text.StringBuilder()
                                Word = Word.Substring(Slice.Length, Word.Length - Slice.Length)
                            End If
                        Next
                    Else
                        ReturnValue.Add(CurrentLine.ToString)
                        CurrentLine = New System.Text.StringBuilder(Word & " ")
                    End If
                End If
            Next

            If CurrentLine.Length > 0 Then
                ReturnValue.Add(CurrentLine.ToString)
            End If
        End If

        Return ReturnValue

    End Function

    Private Sub RadioButton21_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton21.CheckedChanged
        If RadioButton21.Checked = True Then
            userprefs.moviesortorder = 3
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If

    End Sub

    Private Sub RadioButton20_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton20.CheckedChanged
        If RadioButton20.Checked = True Then
            userprefs.moviesortorder = 6
            Dim save As New _preferences
            Call save.saveconfig()
            Call sortorder()
        End If
    End Sub
    Dim combostart As String = ""
    Dim tvobjects As New List(Of String)
    Dim currentposterid As String = ""
    Dim workingposterpath As String
    Dim tvdbposterlist As New List(Of tvbanners)
    Dim imdbposterlist As New List(Of tvbanners)
    Dim tvdbmode As Boolean = False
    Dim usedlist As New List(Of tvbanners)
    Dim WithEvents tvposterpicboxes As PictureBox
    Dim WithEvents tvpostercheckboxes As RadioButton
    Dim WithEvents tvposterlabels As Label
    Dim WithEvents tvreslabel As Label
    Dim tvposterpage As Integer = 1
    Dim walllocked As Boolean = False
    Dim maxcount As Integer
    Dim moviecount_bak As Integer = 0
    Private ClickedControl As String

    Private Sub mouseenter(ByVal sender As System.Object, ByVal e As System.EventArgs)
        ClickedControl = sender.tag
    End Sub

    Private Sub PlayMovieToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PlayMovieToolStripMenuItem.Click
        'Dim item As Windows.Forms.ToolStripMenuItem = sender
        ''Dim picbox As PictureBox = item.SourceControl
        Dim tempstring As String = ClickedControl
        If tempstring = Nothing Then
            Exit Sub
        End If
        If tempstring = "" Then
            Exit Sub
        End If
        Dim playlist As New List(Of String)
        tempstring = filefunction.getfilename(tempstring)
        If IO.File.Exists(tempstring) Then
            playlist.Add(tempstring)
        End If
        If tempstring.IndexOf("cd1") <> -1 Then
            tempstring = tempstring.Replace("cd1", "cd2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd2", "cd3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd3", "cd4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd4", "cd5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("cd_1") <> -1 Then
            tempstring = tempstring.Replace("cd_1", "cd_2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd_2", "cd_3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd_3", "cd_4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd_4", "cd_5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("cd 1") <> -1 Then
            tempstring = tempstring.Replace("cd 1", "cd 2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd 2", "cd 3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd 3", "cd 4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd 4", "cd 5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("cd.1") <> -1 Then
            tempstring = tempstring.Replace("cd.1", "cd.2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd.2", "cd.3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd.3", "cd.4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("cd.4", "cd.5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("dvd1") <> -1 Then
            tempstring = tempstring.Replace("dvd1", "dvd2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd2", "dvd3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd3", "dvd4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd4", "dvd5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("dvd_1") <> -1 Then
            tempstring = tempstring.Replace("dvd_1", "dvd_2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd_2", "dvd_3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd_3", "dvd_4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd_4", "dvd_5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("dvd 1") <> -1 Then
            tempstring = tempstring.Replace("dvd 1", "dvd 2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd 2", "dvd 3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd 3", "dvd 4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd 4", "dvd 5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("dvd.1") <> -1 Then
            tempstring = tempstring.Replace("dvd.1", "dvd.2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd.2", "dvd.3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd.3", "dvd.4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("dvd.4", "dvd.5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("part1") <> -1 Then
            tempstring = tempstring.Replace("part1", "part2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part2", "part3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part3", "part4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part4", "part5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("part_1") <> -1 Then
            tempstring = tempstring.Replace("part_1", "part_2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part_2", "part_3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part_3", "part_4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part_4", "part_5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("part 1") <> -1 Then
            tempstring = tempstring.Replace("part 1", "part 2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part 2", "part 3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part 3", "part 4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part 4", "part 5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("part.1") <> -1 Then
            tempstring = tempstring.Replace("part.1", "part.2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part.2", "part.3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part.3", "part.4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("part.4", "part.5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("disk1") <> -1 Then
            tempstring = tempstring.Replace("disk1", "disk2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk2", "disk3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk3", "disk4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk4", "disk5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("disk_1") <> -1 Then
            tempstring = tempstring.Replace("disk_1", "disk_2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk_2", "disk_3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk_3", "disk_4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk_4", "disk_5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("disk 1") <> -1 Then
            tempstring = tempstring.Replace("disk 1", "disk 2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk 2", "disk 3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk 3", "disk 4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk 4", "disk 5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("disk.1") <> -1 Then
            tempstring = tempstring.Replace("disk.1", "disk.2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk.2", "disk.3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk.3", "disk.4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("disk.4", "disk.5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("part1") <> -1 Then
            tempstring = tempstring.Replace("pt1", "pt2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt2", "pt3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt3", "pt4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt4", "pt5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("pt_1") <> -1 Then
            tempstring = tempstring.Replace("pt_1", "pt_2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt_2", "pt_3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt_3", "pt_4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt_4", "pt_5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("pt 1") <> -1 Then
            tempstring = tempstring.Replace("pt 1", "pt 2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt 2", "pt 3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt 3", "pt 4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt 4", "pt 5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If
        If tempstring.IndexOf("pt.1") <> -1 Then
            tempstring = tempstring.Replace("pt.1", "pt.2")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt.2", "pt.3")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt.3", "pt.4")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
            tempstring = tempstring.Replace("pt.4", "pt.5")
            If IO.File.Exists(tempstring) Then
                playlist.Add(tempstring)
            End If
        End If

        If playlist.Count <= 0 Then
            MsgBox("No Media File Found For This nfo")
            Exit Sub
        End If


        tempstring = applicationpath & "\settings\temp.m3u"


        Dim file As IO.StreamWriter = IO.File.CreateText(tempstring)

        For Each part In playlist
            If part <> Nothing Then file.WriteLine(part)
        Next
        file.Close()


        If userprefs.videomode = 1 Then Call videomode1(tempstring)
        If userprefs.videomode = 2 Then Call videomode2(tempstring)
        If userprefs.videomode = 3 Then
            userprefs.videomode = 2
            Call videomode2(tempstring)
        End If
        If userprefs.videomode >= 4 Then
            If userprefs.selectedvideoplayer <> Nothing Then
                Call videomode4(tempstring)
            Else
                Call videomode1(tempstring)
            End If
        End If
    End Sub

    Private Sub EditMovieToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles EditMovieToolStripMenuItem1.Click
        Dim tempstring As String = ClickedControl
        'Dim picbox As PictureBox = item.SourceControl
        For f = 0 To ComboBox1.Items.Count - 1
            If CType(ComboBox1.Items(f), ValueDescriptionPair).Value = tempstring Then
                ComboBox1.SelectedItems.Clear()
                ComboBox1.SelectedIndex = f
                Application.DoEvents()
                m_CurrentTabIndex = 4
                Me.TabControl2.SelectedIndex = 4
                Exit For
            End If
        Next

    End Sub

    Private Sub DToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DToolStripMenuItem.Click
        Dim tempstring As String = ClickedControl
        If tempstring <> Nothing Then
            Try
                If IO.File.Exists(filefunction.getposterpath(tempstring)) Then
                    Me.ControlBox = False
                    MenuStrip1.Enabled = False
                    'ToolStrip1.Enabled = False
                    Dim newimage As New Bitmap(filefunction.getposterpath(tempstring))
                    Dim newimage2 As New Bitmap(newimage)
                    newimage.Dispose()
                    Call zoomimage(newimage2)
                Else
                    MsgBox("Cant find file:-" & vbCrLf & filefunction.getposterpath(tempstring))
                End If
            Catch
            End Try
        End If
    End Sub

    Private Sub OpenFolderToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles OpenFolderToolStripMenuItem1.Click
        Dim tempstring As String = ClickedControl
        If tempstring <> Nothing Then
            Try
                Call openfolder(tempstring)
            Catch
            End Try
        End If
    End Sub

    Private Sub addpostertowall(ByVal posterpath As String, ByVal fullnfopath As String, ByVal imdbid As String)
        Dim bitmap3 As New Bitmap(posterpath)
        Dim bitmap2 As New Bitmap(bitmap3)
        bitmap3.Dispose()
        Dim bm_source As New Bitmap(bitmap2)
        Dim bm_dest As New Bitmap(150, 200)
        Dim gr As Graphics = Graphics.FromImage(bm_dest)
        gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
        gr.DrawImage(bm_source, 0, 0, 150 - 1, 200 - 1)
        Dim tempbitmap As Bitmap = bm_dest
        Dim path As String = IO.Path.Combine(applicationpath, "settings\postercache\" & imdbid & ".jpg")
        tempbitmap.Save(path, Imaging.ImageFormat.Jpeg)
        tempbitmap.Dispose()

        For Each poster As PictureBox In TabPage22.Controls
            If poster.Tag = workingmoviedetails.fileinfo.fullpathandfilename Then
                poster.ImageLocation = IO.Path.Combine(applicationpath, "settings\postercache\" & imdbid & ".jpg")
                Exit For
            End If
        Next
    End Sub

    Private Sub Button60_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button60.Click
        'workingtvshow

        Dim TVShowNFOContent As String = ""

        If Button60.Text = "Open" Then
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "locked", "1")
        ElseIf Button60.Text = "Locked" Then
            TVShowNFOContent = nfofunction.ChangeFieldTVShow(workingtvshow.path, "locked", "0")
        End If
        If TVShowNFOContent <> "error" Then
            Dim DiditWork As Boolean = CreateMovieNfo(workingtvshow.path, TVShowNFOContent)
            If DiditWork = True Then
                If Button60.Text = "Open" Then
                    Button60.Text = "Locked"
                    Button60.BackColor = Color.Red
                ElseIf Button60.Text = "Locked" Then
                    Button60.Text = "Open"
                    Button60.BackColor = Color.LawnGreen
                End If
                'Call loadtvshow(workingtvshow.path)
                savetvdata()
                reloadtvshow()
                messbox.Close()
                TabControl3.SelectedIndex = 0
            End If
        End If
        TreeView1.SelectedNode = TreeView1.SelectedNode.NextVisibleNode
        TreeView1.SelectedNode = TreeView1.SelectedNode.PrevVisibleNode
        TreeView1.Update()
        TreeView1.Refresh()
        'Dim lockedstring As String = ""
        'If Button60.Text = "Open" Then
        '    workingtvshow.locked = 1
        '    For Each tvshow In basictvlist
        '        If tvshow.fullpath = workingtvshow.path Then
        '            tvshow.locked = 1
        '            lockedstring = "1"
        '            Button60.BackColor = Color.Red
        '            For Each indnode As TreeNode In TreeView1.Nodes
        '                If indnode.Name.ToLower = tvshow.fullpath.ToLower Then
        '                    indnode.StateImageIndex = 0
        '                    Exit For
        '                End If
        '            Next
        '        End If
        '    Next
        '    Button60.Text = "Locked"
        'ElseIf Button60.Text = "Locked" Then


        '    If Not workingtvshow.tvdbid Is Nothing Then
        '        If workingtvshow.tvdbid <> "" Then
        '            workingtvshow.locked = False
        '            Button60.Text = "Open"
        '            Button60.BackColor = Color.LawnGreen
        '            For Each tvshow In basictvlist
        '                If tvshow.fullpath = workingtvshow.path Then
        '                    tvshow.locked = 0
        '                    lockedstring = "0"
        '                    For Each indnode As TreeNode In TreeView1.Nodes
        '                        If indnode.Name.ToLower = tvshow.fullpath.ToLower Then
        '                            indnode.StateImageIndex = -1
        '                            Exit For
        '                        End If
        '                    Next
        '                End If
        '            Next
        '        Else
        '            MsgBox("Can't unlock, " & vbCrLf & "No TVDB ID is available")
        '            Exit Sub
        '        End If
        '    Else
        '        MsgBox("Can't unlock, " & vbCrLf & "No TVDB ID is available")
        '        Exit Sub
        '    End If
        'ElseIf Button60.Text = "Un-Verified" Then
        '    'Dim tempint As Integer = MessageBox.Show("This TV Show has been automatically added by Media Companion" & vbCrLf & "Are you sure that the correct show has been scraped?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
        '    'If tempint = DialogResult.Yes Then
        '    Button60.Text = "Open"
        '    Button60.BackColor = Color.LawnGreen
        '    workingtvshow.locked = False
        '    For Each tvshow In basictvlist
        '        If tvshow.fullpath = workingtvshow.path Then
        '            tvshow.locked = 0
        '            lockedstring = "0"
        '            For Each indnode As TreeNode In TreeView1.Nodes
        '                If indnode.Name.ToLower = tvshow.fullpath.ToLower Then
        '                    indnode.StateImageIndex = -1
        '                    Exit For
        '                End If
        '            Next
        '        End If
        '    Next
        'End If
        ''End If
        'workingtvshow.plot = TextBox19.Text
        'workingtvshow.runtime = TextBox15.Text
        'workingtvshow.premiered = TextBox10.Text
        'workingtvshow.studio = TextBox16.Text
        'workingtvshow.rating = TextBox13.Text
        'workingtvshow.genre = TextBox11.Text
        'workingtvshow.imdbid = TextBox12.Text
        'workingtvshow.tvdbid = TextBox9.Text
        'workingtvshow.mpaa = TextBox14.Text
        'workingtvshow.locked = lockedstring
        'If TextBox2.Text.ToLower.IndexOf(", the") = TextBox2.Text.Length - 5 And TextBox2.Text.Length > 5 Then
        '    workingtvshow.title = "The " & TextBox2.Text.Substring(0, TextBox2.Text.Length - 5)
        'End If
        'Call nfofunction.savetvshownfo(workingtvshow.path, workingtvshow, True)
        'For Each node As TreeNode In TreeView1.Nodes
        '    If node.Name = workingtvshow.path Then
        '        node.Text = TextBox2.Text
        '        Exit For
        '    End If
        'Next
        'Call savetvdata()
    End Sub

    Private Function UrlIsValid(ByVal url As String) As Boolean
        Dim is_valid As Boolean = False
        If url.ToLower().StartsWith("www.") Then url = _
            "http://" & url

        Dim web_response As HttpWebResponse = Nothing

        Try
            Dim web_request As HttpWebRequest = HttpWebRequest.Create(url)
            web_request.Timeout = 5000
            web_response = DirectCast(web_request.GetResponse(), HttpWebResponse)
            Return True
        Catch ex As Exception
            Return False
        Finally
            If Not (web_response Is Nothing) Then _
                web_response.Close()
        End Try
    End Function

    Private Sub OutputMovieListAsHTMLToolStripMenuItem_DropDownClosed(ByVal sender As Object, ByVal e As System.EventArgs) Handles OutputMovieListAsHTMLToolStripMenuItem.DropDownClosed
        If dohtml = True Then
            dohtml = False
            Call htmloutput()
        End If
    End Sub

    Private Sub htmloutput()
        If fullhtmlstring = Nothing Then Exit Sub
        If fullhtmlstring = "" Then Exit Sub
        Dim frmhtmloutput As New frmDialog1
        frmhtmloutput.Label3.Text = "Starting HTML Document"
        frmhtmloutput.Label4.Text = ""
        frmhtmloutput.Label3.Refresh()
        frmhtmloutput.Label4.Refresh()
        Application.DoEvents()
        frmhtmloutput.Show()
        Dim tempstring As String = ""
        Dim savepath As String
        Dim cssbody As String
        Dim csspath As String
        Dim counter As Integer = 0
        With SaveFileDialog1
            .DefaultExt = "html"
            .Filter = "Html Documents (*.htm)|*.html"
            .Title = "Save HTML File"
            .OverwritePrompt = True
            .CheckPathExists = True
        End With

        If SaveFileDialog1.ShowDialog = Windows.Forms.DialogResult.OK Then
            savepath = SaveFileDialog1.FileName
            If fullhtmlstring.IndexOf("<<css>>") <> -1 And fullhtmlstring.IndexOf("<</css>>") <> -1 Then
                tempstring = fullhtmlstring.Substring(fullhtmlstring.IndexOf("<<css>>") + 9, fullhtmlstring.IndexOf("<</css>>") - fullhtmlstring.IndexOf("<<css>>") - 9)
                If tempstring.IndexOf("<filename>") <> -1 And tempstring.IndexOf("</filename>") <> -1 Then
                    Dim tempstring2 As String
                    tempstring2 = tempstring.Substring(tempstring.IndexOf("<filename>") + 10, tempstring.IndexOf("</filename>") - tempstring.IndexOf("<filename>") - 10)
                    csspath = savepath.Replace(IO.Path.GetFileName(savepath), tempstring2)
                    cssbody = tempstring.Substring(tempstring.IndexOf("</filename>") + 13, tempstring.Length - tempstring.IndexOf("</filename>") - 13)
                    Try
                        Dim objWriter2 As New System.IO.StreamWriter(csspath, False, Encoding.UTF8)
                        objWriter2.Write(cssbody)
                        objWriter2.Close()
                    Catch ex As Exception

                    Finally

                    End Try
                End If

            End If
            tempstring = fullhtmlstring.Substring(fullhtmlstring.IndexOf("<<header>>") + 12, (fullhtmlstring.IndexOf("<</header>>") - fullhtmlstring.IndexOf("<<header>>")) - 12)
            tempstring = getmovietags(tempstring, filteredlist(0), counter)

            Dim temphtml As String
            temphtml = "<html><head>" & tempstring & "</head>"
            tempstring = fullhtmlstring.Substring(fullhtmlstring.ToLower.IndexOf("<<body>>") + 8, fullhtmlstring.ToLower.IndexOf("<</body>>") - (fullhtmlstring.ToLower.IndexOf("<<body>>") + 8))
            temphtml = temphtml & "<body>"
            Dim pathstring As String = ""
            If tempstring.IndexOf("<<smallimage>>") <> -1 Then
                pathstring = savepath.Replace(IO.Path.GetFileName(savepath), "")
                pathstring = pathstring & "images\"
                Dim fso As New DirectoryInfo(pathstring)
                If fso.Exists = False Then
                    IO.Directory.CreateDirectory(pathstring)
                End If
            End If
            Dim overallcancel As Boolean = False
            For Each movie In filteredlist
                If frmhtmloutput.IsDisposed Then
                    MsgBox("Operation Canceled")
                    overallcancel = True
                    Exit For
                End If
                frmhtmloutput.Label3.Text = "Processing: " & movie.title
                Dim tempint As Integer = filteredlist.Count - (counter + 1)
                frmhtmloutput.Label4.Text = tempint.ToString & " Movies Remaining"
                frmhtmloutput.Label3.Refresh()
                frmhtmloutput.Label4.Refresh()
                Application.DoEvents()
                Try
                    temphtml = temphtml & getmovietags(tempstring, movie, counter, pathstring)
                Catch
                End Try
                counter += 1
            Next
            If overallcancel = False Then
                temphtml = temphtml & "</body>"
                temphtml = temphtml & "</html>"

                Try
                    Dim objWriter As New System.IO.StreamWriter(savepath, False, Encoding.UTF8)
                    objWriter.Write(temphtml)
                    objWriter.Close()
                    frmhtmloutput.Close()
                    Dim tempint As Integer = MessageBox.Show("Your HTML list is now complete" & vbCrLf & " Do You wish to view it now?", "Question", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                    If tempint = DialogResult.Yes Then
                        Process.Start(savepath)
                    End If
                Catch ex As Exception
                    frmhtmloutput.Close()
                    MsgBox(ex.ToString)
                Finally

                End Try
            End If
        End If
    End Sub
    Dim dohtml As Boolean
    Dim fullhtmlstring As String
    Private Sub OutputMovieListAsHTMLToolStripMenuItem_DropDownItemClicked(ByVal sender As Object, ByVal e As System.Windows.Forms.ToolStripItemClickedEventArgs) Handles OutputMovieListAsHTMLToolStripMenuItem.DropDownItemClicked
        dohtml = True
        For Each temp In templatelist
            If temp.title = e.ClickedItem.Text Then
                Try
                    Dim fullstring As String
                    Dim cfg2 As IO.StreamReader = IO.File.OpenText(temp.path)
                    fullstring = cfg2.ReadToEnd
                    If fullstring.ToLower.IndexOf("<<mc html page>>") <> -1 And fullstring.ToLower.IndexOf("<</mc html page>>") <> -1 Then
                        fullhtmlstring = fullstring
                    Else
                        fullhtmlstring = Nothing
                    End If
                Catch ex As Exception
                    Dim t As Integer = 0
                End Try
                Exit For
            End If
        Next
       
    End Sub

    Dim showstoscrapelist As New List(Of String)
    Private Sub bckgroundscanepisodes_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles bckgroundscanepisodes.ProgressChanged
        Dim tempint As Integer
        Dim tempstring As String = ""
        Dim alreadyexists As Boolean = False
        If e.ProgressPercentage = 0 Then
            ToolStripStatusLabel6.Text = e.UserState
            ToolStripStatusLabel6.Visible = True
        ElseIf e.ProgressPercentage = 9999999 Then
            'add episode to treeview
            For Each ep In e.UserState
                totalepisodecount += 1
                TextBox33.Text = totalepisodecount.ToString
                Dim rootnode As String
                Dim childnode As String
                Dim fullpath As String
                Dim title As String
                Dim xmlerroer As Boolean = False
                Dim newepisodetoadd2 As New episodeinfo
                newepisodetoadd2 = ep
                fullpath = newepisodetoadd2.episodepath
                title = newepisodetoadd2.title
                Dim seasonno As Integer = Convert.ToInt32(newepisodetoadd2.seasonno)
                Dim teste As New tvshownfo


                Dim cnode As TreeNode
                Dim shownode As Integer

                For g = 0 To TreeView1.Nodes.Count - 1
                    Dim temppath As String = TreeView1.Nodes(g).Name.ToString.Replace("tvshow.nfo", "")
                    If fullpath.IndexOf(temppath) <> -1 Then
                        cnode = TreeView1.Nodes(g)
                        shownode = g
                        Exit For
                    End If
                Next


                Dim seasonstring As String = Nothing

                If seasonno <> 0 And seasonno <> -1 Then
                    If seasonno < 10 Then
                        tempstring = "Season 0" & seasonno.ToString
                    Else
                        tempstring = "Season " & seasonno.ToString
                    End If
                ElseIf seasonno = 0 Then
                    tempstring = "Specials"
                ElseIf seasonno = -1 Then
                    tempstring = "Unknown"
                End If
                alreadyexists = False
                For Each node In cnode.Nodes
                    If node.text = tempstring Then
                        alreadyexists = True
                        Exit For
                    End If
                Next
                If alreadyexists = False Then
                    Call newseason_checkforposter(tempstring, newepisodetoadd2.episodepath, TempTVDBiD) 'newepisodetoadd2.tvdbid)
                    cnode.Nodes.Add(tempstring)
                End If


                For Each node In cnode.Nodes
                    If node.text = tempstring Then
                        tempint = node.index
                        Exit For
                    End If
                Next
                Dim episode As Integer = Convert.ToInt32(newepisodetoadd2.episodeno)
                Dim eps As String
                If episode < 10 Then
                    eps = "0" & episode.ToString
                Else
                    eps = episode.ToString
                End If
                eps = eps & " - " & title


                Call add_episode_to_treeview(shownode, tempint, fullpath, eps, False)
            Next
            'Call add_episode_to_treeview(e.Empty
        End If

    End Sub

    Private Sub bckgroundscanepisodes_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs, Optional ByVal manual As Boolean = False) Handles bckgroundscanepisodes.DoWork
        Call episodescraper(showstoscrapelist, e.Argument)
    End Sub

    Private Sub startsearchforepisodes()
        If Not bckgroundscanepisodes.IsBusy And Not Bckgrndfindmissingepisodes.IsBusy Then
            'ToolStripButton10.Visible = True
            TabPage15.Text = "Cancel Episode Search"
            TabPage15.ToolTipText = "This cancels the episode search" & vbCrLf & "and episode scraper thread"
            showstoscrapelist.Clear()
            For Each item In basictvlist
                If (item.fullpath.ToLower.IndexOf("tvshow.nfo") <> -1) And (item.locked = 0) Then
                    showstoscrapelist.Add(item.fullpath)
                End If
            Next
            bckgroundscanepisodes.RunWorkerAsync()
        ElseIf bckgroundscanepisodes.IsBusy Then
            MsgBox("This Episode Scraper is already running")
        ElseIf Bckgrndfindmissingepisodes.IsBusy Then
            MsgBox("The missing episode search cannot be performed" & vbCrLf & "    while the episode scraper is running")
        End If
    End Sub

    Private Sub SearchThisShowForNewEpisodesToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SearchThisShowForNewEpisodesToolStripMenuItem.Click
        If Not bckgroundscanepisodes.IsBusy Then
            'ToolStripButton10.Visible = True
            TabPage15.Text = "Cancel Episode Search"
            TabPage15.ToolTipText = "This cancels the episode search" & vbCrLf & "and episode scraper thread"
            showstoscrapelist.Clear()
            If TreeView1.SelectedNode.Name.ToLower.IndexOf("tvshow.nfo") <> -1 Then
                Dim show As New BasicTvShowNFO
                show = nfofunction.loadbasictvshownfo(TreeView1.SelectedNode.Name)
                If show.locked = 1 Then
                    Dim tempint As Integer = MessageBox.Show("This TV Show is locked" & vbCrLf & "Are you sure you want to search for new episodes?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                    If tempint = DialogResult.Yes Then
                        showstoscrapelist.Add(TreeView1.SelectedNode.Name)
                        bckgroundscanepisodes.RunWorkerAsync(True)
                    End If
                ElseIf show.locked = 2 Then
                    Dim tempint As Integer = MessageBox.Show("This TV Show has been added automatically by Media Companion and has not been verified" & vbCrLf & "Are you sure you want to search for new episodes?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                    If tempint = DialogResult.Yes Then
                        showstoscrapelist.Add(TreeView1.SelectedNode.Name)
                        bckgroundscanepisodes.RunWorkerAsync(True)
                    End If
                Else
                    showstoscrapelist.Add(TreeView1.SelectedNode.Name)
                    bckgroundscanepisodes.RunWorkerAsync(True)
                End If

            Else
                MsgBox("Invalid Show")
            End If
        Else
            MsgBox("This TV Scraper is already running")
        End If
    End Sub

    Private Sub episodescraper(ByVal listofshowfolders As List(Of String), ByVal manual As Boolean)
        Dim tempstring As String = ""
        Dim tempint As Integer
        Dim errorstring As String
        Dim errorcounter As Integer = 0
        Dim trailer As String
        Dim newepisodecount As Integer
        Dim dirinfo As String
        newepisodelist.Clear()
        Dim newtvfolders As New List(Of String)
        Dim progress As Integer
        progress = 0
        Dim progresstext As String
        tvscraperlog = ""
        Dim dirpath As String
        Dim moviepattern As String
        Dim showtitle As String = ""
        If bckgroundscanepisodes.CancellationPending Then
            tvscraperlog = tvscraperlog & vbCrLf & "Operation cancelled by user"
            Exit Sub
        End If


        progresstext = String.Concat("Scanning TV Folders For New Episodes")
        bckgroundscanepisodes.ReportProgress(progress, progresstext)


        tvscraperlog = "Starting Folder Scan" & vbCrLf & vbCrLf

        'totalscan = True
        Dim extension As String
        Dim filename2 As String
        'inprog = True
        Dim extensions(100) As String
        Dim extensioncount As Integer
        extensions(1) = "*.avi"
        extensions(2) = "*.xvid"
        extensions(3) = "*.divx"
        extensions(4) = "*.img"
        extensions(5) = "*.mpg"
        extensions(6) = "*.mpeg"
        extensions(7) = "*.mov"
        extensions(8) = "*.rm"
        extensions(9) = "*.3gp"
        extensions(10) = "*.m4v"
        extensions(11) = "*.wmv"
        extensions(12) = "*.asf"
        extensions(13) = "*.mp4"
        extensions(14) = "*.mkv"
        extensions(15) = "*.nrg"
        extensions(16) = "*.iso"
        extensions(17) = "*.rmvb"
        extensions(18) = "*.ogm"
        extensions(19) = "*.bin"
        extensions(20) = "*.ts"
        extensions(21) = "*.vob"
        extensions(22) = "*.m2ts"
        extensions(23) = "*.rar"
        extensions(24) = "*.flv"
        extensions(25) = "*.dvr-ms"
        extensions(26) = "VIDEO_TS.IFO"

        extensioncount = 26

        For Each tvfolder In listofshowfolders
            Dim add As Boolean = True
            For Each tvshow In basictvlist
                If tvshow.fullpath.IndexOf(tvfolder) <> -1 Then
                    If tvshow.locked = True Or tvshow.locked = 2 Then
                        If manual = False Then
                            add = False
                            Exit For
                        End If
                    End If
                End If
            Next
            If add = True Then
                tvfolder = IO.Path.GetDirectoryName(tvfolder)
                progresstext = String.Concat("Adding subfolders: " & tvfolder)
                bckgroundscanepisodes.ReportProgress(progress, progresstext)
                If bckgroundscanepisodes.CancellationPending Then
                    tvscraperlog = tvscraperlog & vbCrLf & "Operation cancelled by user"
                    Exit Sub
                End If
                tempstring = "" 'tvfolder
                Dim hg As New IO.DirectoryInfo(tvfolder)
                If hg.Exists Then
                    scraperlog = scraperlog & "found" & hg.FullName.ToString & vbCrLf
                    newtvfolders.Add(tvfolder)
                    scraperlog = scraperlog & "Checking for subfolders" & vbCrLf
                    Dim newlist As List(Of String)

                    Try
                        For Each strfolder As String In My.Computer.FileSystem.GetDirectories(tvfolder)
                            Try
                                If strfolder.IndexOf("System Volume Information") = -1 Then
                                    tvscraperlog = tvscraperlog & "Subfolder added :- " & strfolder.ToString & vbCrLf
                                    newtvfolders.Add(strfolder)
                                    For Each strfolder2 As String In My.Computer.FileSystem.GetDirectories(strfolder, FileIO.SearchOption.SearchAllSubDirectories)
                                        Try
                                            If strfolder2.IndexOf("System Volume Information") = -1 Then
                                                tvscraperlog = tvscraperlog & "Subfolder added :- " & strfolder2.ToString & vbCrLf
                                                newtvfolders.Add(strfolder2)
                                            End If
                                        Catch ex As Exception
                                            MsgBox(ex.Message)
                                        End Try
                                    Next
                                End If
                            Catch ex As Exception
                                MsgBox(ex.Message)
                            End Try
                        Next
                    Catch ex As Exception
                        MsgBox(ex.ToString)
                    End Try
                End If
            Else
                tvscraperlog = tvscraperlog & vbCrLf & "Show Locked, Ignoring: " & tvfolder & vbCrLf
            End If
        Next

        scraperlog = scraperlog & vbCrLf
        Application.DoEvents()
        Dim mediacounter As Integer = newepisodelist.Count
        For g = 0 To newtvfolders.Count - 1
            If bckgroundscanepisodes.CancellationPending Then
                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                Exit Sub
            End If

            bckgroundscanepisodes.ReportProgress(progress, progresstext)
            If bckgroundscanepisodes.CancellationPending Then
                tvscraperlog = tvscraperlog & vbCrLf & "Operation cancelled by user"
                Exit Sub
            End If
            progresstext = String.Concat("Searching for episodes in " & newtvfolders(g))
            bckgroundscanepisodes.ReportProgress(progress, progresstext)
            For f = 1 To extensioncount


                If bckgroundscanepisodes.CancellationPending Then
                    tvscraperlog = tvscraperlog & vbCrLf & "Operation cancelled by user"
                    Exit Sub
                End If
                moviepattern = extensions(f)
                dirpath = newtvfolders(g)
                Dim dir_info As New System.IO.DirectoryInfo(dirpath)
                findnewepisodes(dirpath, moviepattern)
            Next f
            tempint = newepisodelist.Count - mediacounter

            tvscraperlog = tvscraperlog & tempint.ToString & " New episodes found in directory:- " & dirpath & vbCrLf
            mediacounter = newepisodelist.Count
        Next g

        tvscraperlog = tvscraperlog & vbCrLf
        If newepisodelist.Count <= 0 Then
            tvscraperlog = tvscraperlog & tempint.ToString & "No new episodes found, exiting scraper" & dirpath & vbCrLf
            Exit Sub
        End If

        Dim S As String = ""
        For Each newepisode In newepisodelist
            S = ""
            newepisodetoadd.episodeno = ""
            newepisodetoadd.episodepath = ""
            'newepisodetoadd.status = ""
            newepisodetoadd.imdbid = ""
            newepisodetoadd.playcount = ""
            newepisodetoadd.rating = ""
            newepisodetoadd.seasonno = ""
            newepisodetoadd.title = ""
            newepisodetoadd.tvdbid = ""

            If bckgroundscanepisodes.CancellationPending Then
                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                Exit Sub
            End If
            Dim episode As New EpisodeInfo
            Dim removal As String

            For Each Regexs In tvregex

                S = newepisode.episodepath '.ToLower
                S = S.Replace("x264", "")
                S = S.Replace("720p", "")
                S = S.Replace("720i", "")
                S = S.Replace("1080p", "")
                S = S.Replace("1080i", "")
                S = S.Replace("X264", "")
                S = S.Replace("720P", "")
                S = S.Replace("720I", "")
                S = S.Replace("1080P", "")
                S = S.Replace("1080I", "")
                Dim M As Match
                M = Regex.Match(S, Regexs)
                If M.Success = True Then
                    Try
                        newepisode.seasonno = M.Groups(1).Value.ToString
                        newepisode.episodeno = M.Groups(2).Value.ToString
                        If newepisode.seasonno <> "-1" And newepisode.episodeno <> "-1" Then
                            tvscraperlog = tvscraperlog & "Season and Episode information found for : " & newepisode.episodepath & newepisode.seasonno & "x" & newepisode.episodeno & vbCrLf
                        Else
                            tvscraperlog = tvscraperlog & "Cant extract Season and Episode deatails from filename: " & newepisode.seasonno & "x" & newepisode.episodeno & vbCrLf
                        End If
                        Try
                            newepisode.fanartpath = S.Substring(M.Groups(2).Index + M.Groups(2).Value.Length, S.Length - (M.Groups(2).Index + M.Groups(2).Value.Length))
                        Catch
                        End Try
                        Exit For
                    Catch
                        newepisode.seasonno = "-1"
                        newepisode.episodeno = "-1"
                    End Try
                End If
            Next
            If newepisode.seasonno = Nothing Then newepisode.seasonno = "-1"
            If newepisode.episodeno = Nothing Then newepisode.episodeno = "-1"
        Next
        Dim savepath As String = ""
        tvscraperlog = tvscraperlog & vbCrLf
        Dim scrapedok As Boolean
        For Each eps In newepisodelist
            TempTVDBiD = ""
            Dim episodearray As New List(Of EpisodeInfo)
            episodearray.Clear()
            Dim multieps2 As New EpisodeInfo
            multieps2.seasonno = eps.seasonno
            multieps2.episodeno = eps.episodeno
            multieps2.episodepath = eps.episodepath
            multieps2.mediaextension = eps.mediaextension
            episodearray.Add(multieps2)
            If bckgroundscanepisodes.CancellationPending Then
                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                Exit Sub
            End If
            tvscraperlog = tvscraperlog & vbCrLf & "Working on episode: " & eps.episodepath & vbCrLf
            progresstext = String.Concat("Scraping " & IO.Path.GetFileName(eps.episodepath))
            bckgroundscanepisodes.ReportProgress(progress, progresstext)

            Dim removal As String = ""
            If eps.seasonno = "-1" Or eps.episodeno = "-1" Then
                eps.title = filefunction.getfilename(eps.episodepath)
                eps.rating = "0"
                eps.playcount = "0"
                eps.genre = "Unknown Episode Season and/or Episode Number"
                eps.filedetails = filefunction.get_hdtags(eps.mediaextension)
                episodearray.Add(eps)
                savepath = episodearray(0).episodepath
            Else

                Dim temppath As String = eps.episodepath
                'check for multiepisode files
                Dim M2 As Match
                Dim epcount As Integer = 0
                Dim multiepisode As Boolean = False
                Dim allepisodes(100) As Integer
                S = eps.fanartpath
                eps.fanartpath = ""
                Do
                    'S = temppath '.ToLower
                    '<tvregex>[Ss]([\d]{1,2}).?[Ee]([\d]{3})</tvregex>
                    M2 = Regex.Match(S, "(([EeXx])([\d]{1,4}))")
                    If M2.Success = True Then
                        Dim skip As Boolean = False
                        For Each epso In episodearray
                            If epso.episodeno = M2.Groups(3).Value Then skip = True
                        Next
                        If skip = False Then
                            Dim multieps As New EpisodeInfo
                            multieps.seasonno = eps.seasonno
                            multieps.episodeno = M2.Groups(3).Value
                            multieps.episodepath = eps.episodepath
                            multieps.mediaextension = eps.mediaextension
                            episodearray.Add(multieps)
                            allepisodes(epcount) = Convert.ToDecimal(M2.Groups(3).Value)
                        End If
                        Try
                            S = S.Substring(M2.Groups(3).Index + M2.Groups(3).Value.Length, S.Length - (M2.Groups(3).Index + M2.Groups(3).Value.Length))
                        Catch
                        End Try
                    End If
                    If bckgroundscanepisodes.CancellationPending Then
                        tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                        Exit Sub
                    End If
                Loop Until M2.Success = False
                Dim language As String = ""
                Dim sortorder As String = ""
                Dim tvdbid As String = ""
                Dim imdbid As String = ""
                Dim actorsource As String = ""
                Dim realshowpath As String = ""

                savepath = episodearray(0).episodepath

                For Each Shows In basictvlist
                    If bckgroundscanepisodes.CancellationPending Then
                        tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                        Exit Sub
                    End If
                    If episodearray(0).episodepath.IndexOf(Shows.fullpath.Replace("tvshow.nfo", "")) <> -1 Then
                        language = Shows.language
                        sortorder = Shows.sortorder
                        tvdbid = Shows.tvdbid
                        TempTVDBiD = Shows.tvdbid
                        imdbid = Shows.imdbid
                        showtitle = Shows.title
                        realshowpath = Shows.fullpath
                        actorsource = Shows.episodeactorsource
                    End If
                Next
                If episodearray.Count > 1 Then
                    tvscraperlog = tvscraperlog & "Multipart episode found: " & vbCrLf
                    tvscraperlog = tvscraperlog & "Season: " & episodearray(0).seasonno & " Episodes, "
                    For Each ep In episodearray
                        tvscraperlog = tvscraperlog & ep.episodeno & ", "
                    Next
                    tvscraperlog = tvscraperlog & vbCrLf
                End If
                tvscraperlog = tvscraperlog & "Looking up scraper options from tvshow.nfo" & vbCrLf

                For Each singleepisode In episodearray

                    If bckgroundscanepisodes.CancellationPending Then
                        tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                        Exit Sub
                    End If
                    If singleepisode.seasonno.Length > 0 Or singleepisode.seasonno.IndexOf("0") = 0 Then
                        Do Until singleepisode.seasonno.IndexOf("0") <> 0 Or singleepisode.seasonno.Length = 1
                            singleepisode.seasonno = singleepisode.seasonno.Substring(1, singleepisode.seasonno.Length - 1)
                        Loop
                        If singleepisode.episodeno = "00" Then
                            singleepisode.episodeno = "0"
                        End If
                        If singleepisode.episodeno <> "0" Then
                            Do Until singleepisode.episodeno.IndexOf("0") <> 0
                                singleepisode.episodeno = singleepisode.episodeno.Substring(1, singleepisode.episodeno.Length - 1)
                            Loop
                        End If
                    End If
                    'Dim episodescraper As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
                    Dim episodescraper As New TVDBScraper
                    If sortorder = "" Then sortorder = "default"
                    Dim tempsortorder As String = sortorder
                    If language = "" Then language = "en"
                    If actorsource = "" Then actorsource = "tvdb"
                    If tvdbid <> "" Then
                        Dim episodeurl As String = "http://thetvdb.com/api/6E82FED600783400/series/" & tvdbid & "/" & sortorder & "/" & singleepisode.seasonno & "/" & singleepisode.episodeno & "/" & language & ".xml"
                        If Not UrlIsValid(episodeurl) Then
                            If sortorder.ToLower = "dvd" Then
                                tempsortorder = "default"
                                tvscraperlog = tvscraperlog & "This episode could not be found on TVDB using DVD sort order" & vbCrLf
                                tvscraperlog = tvscraperlog & "Attempting to find using default sort order" & vbCrLf
                                episodeurl = "http://thetvdb.com/api/6E82FED600783400/series/" & tvdbid & "/default/" & singleepisode.seasonno & "/" & singleepisode.episodeno & "/" & language & ".xml"
                            End If
                        End If

                        If UrlIsValid(episodeurl) Then


                            If userprefs.tvshow_useXBMC_Scraper = True Then
                                Dim FinalResult As String = ""
                                episodearray = XBMCScrape_TVShow_EpisodeDetails(tvdbid, tempsortorder, singleepisode.seasonno, singleepisode.episodeno, singleepisode.mediaextension, language)
                                If episodearray.Count >= 1 Then
                                    scrapedok = True

                                End If
                                Exit For
                            End If
                            'Dim tempepisode As String = episodescraper.getepisode(tvdbid, tempsortorder, singleepisode.seasonno, singleepisode.episodeno, language)
                            Dim tempepisode As String = getepisode(tvdbid, tempsortorder, singleepisode.seasonno, singleepisode.episodeno, language)
                            scrapedok = True
                            '                            Exit For
                            If tempepisode = Nothing Then
                                scrapedok = False
                                tvscraperlog = tvscraperlog & "This episode could not be found on TVDB" & vbCrLf
                            End If
                            If scrapedok = True Then
                                Dim scrapedepisode As New XmlDocument
                                Try
                                    tvscraperlog = tvscraperlog & "Scraping body of episode: " & singleepisode.episodeno & vbCrLf
                                    scrapedepisode.LoadXml(tempepisode)
                                    Dim thisresult As XmlNode = Nothing
                                    For Each thisresult In scrapedepisode("episodedetails")
                                        Select Case thisresult.Name
                                            Case "title"
                                                singleepisode.title = thisresult.InnerText
                                            Case "premiered"
                                                singleepisode.aired = thisresult.InnerText
                                            Case "plot"
                                                singleepisode.plot = thisresult.InnerText
                                            Case "director"
                                                Dim newstring As String
                                                newstring = thisresult.InnerText
                                                newstring = newstring.TrimEnd("|")
                                                newstring = newstring.TrimStart("|")
                                                newstring = newstring.Replace("|", " / ")
                                                singleepisode.director = newstring
                                            Case "credits"
                                                Dim newstring As String
                                                newstring = thisresult.InnerText
                                                newstring = newstring.TrimEnd("|")
                                                newstring = newstring.TrimStart("|")
                                                newstring = newstring.Replace("|", " / ")
                                                singleepisode.credits = newstring
                                            Case "rating"
                                                singleepisode.rating = thisresult.InnerText
                                            Case "thumb"
                                                singleepisode.thumb = thisresult.InnerText
                                            Case "actor"
                                                Dim actors As XmlNode = Nothing
                                                For Each actorl In thisresult.ChildNodes
                                                    Select Case actorl.name
                                                        Case "name"
                                                            Dim newactor As New MovieActors
                                                            newactor.actorname = actorl.innertext
                                                            singleepisode.listactors.Add(newactor)
                                                    End Select
                                                Next
                                        End Select
                                    Next
                                    singleepisode.playcount = "0"
                                Catch ex As Exception
                                    tvscraperlog = tvscraperlog & "Error scraping episode body, " & vbCrLf & ex.Message.ToString & vbCrLf & vbCrLf
                                End Try

                                If actorsource = "imdb" Then
                                    tvscraperlog = tvscraperlog & "Scraping actors from IMDB" & vbCrLf
                                    Dim url As String
                                    url = "http://www.imdb.com/title/" & imdbid & "/episodes"
                                    Dim tvfblinecount As Integer = 0
                                    Dim tvdbwebsource(10000)
                                    tvfblinecount = 0
                                    If bckgroundscanepisodes.CancellationPending Then
                                        tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                        Exit Sub
                                    End If
                                    Try
                                        Dim wrGETURL As WebRequest
                                        wrGETURL = WebRequest.Create(url)
                                        Dim myProxy As New WebProxy("myproxy", 80)
                                        myProxy.BypassProxyOnLocal = True
                                        Dim objStream As Stream
                                        objStream = wrGETURL.GetResponse.GetResponseStream()
                                        Dim objReader As New StreamReader(objStream)
                                        Dim tvdbsLine As String = ""
                                        tvfblinecount = 0

                                        Do While Not tvdbsLine Is Nothing
                                            tvfblinecount += 1
                                            tvdbsLine = objReader.ReadLine
                                            If Not tvdbsLine Is Nothing Then
                                                tvdbwebsource(tvfblinecount) = tvdbsLine
                                            End If
                                            If bckgroundscanepisodes.CancellationPending Then
                                                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                                Exit Sub
                                            End If
                                        Loop
                                        objReader.Close()
                                        objStream.Close()
                                        tvfblinecount -= 1
                                    Catch ex As WebException
                                        tvdbwebsource(0) = "404"
                                    End Try




                                    If tvfblinecount <> 0 Then
                                        Dim tvtempstring As String
                                        tvtempstring = "Season " & singleepisode.seasonno & ", Episode " & singleepisode.episodeno & ":"
                                        For g = 1 To tvfblinecount
                                            If tvdbwebsource(g).indexof(tvtempstring) <> -1 Then
                                                Dim tvtempint As Integer
                                                tvtempint = tvdbwebsource(g).indexof("<a href=""/title/")
                                                If tvtempint <> -1 Then
                                                    tvtempstring = tvdbwebsource(g).substring(tvtempint + 16, 9)
                                                    '            Dim scraperfunction As New imdb.Classimdbscraper ' add to comment this one because of changes i made to the Class "Scraper" (ClassimdbScraper)
                                                    Dim scraperfunction As New Classimdb
                                                    Dim actorlist As String = ""
                                                    actorlist = scraperfunction.getimdbactors(userprefs.imdbmirror, tvtempstring, , userprefs.maxactors)
                                                    Dim tempactorlist As New List(Of MovieActors)
                                                    Dim thumbstring As New XmlDocument
                                                    Dim thisresult As XmlNode = Nothing
                                                    Try
                                                        thumbstring.LoadXml(actorlist)
                                                        thisresult = Nothing
                                                        Dim countactors As Integer = 0
                                                        For Each thisresult In thumbstring("actorlist")
                                                            If bckgroundscanepisodes.CancellationPending Then
                                                                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                                                Exit Sub
                                                            End If
                                                            Select Case thisresult.Name
                                                                Case "actor"
                                                                    If countactors >= userprefs.maxactors Then
                                                                        Exit For
                                                                    End If
                                                                    countactors += 1
                                                                    Dim newactor As New MovieActors
                                                                    Dim detail As XmlNode = Nothing
                                                                    For Each detail In thisresult.ChildNodes
                                                                        Select Case detail.Name
                                                                            Case "name"
                                                                                newactor.actorname = detail.InnerText
                                                                            Case "role"
                                                                                newactor.actorrole = detail.InnerText
                                                                            Case "thumb"
                                                                                newactor.actorthumb = detail.InnerText
                                                                            Case "actorid"
                                                                                If newactor.actorthumb <> Nothing Then
                                                                                    If userprefs.actorseasy = True And detail.InnerText <> "" Then
                                                                                        Dim workingpath As String = episodearray(0).episodepath.Replace(IO.Path.GetFileName(episodearray(0).episodepath), "")
                                                                                        workingpath = workingpath & ".actors\"
                                                                                        Dim hg As New IO.DirectoryInfo(workingpath)
                                                                                        Dim destsorted As Boolean = False
                                                                                        If Not hg.Exists Then
                                                                                            Try
                                                                                                IO.Directory.CreateDirectory(workingpath)
                                                                                                destsorted = True
                                                                                            Catch ex As Exception

                                                                                            End Try
                                                                                        Else
                                                                                            destsorted = True
                                                                                        End If
                                                                                        If destsorted = True Then
                                                                                            Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                                                            filename = filename & ".tbn"
                                                                                            Dim tvshowactorpath As String = realshowpath
                                                                                            tvshowactorpath = tvshowactorpath.Replace(IO.Path.GetFileName(tvshowactorpath), "")
                                                                                            tvshowactorpath = IO.Path.Combine(tvshowactorpath, ".actors\")
                                                                                            tvshowactorpath = IO.Path.Combine(tvshowactorpath, filename)
                                                                                            filename = IO.Path.Combine(workingpath, filename)
                                                                                            If IO.File.Exists(tvshowactorpath) Then
                                                                                                Try
                                                                                                    IO.File.Copy(tvshowactorpath, filename, True)
                                                                                                Catch
                                                                                                End Try
                                                                                            End If
                                                                                            If Not IO.File.Exists(filename) Then
                                                                                                Dim buffer(4000000) As Byte
                                                                                                Dim size As Integer = 0
                                                                                                Dim bytesRead As Integer = 0
                                                                                                Dim thumburl As String = newactor.actorthumb
                                                                                                Dim req As HttpWebRequest = req.Create(thumburl)
                                                                                                Dim res As HttpWebResponse = req.GetResponse()
                                                                                                Dim contents As Stream = res.GetResponseStream()
                                                                                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                                                While bytesToRead > 0
                                                                                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                                                    If size = 0 Then Exit While
                                                                                                    bytesToRead -= size
                                                                                                    bytesRead += size
                                                                                                End While

                                                                                                Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                                                fstrm.Write(buffer, 0, bytesRead)
                                                                                                contents.Close()
                                                                                                fstrm.Close()
                                                                                            End If
                                                                                        End If
                                                                                    End If
                                                                                    If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                                                        Dim workingpath As String = ""
                                                                                        Dim networkpath As String = Form1.userprefs.actorsavepath
                                                                                        Try
                                                                                            tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                                            Dim hg As New IO.DirectoryInfo(tempstring)
                                                                                            If Not hg.Exists Then
                                                                                                IO.Directory.CreateDirectory(tempstring)
                                                                                            End If
                                                                                            workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                                            If Not IO.File.Exists(workingpath) Then
                                                                                                Dim buffer(4000000) As Byte
                                                                                                Dim size As Integer = 0
                                                                                                Dim bytesRead As Integer = 0
                                                                                                Dim thumburl As String = newactor.actorthumb
                                                                                                Dim req As HttpWebRequest = req.Create(thumburl)
                                                                                                Dim res As HttpWebResponse = req.GetResponse()
                                                                                                Dim contents As Stream = res.GetResponseStream()
                                                                                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                                                While bytesToRead > 0
                                                                                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                                                    If size = 0 Then Exit While
                                                                                                    bytesToRead -= size
                                                                                                    bytesRead += size
                                                                                                End While
                                                                                                Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                                                fstrm.Write(buffer, 0, bytesRead)
                                                                                                contents.Close()
                                                                                                fstrm.Close()
                                                                                            End If
                                                                                            newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                                            If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                                                newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                                            Else
                                                                                                newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                                            End If
                                                                                        Catch
                                                                                        End Try
                                                                                    End If
                                                                                End If
                                                                        End Select
                                                                        If bckgroundscanepisodes.CancellationPending Then
                                                                            tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                                                            Exit Sub
                                                                        End If
                                                                    Next
                                                                    tempactorlist.Add(newactor)
                                                            End Select
                                                            If bckgroundscanepisodes.CancellationPending Then
                                                                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                                                Exit Sub
                                                            End If
                                                        Next
                                                    Catch ex As Exception
                                                        tvscraperlog = tvscraperlog & "Error scraping episode actors from IMDB, " & vbCrLf & ex.Message.ToString & vbCrLf & vbCrLf
                                                    End Try




                                                    If tempactorlist.Count > 0 Then
                                                        tvscraperlog = tvscraperlog & "Actors scraped from IMDB OK" & vbCrLf
                                                        While tempactorlist.Count > userprefs.maxactors
                                                            tempactorlist.RemoveAt(tempactorlist.Count - 1)
                                                        End While
                                                        singleepisode.listactors.Clear()
                                                        For Each actor In tempactorlist
                                                            singleepisode.listactors.Add(actor)
                                                        Next
                                                        tempactorlist.Clear()
                                                    Else
                                                        tvscraperlog = tvscraperlog & "Actors not scraped from IMDB, reverting to TVDB actorlist" & vbCrLf
                                                    End If

                                                    Exit For
                                                End If
                                            End If
                                            If bckgroundscanepisodes.CancellationPending Then
                                                tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                                                Exit Sub
                                            End If
                                        Next

                                    Else
                                        'tvscraperlog = tvscraperlog & "Unable To Get Actors From IMDB, Defaulting To TVDB" & vbCrLf
                                    End If
                                End If
                                'Catch
                                '    singleepisode.title = IO.Path.GetFileName(singleepisode.episodepath)
                                '    If tvdbid = "" Then singleepisode.plot = "Unable to download episode info"
                                'End Try
                            End If

                            If userprefs.enablehdtags = True Then
                                Try
                                    singleepisode.filedetails = filefunction.get_hdtags(filefunction.getfilename(singleepisode.episodepath))

                                    If Not singleepisode.filedetails.filedetails_video.duration Is Nothing Then

                                        '1h 24mn 48s 546ms
                                        Dim hours As Integer
                                        Dim minutes As Integer
                                        tempstring = singleepisode.filedetails.filedetails_video.duration
                                        tempint = tempstring.IndexOf("h")
                                        If tempint <> -1 Then
                                            hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                            tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                            tempstring = Trim(tempstring)
                                        End If
                                        tempint = tempstring.IndexOf("mn")
                                        If tempint <> -1 Then
                                            minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                                        End If
                                        If hours <> 0 Then
                                            hours = hours * 60
                                        End If
                                        minutes = minutes + hours
                                        singleepisode.runtime = minutes.ToString & " min"
                                    End If
                                Catch
                                End Try
                            End If
                        Else
                            tvscraperlog = tvscraperlog & "Could not locate this episode on TVDB, or TVDB may be unavailable" & vbCrLf
                        End If
                    Else
                        tvscraperlog = tvscraperlog & "No TVDB ID is available for this show, please scrape the show using the ""TV Show Selector"" TAB" & vbCrLf
                    End If

                Next

            End If
            If savepath <> "" And scrapedok = True Then
                If bckgroundscanepisodes.CancellationPending Then
                    tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                    Exit Sub
                End If
                Dim newnamepath As String = ""
                If userprefs.tvshow_useXBMC_Scraper = True Then
                    newnamepath = savepath
                Else
                    newnamepath = addepisode(episodearray, savepath, showtitle)
                    '9999999
                    For Each ep In episodearray
                        ep.episodepath = newnamepath
                    Next
                End If
                bckgroundscanepisodes.ReportProgress(9999999, episodearray)
                If bckgroundscanepisodes.CancellationPending Then
                    tvscraperlog = tvscraperlog & vbCrLf & "Operation Cancelled by user" & vbCrLf
                    Exit Sub
                End If
                For Each Shows In basictvlist
                    If episodearray(0).episodepath.IndexOf(Shows.fullpath.Replace("\tvshow.nfo", "")) <> -1 Then
                        'workingtvshow = nfofunction.loadfulltnshownfo(Shows.fullpath)
                        For Each ept In episodearray
                            For j = Shows.missingepisodes.Count - 1 To 0 Step -1
                                If Shows.missingepisodes(j).title = ept.title Then
                                    Shows.missingepisodes.RemoveAt(j)
                                    Exit For
                                End If
                            Next
                        Next
                        For Each ep In episodearray
                            Dim newwp As New BasicEpisodeNFO
                            newwp.episodeno = ep.episodeno
                            newwp.episodepath = newnamepath
                            newwp.playcount = "0"
                            newwp.rating = ep.rating
                            newwp.seasonno = ep.seasonno
                            newwp.title = ep.title
                            Shows.allepisodes.Add(newwp)
                        Next
                    End If
                Next
            End If

        Next

        bckgroundscanepisodes.ReportProgress(0, progresstext)

    End Sub

    Public Function getepisode(ByVal tvdbid As String, ByVal sortorder As String, ByVal seriesno As String, ByVal episodeno As String, ByVal language As String)
        'Monitor.Enter(Me)
        Dim ErrorCounter As Integer = 0
        Dim episodestring As String = ""
        Dim episodeurl2 As String = ""
        Dim xmlfile As String
        Dim wrGETURL2 As WebRequest
        While ErrorCounter <= 10
            Try

                episodestring = ""
                episodeurl2 = ""

                'http://thetvdb.com/api/6E82FED600783400/series/70726/default/1/1/en.xml

                If language.ToLower.IndexOf(".xml") = -1 Then
                    language = language & ".xml"
                End If
                episodeurl2 = "http://thetvdb.com/api/6E82FED600783400/series/" & tvdbid & "/" & sortorder & "/" & seriesno & "/" & episodeno & "/" & language
                wrGETURL2 = WebRequest.Create(episodeurl2)
                Dim myProxy As New WebProxy("myproxy", 80)
                myProxy.BypassProxyOnLocal = True
                Dim objStream2 As Stream
                objStream2 = wrGETURL2.GetResponse.GetResponseStream()
                Dim objReader2 As New StreamReader(objStream2)

                xmlfile = objReader2.ReadToEnd
                objReader2.Close()
                objStream2.Close()
                Dim episode As New XmlDocument

                episode.LoadXml(xmlfile) ' é aqui que dá o erro manhoso

                episodestring = "<episodedetails>"
                episodestring = episodestring & "<url>" & episodeurl2 & "</url>"
                Dim mirrorslist As New XmlDocument
                'Try
                mirrorslist.LoadXml(xmlfile)
                Dim thisresult As XmlNode = Nothing
                For Each thisresult In mirrorslist("Data")

                    Select Case thisresult.Name
                        Case "Episode"
                            Dim mirrorselection As XmlNode = Nothing
                            For Each mirrorselection In thisresult.ChildNodes
                                Select Case mirrorselection.Name
                                    Case "EpisodeName"
                                        episodestring = episodestring & "<title>" & mirrorselection.InnerXml & "</title>"
                                    Case "FirstAired"
                                        episodestring = episodestring & "<premiered>" & mirrorselection.InnerXml & "</premiered>"
                                    Case "GuestStars"
                                        Dim tempstring As String = mirrorselection.InnerXml
                                        Try
                                            tempstring = tempstring.TrimStart("|")
                                            tempstring = tempstring.TrimEnd("|")
                                            Dim tvtempstring2 As String
                                            Dim tvtempint As Integer
                                            Dim a() As String
                                            Dim j As Integer
                                            tvtempstring2 = ""
                                            a = tempstring.Split("|")
                                            tvtempint = a.GetUpperBound(0)
                                            tvtempstring2 = a(0)
                                            If tvtempint >= 0 Then
                                                For j = 0 To tvtempint
                                                    Try
                                                        episodestring = episodestring & "<actor>" & "<name>" & a(j) & "</name></actor>"
                                                    Catch
                                                    End Try
                                                Next
                                            End If
                                        Catch
                                        End Try
                                    Case "Director"
                                        Dim tempstring As String = mirrorselection.InnerXml
                                        tempstring = tempstring.TrimStart("|")
                                        tempstring = tempstring.TrimEnd("|")
                                        episodestring = episodestring & "<director>" & tempstring & "</director>"
                                    Case "Writer"
                                        Dim tempstring As String = mirrorselection.InnerXml
                                        tempstring = tempstring.TrimStart("|")
                                        tempstring = tempstring.TrimEnd("|")
                                        episodestring = episodestring & "<credits>" & tempstring & "</credits>"
                                    Case "Overview"
                                        episodestring = episodestring & "<plot>" & mirrorselection.InnerXml & "</plot>"
                                    Case "Rating"
                                        episodestring = episodestring & "<rating>" & mirrorselection.InnerXml & "</rating>"
                                    Case "filename"
                                        episodestring = episodestring & "<thumb>http://www.thetvdb.com/banners/" & mirrorselection.InnerXml & "</thumb>"
                                End Select
                            Next
                    End Select
                Next
                episodestring = episodestring & "</episodedetails>"
                Return episodestring
                'Catch ex As Exception
                '    Return "ERROR - <url>" & episodeurl & "</url>"
                'Finally
                '    Monitor.Exit(Me)
                'End Try
            Catch ex As Exception
                If ErrorCounter <= 10 Then
                    ErrorCounter += 1
                Else
                    episodestring = Nothing
                End If
            End Try

        End While

    End Function

    Private Sub ReloadItemToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ReloadItemToolStripMenuItem1.Click
        Call loadinfofile()
    End Sub

    Private Sub TabPage22_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabPage22.LostFocus
        TabPage22.Focus()
    End Sub

    Private Sub TabPage22_MouseWheel(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles TabPage22.MouseWheel

    End Sub

    Private Sub RebuildActorDBToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RebuildActorDBToolStripMenuItem.Click
        Call rebuildactordb()
    End Sub

    Private Sub Button14_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button14.Click
        If TextBox38.Text <> "" Then
            Dim ex As Boolean = False
            For Each mset In userprefs.moviesets
                If mset = TextBox38.Text Then
                    ex = True
                    Exit For
                End If
            Next
            If ex = False Then
                userprefs.moviesets.Add(TextBox38.Text)
                ListBox4.Items.Add(TextBox38.Text)
                ComboBox3.Items.Clear()
                For Each mset In userprefs.moviesets
                    ComboBox3.Items.Add(mset)
                Next
                If workingmoviedetails.fullmoviebody.movieset <> Nothing Then
                    Dim add As Boolean = True
                    For Each mset In userprefs.moviesets
                        If mset = workingmoviedetails.fullmoviebody.movieset Then
                            add = False
                        End If
                    Next
                    If add = True Then
                        userprefs.moviesets.Add(workingmoviedetails.fullmoviebody.movieset)
                        ComboBox3.Items.Add(workingmoviedetails.fullmoviebody.movieset)
                    End If
                    For f = 0 To ComboBox3.Items.Count - 1
                        If ComboBox3.Items(f) = workingmoviedetails.fullmoviebody.movieset Then
                            ComboBox3.SelectedIndex = f
                            Exit For
                        End If
                    Next
                Else
                    If ComboBox3.Items.Count = 0 Then
                        If userprefs.moviesets.Count > 0 Then
                            For Each mset In userprefs.moviesets
                                ComboBox3.Items.Add(mset)
                            Next
                        End If
                    End If
                    If ComboBox3.Items.Count = 0 Then
                        ComboBox3.Items.Add("None")
                    End If
                    If ComboBox3.Items(0) <> "None" Then
                        ComboBox3.Items.Insert(0, "None")
                    End If
                    ComboBox3.SelectedIndex = 0
                End If
            Else
                MsgBox("This Movie Set Already Exists")
            End If
        End If
    End Sub

    Private Sub Button65_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button65.Click
        For i = 0 To ListBox4.SelectedItems.Count - 1
            Dim tempboolean As Boolean = False
            If ListBox4.SelectedItems(i) <> Nothing And ListBox4.SelectedItems(i) <> "" Then
                For Each mset In userprefs.moviesets
                    If mset = ListBox4.SelectedItems(i) Then
                        If workingmoviedetails.fullmoviebody.movieset <> mset Then
                            userprefs.moviesets.Remove(mset)
                        Else
                            MsgBox("Unable to remove """ & mset & """, it is being used by the selected Movie")
                        End If
                        Exit For
                    End If
                Next
            End If
        Next
        ListBox4.Items.Clear()
        ComboBox3.Items.Clear()
      
        For Each mset In userprefs.moviesets
            If mset <> "None" Then ListBox4.Items.Add(mset)
            ComboBox3.Items.Add(mset)
        Next

    End Sub

    Private Sub Button66_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button66.Click
        ComboBox1.Items.Clear()
        filteredlist.Clear()
        If ComboBox3.SelectedItem <> "None" Then
            For Each movie In fullmovielist
                If movie.movieset = ComboBox3.SelectedItem Then
                    filteredlist.Add(movie)
                End If
            Next
        Else
            For Each movie In fullmovielist
                If movie.movieset = Nothing Then
                    filteredlist.Add(movie)
                End If
            Next
        End If
        Call sortorder()
    End Sub

    Private Sub RadioButton32_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton32.CheckedChanged
        If RadioButton32.Checked = True Then
            Call tvfilter("screenshot")
        End If
    End Sub

    Private Sub RadioButton30_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton30.CheckedChanged
        If RadioButton30.Checked = True Then
            Call tvfilter("fanart")
        End If
    End Sub

    Private Sub RadioButton29_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton29.CheckedChanged
        If RadioButton29.Checked = True Then
            Call tvfilter("all")
        End If
    End Sub

    Private Sub RadioButton31_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton31.CheckedChanged
        If RadioButton31.Checked = True Then
            Call tvfilter("posters")
        End If
    End Sub

    Private Sub tvfilter(ByVal butt As String)
        If Not startup = True Then
            totalepisodecount = 0
            totaltvshowcount = 0
            If butt = "missingeps" Then
                For Each t As TreeNode In TreeView1.Nodes
                    For Each c As TreeNode In t.Nodes
                        For i = 1 To c.Nodes.Count
                            c.Nodes.RemoveAt(0)
                        Next
                    Next
                Next
                Dim shownode As Integer
                Dim cnode As TreeNode
                Dim tempstring As String
                Dim showtitlenode As TreeNode
                Dim tempint As Integer

                For Each item In basictvlist
                    For Each episode In item.missingepisodes
                        totalepisodecount += 1
                        Try
                            Dim seasonno As Integer = -10
                            seasonno = Convert.ToInt32(episode.seasonno)

                            For g = 0 To TreeView1.Nodes.Count - 1
                                If TreeView1.Nodes(g).Name.ToString = item.fullpath Then
                                    cnode = TreeView1.Nodes(g)
                                    shownode = g
                                    Exit For
                                End If
                            Next

                            Dim seasonstring As String = Nothing

                            If seasonno <> 0 And seasonno <> -1 Then
                                If seasonno < 10 Then
                                    tempstring = "Season 0" & seasonno.ToString
                                Else
                                    tempstring = "Season " & seasonno.ToString
                                End If
                            ElseIf seasonno = 0 Then
                                tempstring = "Specials"
                                'ElseIf seasonno = -1 Then
                                '    tempstring = "Unknown"
                            End If
                            Dim node As TreeNode
                            Dim alreadyexists As Boolean = False
                            For Each node In cnode.Nodes
                                If node.Text = tempstring Then
                                    alreadyexists = True
                                    Exit For
                                End If
                            Next

                            If alreadyexists = False Then cnode.Nodes.Add(tempstring)

                            For Each node In cnode.Nodes
                                If node.Text = tempstring Then
                                    tempint = node.Index

                                    Exit For
                                End If
                            Next

                            Dim eps As String
                            If episode.episodeno < 10 Then
                                eps = "0" & episode.episodeno.ToString
                            Else
                                eps = episode.episodeno.ToString
                            End If
                            eps = eps & " - " & episode.title
                            If episode.imdbid = Nothing Then
                                episode.imdbid = ""
                            End If

                            'If episode.imdbid.ToLower.IndexOf("xml error") <> -1 Then
                            '    Dim path As String = episode.episodepath.Replace(IO.Path.GetExtension(episode.episodepath), ".tbn")
                            '    If Not IO.File.Exists(path) Then
                            '        Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, True)
                            '    End If
                            'Else
                            '    Dim path As String = episode.episodepath.Replace(IO.Path.GetExtension(episode.episodepath), ".tbn")
                            '    If Not IO.File.Exists(path) Then
                            Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, False)
                            Dim child As TreeNode
                            Dim childchild As TreeNode
                            Dim childchildchild As TreeNode
                            For Each child In TreeView1.Nodes
                                For Each childchild In child.Nodes
                                    For Each childchildchild In childchild.Nodes
                                        childchildchild.ForeColor = Color.Blue
                                    Next
                                Next
                            Next
                            'End If
                            'End If
                        Catch ex As Exception
                            'MsgBox(ex.ToString)
                        End Try
                    Next
                Next
                For f = 0 To 3
                    For Each t As TreeNode In TreeView1.Nodes
                        For Each c As TreeNode In t.Nodes
                            If c.Nodes.Count = 0 Then
                                t.Nodes.RemoveAt(0)
                            End If
                        Next
                    Next
                Next
                For f = 1 To 10
                    For Each t As TreeNode In TreeView1.Nodes
                        If t.Nodes.Count = 0 Then
                            TreeView1.Nodes.Remove(t)
                        End If
                    Next
                Next
            ElseIf butt = "screenshot" Then
                For Each t As TreeNode In TreeView1.Nodes
                    For Each c As TreeNode In t.Nodes
                        For i = 1 To c.Nodes.Count
                            c.Nodes.RemoveAt(0)
                        Next
                    Next
                Next

                Dim shownode As Integer
                Dim cnode As TreeNode
                Dim tempstring As String
                Dim showtitlenode As TreeNode
                Dim tempint As Integer





                For Each item In basictvlist
                    For Each episode In item.allepisodes
                        totalepisodecount += 1
                        Try
                            Dim seasonno As Integer = -10
                            seasonno = Convert.ToInt32(episode.seasonno)

                            For g = 0 To TreeView1.Nodes.Count - 1
                                If TreeView1.Nodes(g).Name.ToString = item.fullpath Then
                                    cnode = TreeView1.Nodes(g)
                                    shownode = g
                                    Exit For
                                End If
                            Next

                            Dim seasonstring As String = Nothing

                            If seasonno <> 0 And seasonno <> -1 Then
                                If seasonno < 10 Then
                                    tempstring = "Season 0" & seasonno.ToString
                                Else
                                    tempstring = "Season " & seasonno.ToString
                                End If
                            ElseIf seasonno = 0 Then
                                tempstring = "Specials"
                                'ElseIf seasonno = -1 Then
                                '    tempstring = "Unknown"
                            End If
                            Dim node As TreeNode
                            Dim alreadyexists As Boolean = False
                            For Each node In cnode.Nodes
                                If node.Text = tempstring Then
                                    alreadyexists = True
                                    Exit For
                                End If
                            Next

                            If alreadyexists = False Then cnode.Nodes.Add(tempstring)

                            For Each node In cnode.Nodes
                                If node.Text = tempstring Then
                                    tempint = node.Index

                                    Exit For
                                End If
                            Next

                            Dim eps As String
                            If episode.episodeno < 10 Then
                                eps = "0" & episode.episodeno.ToString
                            Else
                                eps = episode.episodeno.ToString
                            End If
                            eps = eps & " - " & episode.title
                            If episode.imdbid = Nothing Then
                                episode.imdbid = ""
                            End If

                            If episode.imdbid.ToLower.IndexOf("xml error") <> -1 Then
                                Dim path As String = episode.episodepath.Replace(IO.Path.GetExtension(episode.episodepath), ".tbn")
                                If Not IO.File.Exists(path) Then
                                    Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, True)
                                End If
                            Else
                                Dim path As String = episode.episodepath.Replace(IO.Path.GetExtension(episode.episodepath), ".tbn")
                                If Not IO.File.Exists(path) Then
                                    Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, False)
                                End If
                            End If
                        Catch ex As Exception
                            'MsgBox(ex.ToString)
                        End Try
                    Next
                Next
                For f = 0 To 3
                    For Each t As TreeNode In TreeView1.Nodes
                        For Each c As TreeNode In t.Nodes
                            If c.Nodes.Count = 0 Then
                                t.Nodes.RemoveAt(0)
                            End If
                        Next
                    Next
                Next
                For f = 1 To 10
                    For Each t As TreeNode In TreeView1.Nodes
                        If t.Nodes.Count = 0 Then
                            TreeView1.Nodes.Remove(t)
                        End If
                    Next
                Next
            ElseIf butt = "all" Then
                Call populatetvtree()
            ElseIf butt = "fanart" Then
                For Each t As TreeNode In TreeView1.Nodes
                    For i = 1 To t.Nodes.Count
                        t.Nodes.RemoveAt(0)
                    Next
                Next
                For f = TreeView1.Nodes.Count - 1 To 0 Step -1
                    Dim fanartpath As String = TreeView1.Nodes(f).Name.Replace(IO.Path.GetFileName(TreeView1.Nodes(f).Name), "fanart.jpg")
                    If IO.File.Exists(fanartpath) Then
                        TreeView1.Nodes.RemoveAt(f)
                    End If
                Next
            ElseIf butt = "posters" Then
                For Each t As TreeNode In TreeView1.Nodes
                    For Each c As TreeNode In t.Nodes
                        For i = 1 To c.Nodes.Count
                            c.Nodes.RemoveAt(0)
                        Next
                    Next
                Next

                For Each t As TreeNode In TreeView1.Nodes
                    Dim allposterpath As String = t.Name.Replace(IO.Path.GetFileName(t.Name), "season-all.tbn")
                    For i = t.Nodes.Count - 1 To 0 Step -1
                        Dim posterpath As String = t.Nodes(i).Text
                        If posterpath.ToLower.IndexOf("season") <> -1 Then
                            posterpath = posterpath.Replace(" ", "")
                            posterpath = t.Nodes(i).Parent.Name.Replace("tvshow.nfo", posterpath & ".tbn")
                        End If
                        If posterpath.ToLower.IndexOf("specials") <> -1 Then
                            posterpath = posterpath.Replace(" ", "")
                            posterpath = t.Nodes(i).Parent.Name.Replace("tvshow.nfo", "season-specials.tbn")
                        End If
                        If IO.File.Exists(posterpath) Then
                            t.Nodes.RemoveAt(i)
                        Else
                            Dim hytgv As String = "huhuh"
                        End If
                    Next
                    If Not IO.File.Exists(allposterpath) Then
                        t.Nodes.Add("season-all.tbn", allposterpath)
                    End If
                Next

                For f = 1 To 10
                    For Each t As TreeNode In TreeView1.Nodes
                        If t.Nodes.Count = 0 Then
                            TreeView1.Nodes.Remove(t)
                        End If
                    Next
                Next
            End If
            Dim nod As TreeNode

            If TreeView1.Nodes.Count = 0 Then
                'screenshot
                'fanart
                'posters
                Dim messstring As String = ""
                If butt = "screenshot" Then
                    messstring = "All episodes have screenhots"
                ElseIf butt = "fanart" Then
                    messstring = "All TV Shows have a Backdrop"
                ElseIf butt = "posters" Then
                    messstring = "All Shows and Seasons have a Poster"
                ElseIf butt = "all" Then
                    messstring = ""
                Else
                    messstring = "No missing art could be found"
                End If
                If messstring <> "" Then
                    MsgBox(messstring)
                    RadioButton29.Checked = True
                End If
            Else
                If butt <> "all" And butt <> "" Then
                    For Each nod In TreeView1.Nodes
                        nod.ExpandAll()
                    Next
                End If
            End If
        End If
    End Sub

    Dim processnow As Boolean = True
    Dim currenttitle As String
    Private Sub titletxt_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles titletxt.Enter
        Try
            processnow = False
            If titletxt.Text.IndexOf(workingmoviedetails.fullmoviebody.year) <> -1 Then
                Dim tempstring2 As String = " (" & workingmoviedetails.fullmoviebody.year & ")"
                Dim tempstring As String = titletxt.Text.Replace(tempstring2, "")
                tempstring = tempstring.TrimEnd(" ")
                currenttitle = tempstring
                titletxt.Items.Clear()
                'titletxt.Items.Add(tempstring)
                For Each item In workingmoviedetails.alternativetitles
                    If item <> tempstring Then
                        titletxt.Items.Add(item)
                    End If
                Next
                titletxt.SelectedIndex = -1
                titletxt.Text = tempstring

            End If
        Catch
        End Try
    End Sub

    Private Sub titletxt_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles titletxt.Leave
        Try

            TextBox34.Text = titletxt.Text
            'For Each item In workingmoviedetails.alternativetitles
            '    If item = currenttitle Then
            '        workingmoviedetails.alternativetitles.Remove(item)
            '        workingmoviedetails.alternativetitles.Add(titletxt.Text)
            '        Exit For
            '    End If
            'Next
            If titletxt.Text.IndexOf(workingmoviedetails.fullmoviebody.year) = -1 Then
                Dim tempstring As String = titletxt.Text
                titletxt.Items.Clear()
                'titletxt.Items.Add(tempstring & " (" & workingmoviedetails.fullmoviebody.year & ")")
                For Each item In workingmoviedetails.alternativetitles
                    If item <> currenttitle Then
                        titletxt.Items.Add(item)
                    End If
                Next
                titletxt.Text = tempstring & " (" & workingmoviedetails.fullmoviebody.year & ")"
                'titletxt.SelectedIndex = -1
            End If
            processnow = True
        Catch
        End Try
    End Sub

    Private Sub titletxt_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles titletxt.SelectedIndexChanged
        Try
            If titletxt.Text.IndexOf(workingmoviedetails.fullmoviebody.year) = -1 Then
                Dim tempstring As String = titletxt.Text
                titletxt.Items.Clear()
                titletxt.Items.Add(tempstring & " (" & workingmoviedetails.fullmoviebody.year & ")")
                For Each item In workingmoviedetails.alternativetitles
                    If item <> tempstring Then
                        titletxt.Items.Add(item)
                    End If
                Next
                titletxt.SelectedIndex = 0
            End If
        Catch
        End Try
    End Sub

    Private Sub displaypreferences()
        ListBox7.Items.Clear()
        For Each item In moviefolders
            ListBox7.Items.Add(item)
        Next
        ListBox15.Items.Clear()
        For Each item In userprefs.offlinefolders
            ListBox15.Items.Add(item)
        Next
    End Sub


    Private Sub btn_addmoviefolderdialogue_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_addmoviefolderdialogue.Click
        Dim allok As Boolean = True
        Dim theFolderBrowser As New FolderBrowserDialog
        Dim thefoldernames As String
        theFolderBrowser.Description = "Please Select Folder to Add to DB (Subfolders will also be added)"
        theFolderBrowser.ShowNewFolderButton = True
        theFolderBrowser.RootFolder = System.Environment.SpecialFolder.Desktop
        theFolderBrowser.SelectedPath = Form1.userprefs.lastpath
        If theFolderBrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
            thefoldernames = (theFolderBrowser.SelectedPath)
            Form1.userprefs.lastpath = thefoldernames
            For Each item As Object In ListBox2.Items
                If thefoldernames.ToString = item.ToString Then allok = False
            Next

            If allok = True Then
                ListBox7.Items.Add(thefoldernames)
                ListBox7.Refresh()
            Else
                MsgBox("        Folder Already Exists")
            End If
        End If
    End Sub

    Private Sub btn_removemoviefolder_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_removemoviefolder.Click
        While ListBox7.SelectedItems.Count > 0
            ListBox7.Items.Remove(ListBox7.SelectedItems(0))
        End While

    End Sub

    Private Sub DownsizeAllFanartsToSelectedSizeToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownsizeAllFanartsToSelectedSizeToolStripMenuItem.Click
        Dim tempint As Integer = fullmovielist.Count
        Dim messbox As message_box = New message_box("Please wait, Backdrops are being resized", "", tempint.ToString & " remaining")
        System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
        messbox.Show()
        Me.Refresh()
        messbox.Refresh()
        Try

            For Each movie In fullmovielist
                tempint -= 1
                messbox.TextBox3.Text = tempint.ToString & " remaining"
                messbox.TextBox3.Refresh()
                'Application.DoEvents()
                Try
                    Dim tempfanartpath As String = ""
                    tempfanartpath = filefunction.getfanartpath(movie.fullpathandfilename)
                    Dim btmp As New Bitmap(tempfanartpath)
                    Dim bmp As New Bitmap(btmp)
                    btmp.Dispose()
                    If Form1.userprefs.resizefanart = 2 Then
                        If bmp.Width > 1280 Or bmp.Height > 720 Then
                            Dim bm_source As New Bitmap(bmp)
                            Dim bm_dest As New Bitmap(1280, 720)
                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                            gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                            Dim tempbitmap As Bitmap = bm_dest
                            tempbitmap.Save(tempfanartpath, Imaging.ImageFormat.Jpeg)
                        End If
                    ElseIf Form1.userprefs.resizefanart = 3 Then
                        If bmp.Width > 960 Or bmp.Height > 540 Then
                            Dim bm_source As New Bitmap(bmp)
                            Dim bm_dest As New Bitmap(960, 540)
                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                            gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                            Dim tempbitmap As Bitmap = bm_dest
                            tempbitmap.Save(tempfanartpath, Imaging.ImageFormat.Jpeg)
                        End If
                    End If
                Catch
                End Try
            Next
        Catch
        Finally
            Try
                messbox.Close()
            Catch
            End Try
        End Try
    End Sub

    Private Sub Button76_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button76.Click
        Dim folderstoadd As New List(Of String)
        Dim offlinefolderstoadd As New List(Of String)
        Dim folderstoremove As New List(Of String)
        Dim offlinefolderstoremove As New List(Of String)
        For Each item In ListBox7.Items
            Dim add As Boolean = True
            For Each folder In moviefolders
                If folder = item Then add = False
            Next
            If add = True Then folderstoadd.Add(item)
        Next
        For Each item In ListBox15.Items
            Dim add As Boolean = True
            For Each folder In userprefs.offlinefolders
                If folder = item Then add = False
            Next
            If add = True Then offlinefolderstoadd.Add(item)
        Next
        For Each item In moviefolders
            Dim remove As Boolean = True
            For Each folder In ListBox7.Items
                If folder = item Then remove = False
            Next
            If remove = True Then folderstoremove.Add(item)
        Next
        For Each item In userprefs.offlinefolders
            Dim remove As Boolean = True
            For Each folder In ListBox15.Items
                If folder = item Then remove = False
            Next
            If remove = True Then offlinefolderstoremove.Add(item)
        Next
        If folderstoremove.Count > 0 Or offlinefolderstoremove.Count > 0 Then
            For Each item In folderstoremove
                For f = fullmovielist.Count - 1 To 0 Step -1
                    If fullmovielist(f).fullpathandfilename.IndexOf(item) <> -1 Then
                        fullmovielist.RemoveAt(f)
                    End If
                Next
            Next
            For Each item In offlinefolderstoremove
                For f = fullmovielist.Count - 1 To 0 Step -1
                    If fullmovielist(f).fullpathandfilename.IndexOf(item) <> -1 Then
                        fullmovielist.RemoveAt(f)
                    End If
                Next
            Next
            For f = moviefolders.Count - 1 To 0 Step -1
                Dim remove As Boolean = False
                For Each folder In folderstoremove
                    If moviefolders(f) = folder Then
                        remove = True
                    End If
                Next
                If remove = True Then moviefolders.RemoveAt(f)
            Next
            For f = userprefs.offlinefolders.Count - 1 To 0 Step -1
                Dim remove As Boolean = False
                For Each folder In offlinefolderstoremove
                    If userprefs.offlinefolders(f) = folder Then
                        remove = True
                    End If
                Next
                If remove = True Then userprefs.offlinefolders.RemoveAt(f)
            Next
            Dim save As New _preferences
            Call save.saveconfig()
            Call savedata()
        End If

        If folderstoadd.Count > 0 Or offlinefolderstoadd.Count > 0 Then
            messbox = New message_box("New Movie Folders Found", "Adding to DB", "Please Wait")
            'remove old
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()
            Try
                For Each folder In folderstoadd
                    moviefolders.Add(folder)
                Next
                For Each folder In offlinefolderstoadd
                    userprefs.offlinefolders.Add(folder)
                    folderstoadd.Add(folder)
                Next
                Call nfos_to_array(folderstoadd)
                Dim save As New _preferences
                Call save.saveconfig()
            Catch
            End Try
            messbox.Close()
        End If
        Try
            'ignore = False
            ComboBox1.SelectedIndex = 0
            If ComboBox1.SelectedItem.value <> "" Then
                'loadinfofile()
            End If
        Catch ex As Exception

        End Try
        Call savedata()
        'filteredlist = fullmovielist
        Call sortorder()
        'Call loadmovielist()
        Call applyfilters()
        Call loadinfofile()

    End Sub

    Private Sub newseason_checkforposter(ByVal season As String, ByVal path As String, ByVal tvdbid As String)
        Dim seasonposterpath As String = "na"
        Dim seasonfilename As String = season 'Season 08
        Dim seasonnumber As String
        season = season.Replace("Season ", "season")
        seasonnumber = season
        seasonnumber = seasonnumber.Replace("season", "")
        If seasonnumber.IndexOf("0") = 0 Then
            Try
                seasonnumber = seasonnumber.Substring(1, 1)
            Catch
            End Try
        End If
        If season = "season00" Then
            season = "season-specials.tbn"
        Else
            season = season & ".tbn"
        End If
        For Each folder In tvfolders
            If path.IndexOf(folder) <> -1 Then
                seasonposterpath = IO.Path.Combine(folder, season)
            End If
        Next
        If seasonposterpath <> "na" Then
            If IO.File.Exists(seasonposterpath) Then Exit Sub
            Dim showlist As New XmlDocument
            'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
            Dim tvdbstuff As New TVDBScraper
            Dim thumblist As String = tvdbstuff.getposterlist(tvdbid)
            showlist.LoadXml(thumblist)
            Dim tvseasonposterlist As New List(Of tvbanners)
            tvseasonposterlist.Clear()
            Dim backupposterurl As String = ""
            Dim primaryposterurl As String = ""
            For Each thisresult In showlist("banners")
                Dim newtvposter As New tvbanners
                Select Case thisresult.Name
                    Case "banner"

                        For Each results In thisresult.ChildNodes
                            Select Case results.Name
                                Case "url"
                                    newtvposter.url = results.InnerText
                                Case "bannertype"
                                    newtvposter.bannertype = results.InnerText
                                Case "language"
                                    newtvposter.language = results.InnerText
                                Case "season"
                                    newtvposter.season = results.InnerText
                            End Select
                        Next
                End Select
                If newtvposter.language = userprefs.tvdblanguagecode And newtvposter.season = seasonnumber Then
                    primaryposterurl = newtvposter.url
                    Exit For
                Else
                    If backupposterurl = "" And newtvposter.season = seasonnumber Then backupposterurl = newtvposter.url
                End If
            Next
            If primaryposterurl <> "" Then
                Dim i1 As New PictureBox

                With i1
                    .WaitOnLoad = True
                    Try
                        .ImageLocation = primaryposterurl
                    Catch
                        Try
                            .ImageLocation = backupposterurl
                        Catch
                        End Try
                    End Try
                End With

                Try
                    If Not i1 Is Nothing Then
                        i1.Image.Save(seasonposterpath, Imaging.ImageFormat.Jpeg)
                    End If
                Catch
                End Try
            End If
        End If
    End Sub

    Private Sub setuptvfolders()
        ListBox5.Items.Clear()
        ListBox6.Items.Clear()
        For Each folder In tvrootfolders
            ListBox5.Items.Add(folder)
        Next
        For Each folder In tvfolders
            ListBox6.Items.Add(folder)
        Next
    End Sub

    Private Sub Button69_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button69.Click
        While ListBox5.SelectedItems.Count > 0
            ListBox5.Items.Remove(ListBox5.SelectedItems(0))
        End While
    End Sub

    Private Sub Button71_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button71.Click
        While ListBox6.SelectedItems.Count > 0
            ListBox6.Items.Remove(ListBox6.SelectedItems(0))
        End While
    End Sub

    Private Sub Button68_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button68.Click
        'browse for root tv folder
        Dim allok As Boolean = True
        Dim cancelregex As Boolean = False
        Dim newtvshow As Boolean = False
        Dim theFolderBrowser As New FolderBrowserDialog
        Dim strfolder As String
        Dim tempstring3 As String
        Dim tempint As Integer
        Dim tempint2 As Integer
        theFolderBrowser.Description = "Please Select Root Folder of the TV Shows You Wish To Add to DB"
        theFolderBrowser.ShowNewFolderButton = True
        theFolderBrowser.RootFolder = System.Environment.SpecialFolder.Desktop
        theFolderBrowser.SelectedPath = Form1.userprefs.lastpath
        If theFolderBrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
            strfolder = (theFolderBrowser.SelectedPath)
            Form1.userprefs.lastpath = strfolder
            Try
                allok = True
                For Each item As Object In ListBox5.Items
                    If strfolder = item.ToString Then allok = False
                Next
                Dim hasseason As Boolean = False
                If allok = True Then
                    For Each strfolder2 As String In My.Computer.FileSystem.GetDirectories(strfolder)
                        Dim M As Match
                        tempstring3 = strfolder2.ToLower
                        M = Regex.Match(tempstring3, "(series ?\d+|season ?\d+|s ?\d+|^\d{1,3}$)")
                        If M.Success = True Then
                            hasseason = True
                            Exit For
                        End If
                    Next
                    If hasseason = True Then
                        tempint = MessageBox.Show(strfolder & " Appears to Contain Season Folders" & vbCrLf & "Are you sure this folder contains multiple" & vbCrLf & "TV Shows, Each in it's own folder?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                        If tempint = DialogResult.Yes Then
                            ListBox5.Items.Add(strfolder)
                        ElseIf tempint = DialogResult.No Then
                            tempint2 = MessageBox.Show("Do you wish to add this as a single TV Show Folder?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                            If tempint2 = DialogResult.Yes Then
                                Dim test As Boolean = True
                                For Each folder In ListBox6.Items
                                    If folder = strfolder Then
                                        test = False
                                        MsgBox("Folder not added, Already exists")
                                        Exit For
                                    End If
                                Next
                                If test = True Then
                                    ListBox6.Items.Add(strfolder)
                                End If
                            End If
                        End If
                    Else
                        ListBox5.Items.Add(strfolder)
                    End If
                Else
                    MsgBox("Root already exists")
                End If
            Catch ex As Exception
                MsgBox("error")
            End Try
        End If
    End Sub

    Private Sub TabPage23_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabPage23.Leave
        Dim allok As Boolean = True
        If TabPage23.Text <> "Folders" Then
            Exit Sub
        End If
        If tvfolders.Count <> ListBox6.Items.Count Then allok = False
        If tvrootfolders.Count <> ListBox5.Items.Count Then allok = False
        If allok = True Then
            Dim templist As New List(Of String)
            templist.Clear()
            For Each item In ListBox5.Items
                templist.Add(item)
            Next
            For Each item In tvrootfolders
                If Not templist.Contains(item) Then
                    allok = False
                    Exit For
                End If
            Next
        End If
        If allok = True Then
            Dim templist As New List(Of String)
            templist.Clear()
            For Each item In ListBox6.Items
                templist.Add(item)
            Next
            For Each item In tvfolders
                If Not templist.Contains(item) Then
                    allok = False
                    Exit For
                End If
            Next
        End If
        If allok = False Then
            Dim tempint As Integer = MessageBox.Show("There appears to be unsaved changes to your folderlists," & vbCrLf & "Do wish to save the changes", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            If tempint = DialogResult.Yes Then
                tvfolders.Clear()
                For Each item In ListBox6.Items
                    If Not newtvfolders.Contains(item) Then
                        tvfolders.Add(item)
                    End If
                Next
                tvrootfolders.Clear()
                For Each item In ListBox5.Items
                    tvrootfolders.Add(item)
                Next
                Dim save As New _preferences
                Call save.saveconfig()
                Call updatetree()
                If newtvfolders.Count = 0 Then
                    MsgBox("Changes Saved")
                Else
                    MsgBox("Changes Saved, additional folders will be added to your list as they are scraped")
                    If Not bckgrnd_tvshowscraper.IsBusy Then
                        bckgrnd_tvshowscraper.RunWorkerAsync()
                    End If
                End If
            Else
                Dim load As New _preferences
                Call load.loadconfig()
            End If
        End If
    End Sub

    Private Sub Button83_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button83.Click
        tvfolders.Clear()
        For Each item In ListBox6.Items
            If Not newtvfolders.Contains(item) Then
                tvfolders.Add(item)
            End If
        Next
        tvrootfolders.Clear()
        For Each item In ListBox5.Items
            tvrootfolders.Add(item)
        Next
        Dim save As New _preferences
        Call save.saveconfig()
        Call updatetree()
        If newtvfolders.Count = 0 Then
            MsgBox("Changes Saved")
        Else
            MsgBox("Changes Saved, additional folders will be added to your list as they are scraped")
            If Not bckgrnd_tvshowscraper.IsBusy Then
                ToolStripStatusLabel5.Text = "Scraping TV Shows, " & newtvshows.Count + 1 & " remaining"
                ToolStripStatusLabel5.Visible = True
                bckgrnd_tvshowscraper.RunWorkerAsync()
            End If
        End If
    End Sub

    Private Sub Button84_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button84.Click
        For Each folder In ListBox5.Items
            For Each strfolder2 As String In My.Computer.FileSystem.GetDirectories(folder)
                If Not ListBox6.Items.Contains(strfolder2) Then
                    ListBox6.Items.Add(strfolder2)
                    newtvfolders.Add(strfolder2)
                End If
            Next
        Next
    End Sub

    Private Sub Button85_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button85.Click
        newtvfolders.Clear()
        Call setuptvfolders()
    End Sub

    Public Sub updatetree(Optional ByVal addnew As Boolean = True)


        Dim oldfolders As New List(Of String)
        totaltvshowcount = 0
        totalepisodecount = 0
        TextBox32.Text = ""
        TextBox33.Text = ""
        Me.Enabled = False
        'basictvlist.Clear()
        TreeView1.Nodes.Clear()
      
        For Each tvshow In basictvlist
            Dim tempstring As String = tvshow.fullpath.Replace("\tvshow.nfo", "")
            If Not tvfolders.Contains(tempstring) Then
                oldfolders.Add(tempstring)
            End If
        Next
        For Each folder In oldfolders
            For Each oldshow In basictvlist
                Dim tempstring As String = oldshow.fullpath.Replace("\tvshow.nfo", "")
                If tempstring = folder Then
                    basictvlist.Remove(oldshow)
                    For Each fol In tvfolders
                        If oldshow.fullpath.IndexOf(fol) <> -1 Then
                            tvfolders.Remove(fol)
                            Exit For
                        End If
                    Next
                    Exit For
                End If
            Next
        Next

        'get list of new
        Dim folderstoadd As New List(Of String)
        For Each folder In tvfolders
            Dim add As Boolean = True
            Dim tempstring2 As String = folder
            For Each tvshow In basictvlist
                Dim tempstring As String = tvshow.fullpath.Replace("\tvshow.nfo", "")
                If folder = tempstring Then
                    add = False
                    Exit For
                End If
            Next
            If add = True Then
                folderstoadd.Add(tempstring2)
            End If
        Next

        If folderstoadd.Count > 0 Then
            messbox = New message_box("New TV Folders Found", "Adding to DB", "Please Wait")
            'remove old
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()
            'messbox.Show()
            Try
                For Each tvfolder In folderstoadd
                    Try
                        Dim shownfopath As String = IO.Path.Combine(tvfolder, "tvshow.nfo")
                        Dim newtvshownfo As basictvshownfo
                        newtvshownfo = nfofunction.loadbasictvshownfo(shownfopath)
                        'Try
                        '    If addnew = True Then
                        '        If Not IO.File.Exists(shownfopath) Then
                        'Call setgoingnewtvshows(shownfopath)
                        '        End If
                        '    End If
                        'Catch
                        'End Try
                        If newtvshownfo.title <> Nothing Then
                            If newtvshownfo.status.IndexOf("skipthisfile") = -1 Then
                                Dim skip As Boolean = False
                                For Each tvshow In basictvlist
                                    If newtvshownfo.fullpath = tvshow.fullpath Then
                                        skip = True
                                        Exit For
                                    End If
                                Next
                                If skip = False Then
                                    ListtvFiles(newtvshownfo, "*.NFO")
                                    basictvlist.Add(newtvshownfo)
                                End If
                            End If
                        End If
                        realtvpaths.Add(tvfolder)
                    Catch
                    End Try
                Next
            Catch
            End Try
            messbox.Close()
        End If
        'For Each tv In basictvlist
        '    ListtvFiles(tv, "*.NFO")
        'Next
        Call populatetvtree()
        'messbox.Close()
        Me.Enabled = True

        Call savetvdata()

    End Sub

    Private Sub CheckRootsForToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckRootsForToolStripMenuItem.Click

        For Each folder In tvrootfolders
            For Each strfolder2 As String In My.Computer.FileSystem.GetDirectories(folder)
                If Not tvfolders.Contains(strfolder2) Then
                    If Not newtvfolders.Contains(strfolder2) Then
                        newtvfolders.Add(strfolder2)
                    End If
                End If
            Next
        Next
        If newtvfolders.Count = 0 Then
            MsgBox("No New Shows Found")
        Else
            MsgBox("Changes Saved, additional folders will be added to your list as they are scraped")
            If Not bckgrnd_tvshowscraper.IsBusy Then
                ToolStripStatusLabel5.Text = "Scraping TV Shows, " & newtvfolders.Count & " remaining"
                ToolStripStatusLabel5.Visible = True
                bckgrnd_tvshowscraper.RunWorkerAsync()
            End If
        End If
        
    End Sub

    Private Sub Button70_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button70.Click
        Dim allok As Boolean = True
        Dim theFolderBrowser As New FolderBrowserDialog
        Dim thefoldernames As String
        theFolderBrowser.Description = "Please Select TV Folder to Add to DB"
        theFolderBrowser.ShowNewFolderButton = True
        theFolderBrowser.RootFolder = System.Environment.SpecialFolder.Desktop
        theFolderBrowser.SelectedPath = Form1.userprefs.lastpath
        If theFolderBrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
            thefoldernames = (theFolderBrowser.SelectedPath)
            For Each item As Object In ListBox6.Items
                If thefoldernames.ToString = item.ToString Then allok = False
            Next
            Form1.userprefs.lastpath = thefoldernames
            If allok = True Then
                ListBox6.Items.Add(thefoldernames)
            Else
                MsgBox("        Folder Already Exists")
            End If
        End If
    End Sub

    Private Sub Button72_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button72.Click
        If TextBox40.Text = Nothing Then
            Exit Sub
        End If
        If TextBox40.Text = "" Then
            Exit Sub
        End If
        Dim tempstring As String = TextBox40.Text
        Do While tempstring.LastIndexOf("\") = tempstring.Length - 1
            tempstring = tempstring.Substring(0, tempstring.Length - 1)
        Loop
        Do While tempstring.LastIndexOf("/") = tempstring.Length - 1
            tempstring = tempstring.Substring(0, tempstring.Length - 1)
        Loop
        Dim exists As Boolean = False
        For Each item In ListBox6.Items
            If item.ToString.ToLower = tempstring.ToLower Then
                exists = True
                Exit For
            End If
        Next
        If exists = True Then
            MsgBox("        Folder Already Exists")
        Else
            Dim f As New IO.DirectoryInfo(tempstring)
            If f.Exists Then
                ListBox6.Items.Add(tempstring)
                TextBox40.Text = ""
            Else
                Dim tempint As Integer = MessageBox.Show("This folder does not appear to exist" & vbCrLf & "Are you sure you wish to add it", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                If tempint = DialogResult.Yes Then
                    ListBox6.Items.Add(tempstring)
                    TextBox40.Text = ""
                End If
            End If
        End If
    End Sub

    Private Sub Button67_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button67.Click
        If TextBox39.Text = Nothing Then
            Exit Sub
        End If
        If TextBox39.Text = "" Then
            Exit Sub
        End If
        Dim tempstring As String = TextBox39.Text
        Do While tempstring.LastIndexOf("\") = tempstring.Length - 1
            tempstring = tempstring.Substring(0, tempstring.Length - 1)
        Loop
        Do While tempstring.LastIndexOf("/") = tempstring.Length - 1
            tempstring = tempstring.Substring(0, tempstring.Length - 1)
        Loop
        Dim exists As Boolean = False
        For Each item In ListBox5.Items
            If item.ToString.ToLower = tempstring.ToLower Then
                exists = True
                Exit For
            End If
        Next
        If exists = True Then
            MsgBox("        Folder Already Exists")
        Else
            Dim f As New IO.DirectoryInfo(tempstring)
            If f.Exists Then
                ListBox5.Items.Add(tempstring)
                TextBox39.Text = ""
            Else
                Dim tempint As Integer = MessageBox.Show("This folder does not appear to exist" & vbCrLf & "Are you sure you wish to add it", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
                If tempint = DialogResult.Yes Then
                    ListBox5.Items.Add(tempstring)
                    TextBox39.Text = ""
                End If
            End If
        End If
    End Sub
    Dim generalprefschanged As Boolean = False
    Dim prefsload As Boolean = False
    Private Sub setupgeneralpreferences()
        prefsload = True
        generalprefschanged = False
        Dim tcc As TypeConverter = TypeDescriptor.GetConverter(GetType(System.Drawing.Font))
        Dim newFont As System.Drawing.Font
        If userprefs.font <> Nothing Then
            If userprefs.font <> "" Then
                Try
                    newFont = CType(tcc.ConvertFromString(userprefs.font), System.Drawing.Font)
                Catch ex As Exception
                    newFont = CType(tcc.ConvertFromString("Times New Roman, 9pt"), System.Drawing.Font)
                    userprefs.font = "Times New Roman, 9pt"
                End Try
            Else
                newFont = CType(tcc.ConvertFromString("Times New Roman, 9pt"), System.Drawing.Font)
                userprefs.font = "Times New Roman, 9pt"
            End If
        Else
            newFont = CType(tcc.ConvertFromString("Times New Roman, 9pt"), System.Drawing.Font)
            userprefs.font = "Times New Roman, 9pt"
        End If
        Label130.Font = newFont
        If userprefs.ignorearticle = True Then
            CheckBox41.CheckState = CheckState.Checked
        Else
            CheckBox41.CheckState = CheckState.Unchecked
        End If
        If userprefs.intruntime = True Then
            CheckBox38.CheckState = CheckState.Checked
        Else
            CheckBox38.CheckState = CheckState.Unchecked
        End If
        If userprefs.actorseasy = True Then
            CheckBox33.CheckState = CheckState.Checked
        Else
            CheckBox33.CheckState = CheckState.Unchecked
        End If

        If userprefs.videomode = 1 Then
            RadioButton38.Checked = True
        ElseIf userprefs.videomode = 2 Then
            RadioButton37.Checked = True
        ElseIf userprefs.videomode = 4 Then
            RadioButton36.Checked = True
        End If
        If userprefs.videomode = 4 Then
            Label121.Text = Form1.userprefs.selectedvideoplayer
            Label121.Visible = True
            btn_custommediaplayer.Enabled = True
        Else
            btn_custommediaplayer.Enabled = False
            Label121.Visible = False
        End If
        txtbx_minrarsize.Text = userprefs.rarsize

        If userprefs.externalbrowser = True Then
            CheckBox12.Checked = True
        Else
            CheckBox12.Checked = False
        End If

        If userprefs.startupcache = True Then
            chkbx_disablecache.Checked = False
        Else
            chkbx_disablecache.Checked = True
        End If
        ListBox13.Items.Clear()
        For Each prof In profile_structure.profilelist
            ListBox13.Items.Add(prof.profilename)
        Next
        Label112.Text = "Current Default Profile Is :- " & profile_structure.defaultprofile
        Label108.Text = "Current Startup Profile Is :- " & profile_structure.startupprofile
        prefsload = False

        ListBox16.Items.Clear()
        ListBox17.Items.Clear()

        For Each com In userprefs.commandlist
            ListBox16.Items.Add(com.title)
            ListBox17.Items.Add(com.command)
        Next

    End Sub

    Private Sub RadioButton38_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton38.CheckedChanged
        If RadioButton38.Checked = True Then
            userprefs.videomode = 1
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub RadioButton37_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton37.CheckedChanged
        If RadioButton37.Checked = True Then
            userprefs.videomode = 2
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub RadioButton36_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton36.CheckedChanged
        If RadioButton36.Checked = True Then
            userprefs.videomode = 4
            btn_custommediaplayer.Enabled = True
            Label121.Visible = True
            If userprefs.selectedvideoplayer <> Nothing Then
                If userprefs.selectedvideoplayer <> "" Then
                    Label121.Text = userprefs.selectedvideoplayer
                Else
                    Label121.Text = ""
                End If
            Else
                Label121.Text = ""
            End If
        Else
            Label121.Visible = False
            btn_custommediaplayer.Enabled = False
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub btn_custommediaplayer_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_custommediaplayer.Click
        Dim filebrowser As New OpenFileDialog
        Dim mstrProgramFilesPath As String = System.Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles)
        filebrowser.InitialDirectory = mstrProgramFilesPath
        filebrowser.Filter = "Executable Files|*.exe"
        filebrowser.Title = "Find Executable Of Preferred Media Player"
        If filebrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
            userprefs.selectedvideoplayer = filebrowser.FileName
            Label121.Visible = True
            Label121.Text = Form1.userprefs.selectedvideoplayer
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub txtbx_minrarsize_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtbx_minrarsize.KeyPress
        If e.KeyChar.IsNumber(e.KeyChar) = False And e.KeyChar <> Chr(8) Then
            If txtbx_minrarsize.Text <> "" Then
                e.Handled = True
            Else
                MsgBox("Please Enter at least 0")
                txtbx_minrarsize.Text = "8"
            End If
        End If
        If txtbx_minrarsize.Text = "" Then
            MsgBox("Please enter a numerical Value that is 1 or more")
            txtbx_minrarsize.Text = "8"
            Exit Sub
        End If
        If Not IsNumeric(txtbx_minrarsize.Text) Then
            MsgBox("Please enter a numerical Value that is 1 or more")
            txtbx_minrarsize.Text = "8"
            Exit Sub
        End If
        If prefsload = False Then generalprefschanged = True
        userprefs.rarsize = Convert.ToInt32(txtbx_minrarsize.Text)
    End Sub

    Private Sub txtbx_minrarsize_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtbx_minrarsize.TextChanged
        If IsNumeric(txtbx_minrarsize.Text) Then
            userprefs.rarsize = Convert.ToInt32(txtbx_minrarsize.Text)
        Else
            userprefs.rarsize = 8
            txtbx_minrarsize.Text = "8"
        End If
    End Sub

    Private Sub Button81_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button81.Click
        Dim save As New _preferences
        save.saveconfig()
        ToolsToolStripMenuItem.DropDownItems.Clear()
        For Each com In userprefs.commandlist
            ToolsToolStripMenuItem.DropDownItems.Add(com.title)
        Next
        MsgBox("Changes Saved!" & vbCrLf & vbCrLf & "Please restart the program" & vbCrLf & "for the changes to take effect")
        generalprefschanged = False
       
    End Sub

    Private Sub chkbx_disablecache_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkbx_disablecache.CheckedChanged
        If chkbx_disablecache.Checked = True Then
            userprefs.startupcache = False
        Else
            userprefs.startupcache = True
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub CheckBox12_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox12.CheckedChanged
        If CheckBox12.Checked = True Then
            userprefs.externalbrowser = True
        Else
            userprefs.externalbrowser = False
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub


    Private Sub TabPage18_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabPage18.Leave
        If generalprefschanged = True Then
            Dim tempint As Integer = MessageBox.Show("You appear to have made changes to your preferences," & vbCrLf & "Do wish to save the changes", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            If tempint = DialogResult.Yes Then
                Dim save As New _preferences
                Call save.saveconfig()

                MsgBox("Changes Saved")
            Else
                Dim load As New _preferences
                Call load.loadconfig()
            End If
            generalprefschanged = False
        End If
        If userprefs.font <> Nothing Then
            If userprefs.font <> "" Then
                Dim tc As TypeConverter = TypeDescriptor.GetConverter(GetType(System.Drawing.Font))
                Dim newFont As System.Drawing.Font = CType(tc.ConvertFromString(userprefs.font), System.Drawing.Font)
                Call setupfont()
            End If
        End If
    End Sub

    Private Sub setupmoviepreferences()
        If userprefs.enablehdtags = True Then
            CheckBox19.CheckState = CheckState.Checked
        Else
            CheckBox19.CheckState = CheckState.Unchecked
        End If

        If userprefs.resizefanart = 1 Then
            RadioButton35.Checked = True
        ElseIf userprefs.resizefanart = 2 Then
            RadioButton34.Checked = True
        ElseIf userprefs.resizefanart = 3 Then
            RadioButton33.Checked = True
        End If


        ListBox9.SelectedItem = userprefs.imdbmirror

        If userprefs.scrapemovieposters = True Then
            CheckBox18.CheckState = CheckState.Checked
        Else
            CheckBox18.CheckState = CheckState.Unchecked
        End If

        If userprefs.savefanart = True Then
            CheckBox13.CheckState = CheckState.Checked
        Else
            CheckBox13.CheckState = CheckState.Unchecked
        End If

        If userprefs.usefoldernames = True Then
            chkbx_usefoldernames.CheckState = CheckState.Checked
        Else
            chkbx_usefoldernames.CheckState = CheckState.Unchecked
        End If

        If userprefs.createfolderjpg = True Then
            chkbx_createfolderjpg.CheckState = CheckState.Checked
        Else
            chkbx_createfolderjpg.CheckState = CheckState.Unchecked
        End If

        If userprefs.gettrailer = True Then
            CheckBox11.CheckState = CheckState.Checked
        Else
            CheckBox11.CheckState = CheckState.Unchecked
        End If

        Select Case userprefs.maxactors
            Case 9999
                ComboBox7.SelectedItem = "All Available"
            Case 0
                ComboBox7.SelectedItem = "None"
            Case 5
                ComboBox7.SelectedItem = "5"
            Case 10
                ComboBox7.SelectedItem = "10"
            Case 15
                ComboBox7.SelectedItem = "15"
            Case 20
                ComboBox7.SelectedItem = "20"
            Case 25
                ComboBox7.SelectedItem = "25"
            Case 30
                ComboBox7.SelectedItem = "30"
            Case 40
                ComboBox7.SelectedItem = "40"
            Case 50
                ComboBox7.SelectedItem = "50"
            Case 70
                ComboBox7.SelectedItem = "70"
            Case 90
                ComboBox7.SelectedItem = "90"
            Case 110
                ComboBox7.SelectedItem = "110"
            Case 125
                ComboBox7.SelectedItem = "125"
            Case 150
                ComboBox7.SelectedItem = "150"
            Case 175
                ComboBox7.SelectedItem = "175"
            Case 200
                ComboBox7.SelectedItem = "200"
            Case 250
                ComboBox7.SelectedItem = "250"
        End Select

        Select Case userprefs.maxmoviegenre
            Case 99
                ComboBox6.SelectedItem = "All Available"
            Case 0
                ComboBox6.SelectedItem = "None"
            Case 1
                ComboBox6.SelectedItem = "1"
            Case 2
                ComboBox6.SelectedItem = "2"
            Case 3
                ComboBox6.SelectedItem = "3"
            Case 4
                ComboBox6.SelectedItem = "4"
            Case 5
                ComboBox6.SelectedItem = "5"
            Case 6
                ComboBox6.SelectedItem = "6"
            Case 7
                ComboBox6.SelectedItem = "7"
            Case 8
                ComboBox6.SelectedItem = "8"
            Case 9
                ComboBox6.SelectedItem = "9"
            Case 10
                ComboBox6.SelectedItem = "10"
        End Select

        For f = 0 To 3
            ListBox10.Items.Add(userprefs.moviethumbpriority(f))
        Next
        For f = 0 To 33
            ListBox11.Items.Add(userprefs.certificatepriority(f))
        Next
        If userprefs.basicsavemode = True Then
            chkbx_basicsave.CheckState = CheckState.Checked
        Else
            chkbx_basicsave.CheckState = CheckState.Unchecked
        End If
        localactorpath.Text = userprefs.actorsavepath
        xbmcactorpath.Text = userprefs.actornetworkpath
        If userprefs.actorsave = True Then
            saveactorchkbx.CheckState = CheckState.Checked
            localactorpath.Enabled = True
            xbmcactorpath.Enabled = True
            Button77.Enabled = True
        Else
            saveactorchkbx.CheckState = CheckState.Unchecked
            localactorpath.Enabled = False
            xbmcactorpath.Enabled = False
            Button77.Enabled = False
        End If

        If userprefs.nfoposterscraper = 0 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 1 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 2 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 3 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 4 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 5 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 6 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 7 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Unchecked
        ElseIf userprefs.nfoposterscraper = 8 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 9 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 10 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 11 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Unchecked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 12 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 13 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Unchecked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 14 Then
            IMPA_chk.CheckState = CheckState.Unchecked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Checked
        ElseIf userprefs.nfoposterscraper = 15 Then
            IMPA_chk.CheckState = CheckState.Checked
            tmdb_chk.CheckState = CheckState.Checked
            mpdb_chk.CheckState = CheckState.Checked
            imdb_chk.CheckState = CheckState.Checked
        End If

        If userprefs.disablelogfiles = True Then
            CheckBox16.CheckState = CheckState.Unchecked
        Else
            CheckBox16.CheckState = CheckState.Checked
        End If
        If userprefs.movies_useXBMC_Scraper = True Then
            CheckBox_Use_XBMC_Scraper.CheckState = CheckState.Checked
        Else
            CheckBox_Use_XBMC_Scraper.CheckState = CheckState.Unchecked
        End If

        generalprefschanged = False
    End Sub

    Private Sub CheckBox16_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox16.CheckedChanged
        If CheckBox16.CheckState = CheckState.Checked Then
            userprefs.disablelogfiles = False
        Else
            userprefs.disablelogfiles = True
        End If
        generalprefschanged = True
    End Sub

    Private Sub Button73_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button73.Click
        Try
            Dim mSelectedIndex, mOtherIndex As Integer
            If Me.ListBox10.SelectedIndex <> 0 Then
                mSelectedIndex = Me.ListBox10.SelectedIndex
                mOtherIndex = mSelectedIndex - 1
                ListBox10.Items.Insert(mSelectedIndex + 1, ListBox10.Items(mOtherIndex))
                ListBox10.Items.RemoveAt(mOtherIndex)
            End If
            For f = 0 To 3
                userprefs.moviethumbpriority(f) = ListBox10.Items(f)
            Next
            generalprefschanged = True
        Catch
        End Try
    End Sub

    Private Sub Button61_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button61.Click
        Try
            Dim mSelectedIndex, mOtherIndex As Integer
            If Me.ListBox10.SelectedIndex <> Me.ListBox3.Items.Count - 1 Then
                mSelectedIndex = Me.ListBox10.SelectedIndex
                mOtherIndex = mSelectedIndex + 1
                ListBox10.Items.Insert(mSelectedIndex, ListBox10.Items(mOtherIndex))
                ListBox10.Items.RemoveAt(mOtherIndex + 1)
            End If
            For f = 0 To 3
                Form1.userprefs.moviethumbpriority(f) = ListBox10.Items(f)
            Next
            generalprefschanged = True
        Catch
        End Try
    End Sub

    Private Sub Button75_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button75.Click
        Try
            Dim mSelectedIndex, mOtherIndex As Integer
            If Me.ListBox11.SelectedIndex <> 0 Then
                mSelectedIndex = Me.ListBox11.SelectedIndex
                mOtherIndex = mSelectedIndex - 1
                ListBox11.Items.Insert(mSelectedIndex + 1, ListBox11.Items(mOtherIndex))
                ListBox11.Items.RemoveAt(mOtherIndex)
            End If
            For f = 0 To 33
                userprefs.certificatepriority(f) = ListBox11.Items(f)
            Next
            generalprefschanged = True
        Catch
        End Try
    End Sub

    Private Sub Button74_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button74.Click
        Try
            Dim mSelectedIndex, mOtherIndex As Integer
            If Me.ListBox11.SelectedIndex <> Me.ListBox11.Items.Count - 1 Then
                mSelectedIndex = Me.ListBox10.SelectedIndex
                mOtherIndex = mSelectedIndex + 1
                ListBox11.Items.Insert(mSelectedIndex, ListBox11.Items(mOtherIndex))
                ListBox11.Items.RemoveAt(mOtherIndex + 1)
            End If
            For f = 0 To 33
                userprefs.certificatepriority(f) = ListBox11.Items(f)
            Next
            generalprefschanged = True
        Catch
        End Try
    End Sub

    Private Sub saveactorchkbx_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles saveactorchkbx.CheckedChanged
        If saveactorchkbx.CheckState = CheckState.Checked Then
            userprefs.actorsave = True
            localactorpath.Text = userprefs.actorsavepath
            xbmcactorpath.Text = userprefs.actornetworkpath
            localactorpath.Enabled = True
            xbmcactorpath.Enabled = True
            Button77.Enabled = True
            generalprefschanged = True
        Else
            userprefs.actorsave = False
            generalprefschanged = True
            localactorpath.Text = ""
            xbmcactorpath.Text = ""
            localactorpath.Enabled = False
            xbmcactorpath.Enabled = False
            Button77.Enabled = False
        End If
    End Sub

    Private Sub Button82_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button82.Click
        Dim save As New _preferences
        save.saveconfig()
        MsgBox("Changes Saved!" & vbCrLf & vbCrLf & "Please restart the program" & vbCrLf & "for the changes to take effect")
        generalprefschanged = False
    End Sub

    Private Sub RadioButton35_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton35.CheckedChanged
        If RadioButton35.Checked = True Then
            userprefs.resizefanart = 1
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton33_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton33.CheckedChanged
        If RadioButton33.Checked = True Then
            userprefs.resizefanart = 3
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton34_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton34.CheckedChanged
        If RadioButton34.Checked = True Then
            userprefs.resizefanart = 2
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox18_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox18.CheckedChanged
        If CheckBox18.CheckState = CheckState.Checked Then
            userprefs.scrapemovieposters = True
        Else
            userprefs.scrapemovieposters = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox13_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox13.CheckedChanged
        If CheckBox13.CheckState = CheckState.Checked Then
            userprefs.savefanart = True
        Else
            userprefs.savefanart = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox11_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox11.CheckedChanged
        If CheckBox11.CheckState = CheckState.Checked Then
            userprefs.gettrailer = True
        Else
            userprefs.gettrailer = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox_Use_XBMC_Scraper_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox_Use_XBMC_Scraper.CheckedChanged
        If CheckBox_Use_XBMC_Scraper.CheckState = CheckState.Checked Then
            userprefs.movies_useXBMC_Scraper = True
            GroupBox9.Enabled = False
            GroupBox11.Enabled = False
            ComboBox7.Enabled = False
            ComboBox6.Enabled = False
            Label98.Enabled = False
            Label92.Enabled = False

            Label93.Enabled = False
            Label99.Enabled = False
            ListBox10.Enabled = False
            Button73.Enabled = False
            Button61.Enabled = False

            RadioButton51.Visible = True
            RadioButton52.Visible = True
            If userprefs.XBMC_Scraper = "imdb" Then
                RadioButton51.Checked = True
            ElseIf userprefs.XBMC_Scraper = "tmdb" Then
                RadioButton52.Checked = True
            End If
        Else
            userprefs.movies_useXBMC_Scraper = False
            GroupBox9.Enabled = True
            GroupBox11.Enabled = True
            ComboBox7.Enabled = True
            ComboBox6.Enabled = True
            Label98.Enabled = True
            Label92.Enabled = True
            Label93.Enabled = True
            Label99.Enabled = True
            ListBox10.Enabled = True
            Button73.Enabled = True
            Button61.Enabled = True
            RadioButton51.Visible = False
            RadioButton52.Visible = False
        End If
    End Sub

    Private Sub RadioButton51_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton51.CheckedChanged
        If RadioButton51.Checked = True Then
            userprefs.XBMC_Scraper = "imdb"
        End If
    End Sub

    Private Sub RadioButton52_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton52.CheckedChanged
        If RadioButton52.Checked = True Then
            userprefs.XBMC_Scraper = "tmdb"
        End If
    End Sub

    Private Sub chkbx_usefoldernames_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkbx_usefoldernames.CheckedChanged
        If chkbx_usefoldernames.CheckState = CheckState.Checked Then
            userprefs.usefoldernames = True
        Else
            userprefs.usefoldernames = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub chkbx_createfolderjpg_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkbx_createfolderjpg.CheckedChanged, CheckBox39.CheckedChanged
        If chkbx_createfolderjpg.CheckState = CheckState.Checked Then
            userprefs.createfolderjpg = True
        Else
            userprefs.createfolderjpg = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub ListBox9_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox9.SelectedIndexChanged
        userprefs.imdbmirror = ListBox9.SelectedItem
        generalprefschanged = True
    End Sub

    Private Sub ComboBox7_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox7.SelectedIndexChanged
        If IsNumeric(ComboBox7.SelectedItem) Then
            userprefs.maxactors = Convert.ToInt32(ComboBox7.SelectedItem)
        ElseIf ComboBox7.SelectedItem.ToString.ToLower = "none" Then
            userprefs.maxactors = 0
        Else
            userprefs.maxactors = 9999
        End If
        generalprefschanged = True
    End Sub

    Private Sub ComboBox6_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox6.SelectedIndexChanged
        If IsNumeric(ComboBox6.SelectedItem) Then
            userprefs.maxmoviegenre = Convert.ToInt32(ComboBox6.SelectedItem)
        ElseIf ComboBox6.SelectedItem.ToString.ToLower = "none" Then
            userprefs.maxmoviegenre = 0
        Else
            userprefs.maxmoviegenre = 9999
        End If
        generalprefschanged = True
    End Sub

    Private Sub IMPA_chk_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles IMPA_chk.CheckedChanged
        Call setnfothumbnailurls()
        generalprefschanged = True
    End Sub

    Private Sub mpdb_chk_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mpdb_chk.CheckedChanged
        Call setnfothumbnailurls()
        generalprefschanged = True
    End Sub

    Private Sub tmdb_chk_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles tmdb_chk.CheckedChanged
        Call setnfothumbnailurls()
        generalprefschanged = True
    End Sub

    Private Sub imdb_chk_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles imdb_chk.CheckedChanged
        Call setnfothumbnailurls()
        generalprefschanged = True
    End Sub

    Private Sub setnfothumbnailurls()
        If IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 0
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 1
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 2
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 3
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 4
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 5
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 6
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Unchecked Then
            Form1.userprefs.nfoposterscraper = 7
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 8
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 9
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 10
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Unchecked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 11
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 12
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Unchecked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 13
        ElseIf IMPA_chk.CheckState = CheckState.Unchecked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 14
        ElseIf IMPA_chk.CheckState = CheckState.Checked And tmdb_chk.CheckState = CheckState.Checked And mpdb_chk.CheckState = CheckState.Checked And imdb_chk.CheckState = CheckState.Checked Then
            Form1.userprefs.nfoposterscraper = 15
        End If
    End Sub

    Private Sub Button77_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button77.Click
        Dim theFolderBrowser As New FolderBrowserDialog
        Dim thefoldernames As String
        theFolderBrowser.Description = "Please Select Folder to Save Actor Thumbnails)"
        theFolderBrowser.ShowNewFolderButton = True
        theFolderBrowser.RootFolder = System.Environment.SpecialFolder.Desktop
        theFolderBrowser.SelectedPath = Form1.userprefs.lastpath
        If theFolderBrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
            thefoldernames = (theFolderBrowser.SelectedPath)
            localactorpath.Text = thefoldernames
            userprefs.lastpath = thefoldernames
            userprefs.actorsavepath = thefoldernames
        End If
        generalprefschanged = True
    End Sub

    Private Sub localactorpath_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles localactorpath.TextChanged
        userprefs.actorsavepath = localactorpath.Text
        generalprefschanged = True
    End Sub

    Private Sub xbmcactorpath_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles xbmcactorpath.TextChanged
        userprefs.actornetworkpath = xbmcactorpath.Text
        generalprefschanged = True
    End Sub

    Private Sub chkbx_basicsave_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkbx_basicsave.CheckedChanged
        If chkbx_basicsave.CheckState = CheckState.Checked Then
            userprefs.basicsavemode = True
        Else
            userprefs.basicsavemode = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub TabPage26_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabPage26.Leave
        If generalprefschanged = True Then
            Dim tempint As Integer = MessageBox.Show("You appear to have made changes to your preferences," & vbCrLf & "Do wish to save the changes", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            If tempint = DialogResult.Yes Then
                Dim save As New _preferences
                Call save.saveconfig()
                MsgBox("Changes Saved")
            Else
                Dim load As New _preferences
                Call load.loadconfig()
            End If
            generalprefschanged = False
        End If
    End Sub

    Private Sub Button91_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button91.Click

        ListBox12.Items.Clear()
        languagelist.Clear()
        Try
            Dim xmlfile As String
            Dim wrGETURL As WebRequest
            Dim mirrorsurl As String = "http://thetvdb.com/api/6E82FED600783400/languages.xml"
            wrGETURL = WebRequest.Create(mirrorsurl)
            Dim myProxy As New WebProxy("myproxy", 80)
            myProxy.BypassProxyOnLocal = True
            Dim objStream As Stream
            objStream = wrGETURL.GetResponse.GetResponseStream()
            Dim objReader As New StreamReader(objStream)
            xmlfile = objReader.ReadToEnd
            objReader.Close()
            objStream.Close()
            Dim showlist As New XmlDocument
            'Try
            showlist.LoadXml(xmlfile)
            Dim thisresult As XmlNode = Nothing
            For Each thisresult In showlist("Languages")
                Select Case thisresult.Name
                    Case "Language"
                        Dim results As XmlNode = Nothing
                        Dim lan As New tvshowlanguages
                        For Each results In thisresult.ChildNodes
                            Select Case results.Name
                                Case "name"
                                    lan.language = results.InnerText
                                Case "abbreviation"
                                    lan.abbreviation = results.InnerText
                            End Select
                        Next
                        languagelist.Add(lan)
                End Select
            Next
            For Each lan In languagelist
                ListBox12.Items.Add(lan.language)
            Next
        Catch
        End Try
        Try
            ListBox12.SelectedItem = userprefs.tvdblanguage
        Catch
        End Try

    End Sub

    Private Sub ListBox12_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox12.SelectedIndexChanged
        For Each lan In languagelist
            If lan.language = ListBox12.SelectedItem Then
                userprefs.tvdblanguage = lan.language
                userprefs.tvdblanguagecode = lan.abbreviation
                Exit For
            End If
        Next
        generalprefschanged = True
    End Sub

    Private Sub CheckBox14_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox14.CheckedChanged
        If CheckBox14.CheckState = CheckState.Checked Then
            userprefs.tvposter = True
        Else
            userprefs.tvposter = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox10_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox10.CheckedChanged
        If CheckBox10.CheckState = CheckState.Checked Then
            userprefs.tvfanart = True
        Else
            userprefs.tvfanart = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox15_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox15.CheckedChanged
        If CheckBox15.CheckState = CheckState.Checked Then
            userprefs.downloadtvseasonthumbs = True
        Else
            userprefs.downloadtvseasonthumbs = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub posterbtn_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles posterbtn.CheckedChanged
        If posterbtn.Checked = True Then
            userprefs.postertype = "poster"
        End If
        generalprefschanged = True
    End Sub

    Private Sub bannerbtn_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles bannerbtn.CheckedChanged
        If bannerbtn.Checked = True Then
            userprefs.postertype = "banner"
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton41_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton41.CheckedChanged
        'none
        If RadioButton41.Checked = True Then
            userprefs.seasonall = "none"
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton40_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton40.CheckedChanged
        'poster
        If RadioButton40.Checked = True Then
            userprefs.seasonall = "poster"
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton39_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton39.CheckedChanged
        'banner
        If RadioButton39.Checked = True Then
            Form1.userprefs.seasonall = "wide"
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton43_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton43.CheckedChanged
        If RadioButton43.Checked = True Then
            userprefs.sortorder = "default"
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton42_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton42.CheckedChanged
        If RadioButton42.Checked = True Then
            userprefs.sortorder = "dvd"
        End If
        generalprefschanged = True
    End Sub

    Private Sub ComboBox8_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox8.SelectedIndexChanged
        userprefs.tvdbactorscrape = ComboBox8.SelectedIndex.ToString
        generalprefschanged = True
    End Sub

    Private Sub setuptvpreferences()
        ComboBox9.SelectedIndex = userprefs.tvrename
        If userprefs.eprenamelowercase = True Then
            CheckBox40.CheckState = CheckState.Checked
        Else
            CheckBox40.CheckState = CheckState.Unchecked
        End If
        If userprefs.enabletvhdtags = True Then
            CheckBox20.CheckState = CheckState.Checked
        Else
            CheckBox20.CheckState = CheckState.Unchecked
        End If
        If userprefs.autorenameepisodes = True Then
            CheckBox37.CheckState = CheckState.Checked
        Else
            CheckBox37.CheckState = CheckState.Unchecked
        End If
        If userprefs.autoepisodescreenshot = True Then
            CheckBox36.CheckState = CheckState.Checked
        Else
            CheckBox36.CheckState = CheckState.Unchecked
        End If
        If userprefs.tvshowautoquick = True Then
            CheckBox35.CheckState = CheckState.Checked
        Else
            CheckBox35.CheckState = CheckState.Unchecked
        End If

        If userprefs.copytvactorthumbs = True Then
            CheckBox34.CheckState = CheckState.Checked
        Else
            CheckBox34.CheckState = CheckState.Unchecked
        End If

        If userprefs.disabletvlogs = True Then
            CheckBox17.CheckState = CheckState.Unchecked
        Else
            CheckBox17.CheckState = CheckState.Checked
        End If

        ListBox12.Items.Clear()
        ListBox12.Items.Add(userprefs.tvdblanguage)
        If ListBox12.Items.Count <> 0 Then
            ListBox12.SelectedIndex = 0
        End If

        Select Case Form1.userprefs.seasonall
            Case "none"
                RadioButton41.Checked = True
            Case "poster"
                RadioButton40.Checked = True
            Case "wide"
                RadioButton39.Checked = True
        End Select

        If userprefs.tvposter = True Then
            CheckBox14.CheckState = CheckState.Checked
        Else
            CheckBox14.CheckState = CheckState.Unchecked
        End If

        If userprefs.tvfanart = True Then
            CheckBox10.CheckState = CheckState.Checked
        Else
            CheckBox10.CheckState = CheckState.Unchecked
        End If

        If userprefs.downloadtvseasonthumbs = True Then
            CheckBox15.CheckState = CheckState.Checked
        Else
            CheckBox15.CheckState = CheckState.Unchecked
        End If

        ComboBox8.SelectedIndex = Form1.userprefs.tvdbactorscrape

        ListBox14.Items.Clear()
        For Each regexc In tvregex
            ListBox14.Items.Add(regexc)
        Next
        If userprefs.enabletvhdtags = True Then
            CheckBox20.CheckState = CheckState.Checked
        Else
            CheckBox20.CheckState = CheckState.Unchecked
        End If

        If userprefs.sortorder = "dvd" Then
            RadioButton42.Checked = True
        Else
            RadioButton43.Checked = True
        End If

        If Form1.userprefs.postertype = "poster" Then
            posterbtn.Checked = True
        Else
            bannerbtn.Checked = True
        End If
        If Form1.userprefs.tvshow_useXBMC_Scraper = True Then
            CheckBox_Use_XBMC_TVDB_Scraper.Checked = CheckState.Checked
        Else
            CheckBox_Use_XBMC_TVDB_Scraper.Checked = CheckState.Unchecked
        End If
        generalprefschanged = False
    End Sub

    Private Sub Button86_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button86.Click
        tvregex.Clear()
        tvregex.Add("[Ss]([\d]{1,4}).?[Ee]([\d]{1,4})")
        tvregex.Add("([\d]{1,4}) ?[xX] ?([\d]{1,4})")
        tvregex.Add("([0-9]+)([0-9][0-9])")
        ListBox14.Items.Clear()
        For Each Regex In tvregex
            ListBox14.Items.Add(Regex)
        Next
    End Sub

    Private Sub CheckBox17_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox17.CheckedChanged
        If CheckBox17.CheckState = CheckState.Checked Then
            userprefs.disabletvlogs = False
        Else
            userprefs.disabletvlogs = True
        End If
        generalprefschanged = True
    End Sub

    Private Sub Button89_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button89.Click
        'remove selected
        Dim tempstring = ListBox14.SelectedItem
        Try
            ListBox14.Items.Remove(ListBox14.SelectedItem)
        Catch
        End Try
        For Each regexp In tvregex
            If regexp = tempstring Then
                tvregex.Remove(regexp)
                Exit For
            End If
        Next
    End Sub

    Private Function validateregex(ByVal regexs As String)
        Try
            Dim test As Match
            test = Regex.Match("", regexs)
        Catch ex As Exception
            Return False
        End Try
        Return True
    End Function

    Private Sub Button87_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button87.Click
        'edit
        If TextBox46.Text = "" Then
            MsgBox("No Text")
            TextBox46.Text = ListBox7.SelectedItem
            Exit Sub
        End If
        If Not validateregex(TextBox46.Text) Then
            MsgBox("Invalid Regex")
            Exit Sub
        End If
        Dim tempint As Integer = ListBox14.SelectedIndex
        ListBox14.Items.RemoveAt(tempint)
        ListBox14.Items.Insert(tempint, TextBox46.Text)
        ListBox14.SelectedIndex = tempint
        tvregex.Clear()
        For Each regexp In ListBox14.Items
            tvregex.Add(regexp)
        Next
        generalprefschanged = True
    End Sub

    Private Sub Button90_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button90.Click
        'add textbox49
        If Not validateregex(TextBox49.Text) Then
            MsgBox("Invalid Regex")
            Exit Sub
        End If
        ListBox14.Items.Add(TextBox49.Text)
        tvregex.Add(TextBox49.Text)

        generalprefschanged = True
    End Sub

    Private Sub Button92_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button92.Click
        Dim save As New _preferences
        save.saveconfig()
        Call saveregex()
        MsgBox("Changes Saved!" & vbCrLf & vbCrLf & "Please restart the program" & vbCrLf & "for the changes to take effect")
        generalprefschanged = False
    End Sub

    Private Sub TabPage24_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabPage24.Leave
        If generalprefschanged = True Then
            Dim tempint As Integer = MessageBox.Show("You appear to have made changes to your preferences," & vbCrLf & "Do wish to save the changes", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            If tempint = DialogResult.Yes Then
                Dim save As New _preferences
                Call saveregex()
                Call save.saveconfig()
                MsgBox("Changes Saved")
            Else
                Dim load As New _preferences
                Call load.loadconfig()
                Call loadregex()
            End If
            generalprefschanged = False
        End If
    End Sub

    Private Sub Button88_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button88.Click
        Try
            If TextBox48.Text = "" Then
                MsgBox("Please Enter a filename or any string to test")
                Exit Sub
            End If
            If ListBox14.SelectedItem = Nothing Then
                MsgBox("Please Select a Regex to test")
                Exit Sub
            End If
            TextBox47.Text = ""
            Dim tvseries As String
            Dim tvepisode As String
            Dim s As String
            Dim tempstring As String = TextBox48.Text
            s = tempstring '.ToLower
            Dim M As Match


            M = Regex.Match(s, ListBox14.SelectedItem)
            If M.Success = True Then
                Try
                    tvseries = M.Groups(1).Value
                    tvepisode = M.Groups(2).Value
                Catch
                    tvseries = "-1"
                    tvepisode = "-1"
                End Try
                Try
                    If tvseries <> "-1" Then
                        TextBox47.Text = "Series No = " & tvseries & vbCrLf
                    End If
                    If tvepisode <> "-1" Then
                        TextBox47.Text = TextBox47.Text & "Episode No = " & tvepisode
                    End If
                Catch
                End Try
            Else
                TextBox47.Text = "No Matches"
            End If

        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub

    Private Sub bckgrnd_tvshowscraper_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles bckgrnd_tvshowscraper.RunWorkerCompleted
        ToolStripStatusLabel5.Visible = False

    End Sub

    Private Sub bckgrnd_tvshowscraper_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles bckgrnd_tvshowscraper.ProgressChanged

        'If e.UserState = "i" Then
        ToolStripStatusLabel5.Text = "Scraping TV Shows, " & newtvfolders.Count & " remaining"
        ToolStripStatusLabel5.Visible = True
        'Call updatetree(False)

        Try
            Dim shownfopath As String = IO.Path.Combine(e.UserState, "tvshow.nfo")
            Dim newtvshownfo As BasicTvShowNFO
            newtvshownfo = nfofunction.loadbasictvshownfo(shownfopath)
            If newtvshownfo.title <> Nothing Then
                If newtvshownfo.status.IndexOf("skipthisfile") = -1 Then
                    Dim skip As Boolean = False
                    For Each tvshow In basictvlist
                        If newtvshownfo.fullpath = tvshow.fullpath Then
                            skip = True
                            Exit For
                        End If
                    Next
                    If skip = False Then
                        ListtvFiles(newtvshownfo, "*.NFO")
                        basictvlist.Add(newtvshownfo)
                    End If
                End If
            End If
            realtvpaths.Add(e.UserState)
        Catch
        End Try
        For Each item In basictvlist
            Dim shownfopath As String = IO.Path.Combine(e.UserState, "tvshow.nfo")
            If item.fullpath = shownfopath Then
                Dim cnode As TreeNode
                Dim tempstring As String
                Dim tempint As Integer

                totaltvshowcount += 1
                Dim shownode As Integer = -1
                Try
                    If item.status.ToLower.IndexOf("xml error") <> -1 Then
                        Call add_tvshow_to_treeview(item.fullpath, item.title, True, item.locked)
                    Else
                        Call add_tvshow_to_treeview(item.fullpath, item.title, False, item.locked)
                    End If
                Catch ex As Exception
                    'MsgBox(ex.Message)
                End Try
                For Each episode In item.allepisodes
                    totalepisodecount += 1
                    Try
                        Dim seasonno As Integer = -10
                        seasonno = Convert.ToInt32(episode.seasonno)

                        For g = 0 To TreeView1.Nodes.Count - 1
                            If TreeView1.Nodes(g).Name.ToString = item.fullpath Then
                                cnode = TreeView1.Nodes(g)
                                shownode = g
                                Exit For
                            End If
                        Next

                        Dim seasonstring As String = Nothing

                        If seasonno <> 0 And seasonno <> -1 Then
                            If seasonno < 10 Then
                                tempstring = "Season 0" & seasonno.ToString
                            Else
                                tempstring = "Season " & seasonno.ToString
                            End If
                        ElseIf seasonno = 0 Then
                            tempstring = "Specials"
                            'ElseIf seasonno = -1 Then
                            '    tempstring = "Unknown"
                        End If
                        Dim node As TreeNode
                        Dim alreadyexists As Boolean = False
                        For Each node In cnode.Nodes
                            If node.Text = tempstring Then
                                alreadyexists = True
                                Exit For
                            End If
                        Next
                        If alreadyexists = False Then cnode.Nodes.Add(tempstring)

                        For Each node In cnode.Nodes
                            If node.Text = tempstring Then
                                tempint = node.Index

                                Exit For
                            End If
                        Next

                        Dim eps As String
                        If episode.episodeno < 10 Then
                            eps = "0" & episode.episodeno.ToString
                        Else
                            eps = episode.episodeno.ToString
                        End If
                        eps = eps & " - " & episode.title
                        If episode.imdbid = Nothing Then
                            episode.imdbid = ""
                        End If

                        If episode.imdbid.ToLower.IndexOf("xml error") <> -1 Then
                            Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, True)
                        Else
                            Call add_episode_to_treeview(shownode, tempint, episode.episodepath, eps, False)
                        End If

                    Catch ex As Exception
                        'MsgBox(ex.ToString)
                    End Try
                Next
            End If
        Next

        Me.BringToFront()
        Me.Activate()
        ';

    End Sub
   
    Dim templanguage As String
    Private Function gettoptvshow(ByVal tvshowname As String)
        templanguage = userprefs.tvdblanguagecode
        Try
            'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
            Dim tvdbstuff As New TVDBScraper

            Dim mirror As List(Of String) = tvdbstuff.getmirrors()
            Dim showslist As String = tvdbstuff.findshows(tvshowname, mirror(0))
            If showslist = "error" Then
                Return "error"
                Exit Function
            End If
            Dim newshows As New List(Of possibleshowlist)
            newshows.Clear()
            If showslist <> "none" Then
                Dim showlist As New XmlDocument
                showlist.LoadXml(showslist)
                Dim thisresult As XmlNode = Nothing
                For Each thisresult In showlist("allshows")
                    Select Case thisresult.Name
                        Case "show"
                            Dim results As XmlNode = Nothing
                            Dim lan As New possibleshowlist
                            For Each results In thisresult.ChildNodes
                                Select Case results.Name
                                    Case "showid"
                                        lan.showid = results.InnerText
                                    Case "showtitle"
                                        lan.showtitle = results.InnerText
                                    Case "showbanner"
                                        lan.showbanner = results.InnerText
                                End Select
                            Next
                            If lan.showtitle = tvshowname Then
                                If checktvlanguage(lan.showid, templanguage) = True Then
                                    Return lan.showid
                                End If
                            End If
                            newshows.Add(lan)
                    End Select
                Next
                Dim returnid As String = ""
                If checktvlanguage(newshows(0).showid, templanguage) = True Then
                    Return newshows(0).showid
                Else
                    If templanguage <> "en" Then
                        If checktvlanguage(newshows(0).showid, "en") = True Then
                            templanguage = "en"
                            Return newshows(0).showid
                        Else
                            Return "nolang"
                        End If
                    Else
                        Return "nolang"
                    End If
                End If
            Else
                Return "none"
            End If
        Catch ex As Exception
            Return "error"
        End Try
    End Function

    Public Function checktvlanguage(ByVal id As String, ByVal language As String)
        Try
            Dim languagecode As String = language
            Dim url As String = "http://thetvdb.com/api/6E82FED600783400/series/" & id & "/" & languagecode & ".xml"
            Dim websource(10000)
            Dim urllinecount As Integer = 0
            Try
                Dim wrGETURL As WebRequest
                wrGETURL = WebRequest.Create(url)
                Dim myProxy As New WebProxy("myproxy", 80)
                myProxy.BypassProxyOnLocal = True
                Dim objStream As Stream
                objStream = wrGETURL.GetResponse.GetResponseStream()
                Dim objReader As New StreamReader(objStream)
                Dim sLine As String = ""
                urllinecount = 0

                Do While Not sLine Is Nothing
                    urllinecount += 1
                    sLine = objReader.ReadLine
                    If Not sLine Is Nothing Then
                        websource(urllinecount) = sLine
                    End If
                Loop
                objReader.Close()
                objStream.Close()
                urllinecount -= 1

            Catch ex As Exception
                'MsgBox(ex.ToString)
            End Try
            For f = 1 To urllinecount
                If websource(f).IndexOf("<Language>") <> -1 Then
                    websource(f) = websource(f).Replace("<Language>", "")
                    websource(f) = websource(f).Replace("</Language>", "")
                    websource(f) = websource(f).Replace("  ", "")
                    If websource(f).ToLower = languagecode Then
                        Return True
                    Else
                        Return False
                    End If
                End If
            Next
        Catch
        End Try
    End Function

    Private Sub bckgrnd_tvshowscraper_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles bckgrnd_tvshowscraper.DoWork
        Dim speedy As Boolean = userprefs.tvshowautoquick
        Do While newtvfolders.Count > 0
            Dim tvshownfopath As String = IO.Path.Combine(newtvfolders(0), "tvshow.nfo")
            Dim toprocess As Boolean = True
            If IO.File.Exists(tvshownfopath) Then
                Dim r As New StreamReader(tvshownfopath)
                Dim tempholder As String = r.ReadToEnd
                If tempholder.IndexOf("<tvshow>") <> -1 And tempholder.IndexOf("</tvshow>") <> -1 Then
                    Dim tvshow As New XmlDocument
                    Try
                        tvshow.Load(tvshownfopath)
                        toprocess = False
                    Catch ex As Exception
                        toprocess = True
                    End Try
                End If
            End If
            If toprocess = True Then
                Try
                    Dim tempname As String = filefunction.getlastfolder(newtvfolders(0) & "\hifh")
                    Dim showyear As String = ""
                    If tempname.IndexOf("(") <> -1 Then
                        Dim M As Match
                        M = Regex.Match(tempname, "(\([\d]{4}\))")
                        If M.Success = True Then
                            showyear = M.Value
                            showyear = showyear.Replace("(", "")
                            showyear = showyear.Replace(")", "")
                            showyear = showyear.Replace("{", "")
                            showyear = showyear.Replace("}", "")
                        End If
                        If tempname.IndexOf("(") <> 0 Then
                            tempname = tempname.Substring(0, tempname.IndexOf("("))
                            tempname = tempname.TrimEnd(" ")
                            If showyear <> "" Then
                                tempname = tempname & " (" & showyear & ")"
                            End If
                        End If
                    End If
                    Dim tvshowid As String = gettoptvshow(tempname)
                    If IsNumeric(tvshowid) Then
                        'tvshow found
                        Dim newtvshow As New tvshownfo
                        newtvshow.tvdbid = tvshowid
                        newtvshow.path = IO.Path.Combine(newtvfolders(0), "tvshow.nfo")
                        'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
                        Dim tvdbstuff As New TVDBScraper
                        Dim bannerurl As String = ""
                        Dim fanarturl As String = ""
                        Dim posterurl As String = ""
                        Dim tempstring As String = ""

                        If templanguage = Nothing Then templanguage = "en"
                        If templanguage = "" Then templanguage = "en"
                        Dim tvshowxmlstring As String = tvdbstuff.getshow(tvshowid, templanguage)
                        Dim showlist As New XmlDocument
                        showlist.LoadXml(tvshowxmlstring)
                        Dim thisresult As XmlNode = Nothing
                        Dim actcount As Integer = 0
                        For Each thisresult In showlist("fulltvshow")
                            Select Case thisresult.Name
                                Case "title"
                                    newtvshow.title = thisresult.InnerText
                                Case "mpaa"
                                    newtvshow.mpaa = thisresult.InnerText
                                Case "premiered"
                                    newtvshow.premiered = thisresult.InnerText
                                Case "genre"
                                    Dim newstring As String
                                    newstring = thisresult.InnerText
                                    newstring = newstring.TrimEnd("|")
                                    newstring = newstring.TrimStart("|")
                                    newstring = newstring.Replace("|", " / ")
                                    newtvshow.genre = newstring
                                Case "imdbid"
                                    newtvshow.imdbid = thisresult.InnerText
                                Case "studio"
                                    newtvshow.studio = thisresult.InnerText
                                Case "plot"
                                    newtvshow.plot = thisresult.InnerText
                                Case "rating"
                                    newtvshow.rating = thisresult.InnerText
                                Case "runtime"
                                    newtvshow.runtime = thisresult.InnerText
                                Case "banner"
                                    bannerurl = thisresult.InnerText
                                Case "fanart"
                                    fanarturl = thisresult.InnerText
                                Case "poster"
                                    posterurl = thisresult.InnerText
                                Case "episodeguideurl"
                                    newtvshow.episodeguideurl = thisresult.InnerText

                                Case "actor"
                                    If actcount >= userprefs.maxactors Then
                                        Exit For
                                    End If
                                    actcount += 1
                                    If userprefs.tvdbactorscrape = 0 Or userprefs.tvdbactorscrape = 3 Or newtvshow.imdbid = Nothing Then
                                        Dim id As String = ""
                                        Dim acts As New movieactors
                                        Dim results As XmlNode = Nothing
                                        Dim lan As New possibleshowlist
                                        For Each results In thisresult.ChildNodes
                                            Select Case results.Name
                                                Case "name"
                                                    acts.actorname = results.InnerText
                                                Case "role"
                                                    acts.actorrole = results.InnerText
                                                Case "thumb"
                                                    acts.actorthumb = results.InnerText
                                                Case "actorid"
                                                    id = results.InnerText
                                            End Select
                                        Next

                                        If acts.actorthumb <> Nothing Then
                                            If acts.actorthumb <> "" And userprefs.actorseasy = True And speedy = False Then
                                                If workingtvshow.tvshowactorsource <> "imdb" Or workingtvshow.imdbid = Nothing Then
                                                    Dim workingpath As String = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "")
                                                    workingpath = workingpath & ".actors\"
                                                    Dim hg As New IO.DirectoryInfo(workingpath)
                                                    Dim destsorted As Boolean = False
                                                    If Not hg.Exists Then
                                                        Try
                                                            IO.Directory.CreateDirectory(workingpath)
                                                            destsorted = True
                                                        Catch ex As Exception

                                                        End Try
                                                    Else
                                                        destsorted = True
                                                    End If
                                                    If destsorted = True Then
                                                        Dim filename As String = acts.actorname.Replace(" ", "_")
                                                        filename = filename & ".tbn"
                                                        filename = IO.Path.Combine(workingpath, filename)
                                                        Try
                                                            Dim buffer(4000000) As Byte
                                                            Dim size As Integer = 0
                                                            Dim bytesRead As Integer = 0
                                                            Dim thumburl As String = acts.actorthumb
                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                            Dim contents As Stream = res.GetResponseStream()
                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                            While bytesToRead > 0
                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                If size = 0 Then Exit While
                                                                bytesToRead -= size
                                                                bytesRead += size
                                                            End While

                                                            Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                            fstrm.Write(buffer, 0, bytesRead)
                                                            contents.Close()
                                                            fstrm.Close()
                                                        Catch
                                                        End Try
                                                    End If
                                                End If
                                            End If
                                            If userprefs.actorsave = True And id <> "" And userprefs.actorseasy = False Then
                                                Dim workingpath As String = ""
                                                Dim networkpath As String = Form1.userprefs.actorsavepath
                                                Try
                                                    tempstring = networkpath & "\" & id.Substring(id.Length - 2, 2)
                                                    Dim hg As New IO.DirectoryInfo(tempstring)
                                                    If Not hg.Exists Then
                                                        IO.Directory.CreateDirectory(tempstring)
                                                    End If
                                                    workingpath = networkpath & "\" & id.Substring(id.Length - 2, 2) & "\tv" & id & ".jpg"
                                                    If Not IO.File.Exists(workingpath) Then
                                                        Dim buffer(4000000) As Byte
                                                        Dim size As Integer = 0
                                                        Dim bytesRead As Integer = 0
                                                        Dim thumburl As String = acts.actorthumb
                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                        Dim contents As Stream = res.GetResponseStream()
                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                        While bytesToRead > 0
                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                            If size = 0 Then Exit While
                                                            bytesToRead -= size
                                                            bytesRead += size
                                                        End While

                                                        Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                        fstrm.Write(buffer, 0, bytesRead)
                                                        contents.Close()
                                                        fstrm.Close()
                                                    End If
                                                    acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2))
                                                    If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                        acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2) & "/tv" & id & ".jpg")
                                                    Else
                                                        acts.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, id.Substring(id.Length - 2, 2) & "\tv" & id & ".jpg")
                                                    End If

                                                Catch
                                                End Try
                                            End If
                                        End If
                                        Dim exists As Boolean = False
                                        For Each actors In workingtvshow.listactors
                                            If actors.actorname = acts.actorname And actors.actorrole = acts.actorrole Then
                                                exists = True
                                            End If
                                        Next
                                        If exists = False Then
                                            newtvshow.listactors.Add(acts)
                                        End If
                                    End If
                            End Select
                        Next



                        If userprefs.tvdbactorscrape = 1 Or userprefs.tvdbactorscrape = 2 And newtvshow.imdbid <> Nothing Then
                            '                    Dim imdbscraper As New imdb.Classimdbscraper
                            Dim imdbscraper As New Classimdb
                            Dim actorlist As String
                            Dim actorstring As New XmlDocument
                            actorlist = imdbscraper.getimdbactors(userprefs.imdbmirror, newtvshow.imdbid)
                            Try
                                actorstring.LoadXml(actorlist)
                                thisresult = Nothing
                                For Each thisresult In actorstring("actorlist")
                                    Select Case thisresult.Name
                                        Case "actor"
                                            Dim newactor As New movieactors
                                            Dim detail As XmlNode = Nothing
                                            For Each detail In thisresult.ChildNodes
                                                Select Case detail.Name
                                                    Case "name"
                                                        newactor.actorname = detail.InnerText
                                                    Case "role"
                                                        newactor.actorrole = detail.InnerText
                                                    Case "thumb"
                                                        newactor.actorthumb = detail.InnerText
                                                    Case "actorid"
                                                        If newactor.actorthumb <> Nothing Then
                                                            If userprefs.actorsave = True And detail.InnerText <> "" And speedy = False Then
                                                                Dim workingpath As String = ""
                                                                Dim networkpath As String = Form1.userprefs.actorsavepath
                                                                Try
                                                                    tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                    Dim hg As New IO.DirectoryInfo(tempstring)
                                                                    If Not hg.Exists Then
                                                                        IO.Directory.CreateDirectory(tempstring)
                                                                    End If
                                                                    workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                    If Not IO.File.Exists(workingpath) Then
                                                                        Dim buffer(4000000) As Byte
                                                                        Dim size As Integer = 0
                                                                        Dim bytesRead As Integer = 0
                                                                        Dim thumburl As String = newactor.actorthumb
                                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                                        Dim contents As Stream = res.GetResponseStream()
                                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                        While bytesToRead > 0
                                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                            If size = 0 Then Exit While
                                                                            bytesToRead -= size
                                                                            bytesRead += size
                                                                        End While

                                                                        Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                        fstrm.Write(buffer, 0, bytesRead)
                                                                        contents.Close()
                                                                        fstrm.Close()
                                                                    End If
                                                                    newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                    If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                        newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                    Else
                                                                        newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                    End If
                                                                Catch
                                                                End Try
                                                            End If
                                                        End If
                                                End Select
                                            Next
                                            newtvshow.listactors.Add(newactor)
                                    End Select
                                Next
                                While newtvshow.listactors.Count > userprefs.maxactors
                                    newtvshow.listactors.RemoveAt(newtvshow.listactors.Count - 1)
                                End While
                            Catch ex As Exception

                            End Try
                        End If

                        Dim artlist As New List(Of tvbanners)
                        artlist.Clear()
                        Dim artdone As Boolean = False
                        If userprefs.tvfanart = True Or userprefs.tvposter = True Or userprefs.seasonall <> "none" Then
                            Dim thumblist As String = tvdbstuff.getposterlist(newtvshow.tvdbid)
                            showlist.LoadXml(thumblist)
                            artdone = True
                            thisresult = Nothing
                            'CheckBox3 = seasons
                            'CheckBox4 = fanart
                            'CheckBox5 = poster
                            For Each thisresult In showlist("banners")
                                Select Case thisresult.Name
                                    Case "banner"
                                        Dim individualposter As New tvbanners
                                        For Each results In thisresult.ChildNodes
                                            Select Case results.Name
                                                Case "url"
                                                    individualposter.url = results.InnerText
                                                Case "bannertype"
                                                    individualposter.bannertype = results.InnerText
                                                Case "resolution"
                                                    individualposter.resolution = results.InnerText
                                                Case "language"
                                                    individualposter.language = results.InnerText
                                                Case "season"
                                                    individualposter.season = results.InnerText
                                            End Select
                                        Next
                                        artlist.Add(individualposter)
                                End Select
                            Next
                        End If

                        If userprefs.downloadtvseasonthumbs = True And speedy = False Then
                            For f = 0 To 1000
                                Dim seasonposter As String = ""
                                For Each Image In artlist
                                    If Image.season = f.ToString And Image.language = templanguage Then
                                        seasonposter = Image.url
                                        Exit For
                                    End If
                                Next
                                If seasonposter = "" Then
                                    For Each Image In artlist
                                        If Image.season = f.ToString And Image.language = "en" Then
                                            seasonposter = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If seasonposter = "" Then
                                    For Each Image In artlist
                                        If Image.season = f.ToString Then
                                            seasonposter = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If seasonposter <> "" Then
                                    If f < 10 Then
                                        tempstring = "0" & f.ToString
                                    Else
                                        tempstring = f.ToString
                                    End If
                                    Dim seasonpath As String = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "season" & tempstring & ".tbn")
                                    If tempstring = "00" Then
                                        seasonpath = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "season-specials.tbn")
                                    End If
                                    If Not IO.File.Exists(seasonpath) Then
                                        Try
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = seasonposter
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While
                                            Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                            fstrm.Write(buffer, 0, bytesRead)
                                            contents.Close()
                                            fstrm.Close()
                                        Catch ex As WebException
                                            'MsgBox("Error Downloading season poster from TVDB")
                                        End Try
                                    End If
                                End If
                            Next
                        End If

                        If userprefs.tvfanart = True And speedy = False Then
                            Dim fanartposter As String
                            fanartposter = ""
                            If CheckBox7.CheckState = CheckState.Checked Then
                                For Each Image In artlist
                                    If Image.language = templanguage And Image.bannertype = "fanart" Then
                                        fanartposter = Image.url
                                        Exit For
                                    End If
                                Next
                            End If
                            If fanartposter = "" Then
                                For Each Image In artlist
                                    If Image.language = "en" And Image.bannertype = "fanart" Then
                                        fanartposter = Image.url
                                        Exit For
                                    End If
                                Next
                            End If
                            If fanartposter = "" Then
                                For Each Image In artlist
                                    If Image.bannertype = "fanart" Then
                                        fanartposter = Image.url
                                        Exit For
                                    End If
                                Next
                            End If
                            If fanartposter <> "" Then

                                Dim seasonpath As String = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "fanart.jpg")
                                If Not IO.File.Exists(seasonpath) Then
                                    Try
                                        Dim buffer(4000000) As Byte
                                        Dim size As Integer = 0
                                        Dim bytesRead As Integer = 0

                                        Dim thumburl As String = fanartposter
                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                        Dim res As HttpWebResponse = req.GetResponse()
                                        Dim contents As Stream = res.GetResponseStream()
                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                        Dim bmp As New Bitmap(contents)



                                        While bytesToRead > 0
                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                            If size = 0 Then Exit While
                                            bytesToRead -= size
                                            bytesRead += size
                                        End While


                                        Try
                                            If Form1.userprefs.resizefanart = 1 Then
                                                bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                                scraperlog = scraperlog & "Fanart not resized" & vbCrLf
                                            ElseIf userprefs.resizefanart = 2 Then
                                                If bmp.Width > 1280 Or bmp.Height > 720 Then
                                                    Dim bm_source As New Bitmap(bmp)
                                                    Dim bm_dest As New Bitmap(1280, 720)
                                                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                    gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                                    bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                                    scraperlog = scraperlog & "Farart Resized to 1280x720" & vbCrLf
                                                Else
                                                    scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                                    bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                                End If
                                            ElseIf userprefs.resizefanart = 3 Then
                                                If bmp.Width > 960 Or bmp.Height > 540 Then
                                                    Dim bm_source As New Bitmap(bmp)
                                                    Dim bm_dest As New Bitmap(960, 540)
                                                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                    gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                                    bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                                    scraperlog = scraperlog & "Farart Resized to 960x540" & vbCrLf
                                                Else
                                                    scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                                    bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                                End If

                                            End If
                                        Catch
                                        End Try
                                    Catch ex As WebException
                                        'MsgBox("Error Downloading season poster from TVDB")
                                    End Try
                                End If
                            End If
                        End If


                        Dim seasonallpath As String = ""
                        If userprefs.tvposter = True And speedy = False Then
                            Dim posterurlpath As String = ""

                            If userprefs.postertype = "poster" Then 'poster
                                For Each Image In artlist
                                    If Image.language = templanguage And Image.bannertype = "poster" Then
                                        posterurl = Image.url
                                        Exit For
                                    End If
                                Next
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.language = "en" And Image.bannertype = "poster" Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.bannertype = "poster" Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If posterurlpath <> "" And userprefs.seasonall <> "none" Then
                                    seasonallpath = posterurlpath
                                End If
                            ElseIf userprefs.postertype = "banner" Then 'banner
                                For Each Image In artlist
                                    If Image.language = templanguage And Image.bannertype = "series" And Image.season = Nothing Then
                                        posterurl = Image.url
                                        Exit For
                                    End If
                                Next
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.bannertype = "series" And Image.season = Nothing Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If posterurlpath <> "" And RadioButton16.Checked = True Then
                                    seasonallpath = posterurlpath
                                End If
                            End If

                            If posterurlpath <> "" And speedy = False Then

                                Dim seasonpath As String = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "folder.jpg")
                                If Not IO.File.Exists(seasonpath) Then
                                    Try
                                        Dim buffer(4000000) As Byte
                                        Dim size As Integer = 0
                                        Dim bytesRead As Integer = 0
                                        Dim thumburl As String = posterurlpath
                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                        Dim res As HttpWebResponse = req.GetResponse()
                                        Dim contents As Stream = res.GetResponseStream()
                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                        While bytesToRead > 0
                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                            If size = 0 Then Exit While
                                            bytesToRead -= size
                                            bytesRead += size
                                        End While
                                        Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                        fstrm.Write(buffer, 0, bytesRead)
                                        contents.Close()
                                        fstrm.Close()
                                    Catch ex As WebException
                                        'MsgBox("Error Downloading main poster from TVDB")
                                    End Try
                                End If
                            End If
                        End If

                        If userprefs.seasonall <> "none" And seasonallpath = "" And speedy = False Then
                            If userprefs.seasonall = "poster" Then 'poster
                                For Each Image In artlist
                                    If Image.language = templanguage And Image.bannertype = "poster" Then
                                        seasonallpath = Image.url
                                        Exit For
                                    End If
                                Next
                                If seasonallpath = "" Then
                                    For Each Image In artlist
                                        If Image.language = "en" And Image.bannertype = "poster" Then
                                            seasonallpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If seasonallpath = "" Then
                                    For Each Image In artlist
                                        If Image.bannertype = "poster" Then
                                            seasonallpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                            ElseIf userprefs.seasonall = "wide" = True Then 'banner
                                For Each Image In artlist
                                    If Image.language = templanguage And Image.bannertype = "series" And Image.season = Nothing Then
                                        seasonallpath = Image.url
                                        Exit For
                                    End If
                                Next
                                If seasonallpath = "" Then
                                    For Each Image In artlist
                                        If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                                            seasonallpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If seasonallpath = "" Then
                                    For Each Image In artlist
                                        If Image.bannertype = "series" And Image.season = Nothing Then
                                            seasonallpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                            End If

                            If seasonallpath <> "" And speedy = False Then

                                Dim seasonpath As String = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "season-all.tbn")
                                If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                                    Try
                                        Dim buffer(4000000) As Byte
                                        Dim size As Integer = 0
                                        Dim bytesRead As Integer = 0
                                        Dim thumburl As String = seasonallpath
                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                        Dim res As HttpWebResponse = req.GetResponse()
                                        Dim contents As Stream = res.GetResponseStream()
                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                        While bytesToRead > 0
                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                            If size = 0 Then Exit While
                                            bytesToRead -= size
                                            bytesRead += size
                                        End While
                                        Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                        fstrm.Write(buffer, 0, bytesRead)
                                        contents.Close()
                                        fstrm.Close()
                                    Catch ex As WebException
                                        'MsgBox("Error Downloading main poster from TVDB")
                                    End Try
                                End If
                            End If
                        ElseIf userprefs.seasonall <> "none" And seasonallpath <> "" And speedy = False Then
                            Dim seasonpath As String = newtvshow.path.Replace(IO.Path.GetFileName(newtvshow.path), "season-all.tbn")
                            If Not IO.File.Exists(seasonpath) Then
                                Try
                                    Dim buffer(4000000) As Byte
                                    Dim size As Integer = 0
                                    Dim bytesRead As Integer = 0
                                    Dim thumburl As String = seasonallpath
                                    Dim req As HttpWebRequest = req.Create(thumburl)
                                    Dim res As HttpWebResponse = req.GetResponse()
                                    Dim contents As Stream = res.GetResponseStream()
                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                    While bytesToRead > 0
                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                        If size = 0 Then Exit While
                                        bytesToRead -= size
                                        bytesRead += size
                                    End While
                                    Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                    fstrm.Write(buffer, 0, bytesRead)
                                    contents.Close()
                                    fstrm.Close()
                                Catch ex As WebException
                                    'MsgBox("Error Downloading main poster from TVDB")
                                End Try
                            End If
                        End If

                        If artdone = False Then
                            Dim thumblist As String = tvdbstuff.getposterlist(newtvshow.tvdbid)
                            showlist.LoadXml(thumblist)
                            artdone = True
                            thisresult = Nothing
                            'CheckBox3 = seasons
                            'CheckBox4 = fanart
                            'CheckBox5 = poster
                            For Each thisresult In showlist("banners")
                                Select Case thisresult.Name
                                    Case "banner"
                                        Dim individualposter As New tvbanners
                                        For Each results In thisresult.ChildNodes
                                            Select Case results.Name
                                                Case "url"
                                                    individualposter.url = results.InnerText
                                                Case "bannertype"
                                                    individualposter.bannertype = results.InnerText
                                                Case "resolution"
                                                    individualposter.resolution = results.InnerText
                                                Case "language"
                                                    individualposter.language = results.InnerText
                                                Case "season"
                                                    individualposter.season = results.InnerText
                                            End Select
                                        Next
                                        artlist.Add(individualposter)
                                End Select
                            Next
                        End If

                        For Each url In artlist
                            If url.bannertype <> "fanart" Then
                                newtvshow.posters.Add(url.url)
                            Else
                                newtvshow.fanart.Add(url.url)
                            End If
                        Next
                        newtvshow.locked = 2
                        newtvshow.language = userprefs.tvdblanguagecode
                        If userprefs.tvdbactorscrape = 0 Or userprefs.tvdbactorscrape = 2 Then
                            newtvshow.episodeactorsource = "tvdb"
                        Else
                            newtvshow.episodeactorsource = "imdb"
                        End If
                        If userprefs.tvdbactorscrape = 0 Or userprefs.tvdbactorscrape = 3 Then
                            newtvshow.tvshowactorsource = "tvdb"
                        Else
                            newtvshow.tvshowactorsource = "imdb"
                        End If

                        If tempstring = "0" Or tempstring = "2" Then
                            newtvshow.episodeactorsource = "tvdb"
                        Else
                            newtvshow.episodeactorsource = "imdb"
                        End If

                        newtvshow.sortorder = userprefs.sortorder

                        nfofunction.savetvshownfo(newtvshow.path, newtvshow, True)

                        If Not tvfolders.Contains(newtvfolders(0)) Then
                            tvfolders.Add(newtvfolders(0))
                        End If


                        bckgrnd_tvshowscraper.ReportProgress(0, newtvfolders(0))
                        newtvfolders.RemoveAt(0)
                    Else
                        If Not tvfolders.Contains(newtvfolders(0)) Then
                            tvfolders.Add(newtvfolders(0))
                        End If
                        tvfolders.Add(newtvfolders(0))
                        bckgrnd_tvshowscraper.ReportProgress(0, newtvfolders(0))
                        newtvfolders.RemoveAt(0)
                    End If
                Catch ex As Exception
                Finally
                    Try


                    Catch ex As Exception
                    End Try
                End Try
            Else
                'not to process
                'Dim shownfopath As String = IO.Path.Combine(newtvfolders(0), "tvshow.nfo")
                'Dim newtvshownfo As basictvshownfo
                'newtvshownfo = nfofunction.loadbasictvshownfo(shownfopath)

                'If newtvshownfo.title <> Nothing Then
                '    If newtvshownfo.status.IndexOf("skipthisfile") = -1 Then
                '        Dim skip As Boolean = False
                '        For Each tvshow In basictvlist
                '            If newtvshownfo.fullpath = tvshow.fullpath Then
                '                skip = True
                '                Exit For
                '            End If
                '        Next
                '        If skip = False Then
                '            ListtvFiles(newtvshownfo, "*.NFO")
                '            basictvlist.Add(newtvshownfo)
                '        End If
                '    End If
                'End If
                If Not tvfolders.Contains(newtvfolders(0)) Then
                    tvfolders.Add(newtvfolders(0))
                End If
                bckgrnd_tvshowscraper.ReportProgress(0, newtvfolders(0))
                newtvfolders.RemoveAt(0)

            End If
        Loop


    End Sub

    Private Sub Button79_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button79.Click
        For Each pro In profile_structure.profilelist
            If pro.profilename.ToLower = TextBox42.Text.ToLower Then
                MsgBox("This Profile Already Exists" & vbCrLf & "Please Select Another Name")
                Exit Sub
            End If
        Next
        Dim done As Boolean = False
        Dim tempint As Integer
        For f = 1 To 1000
            Dim tempstring2 As String = applicationpath & "\Settings\"
            Dim configpath As String = tempstring2 & "config" & f.ToString & ".xml"
            Dim actorcachepath As String = tempstring2 & "actorcache" & f.ToString & ".xml"
            Dim filterspath As String = tempstring2 & "filters" & f.ToString & ".xml"
            Dim moviecachepath As String = tempstring2 & "moviecache" & f.ToString & ".xml"
            Dim regexpath As String = tempstring2 & "regex" & f.ToString & ".xml"
            Dim tvcachepath As String = tempstring2 & "tvcache" & f.ToString & ".xml"
            Dim ok As Boolean = True
            If IO.File.Exists(configpath) Then
                ok = False
            End If
            If IO.File.Exists(actorcachepath) Then
                ok = False
            End If
            If IO.File.Exists(filterspath) Then
                ok = False
            End If
            If IO.File.Exists(moviecachepath) Then
                ok = False
            End If
            If IO.File.Exists(regexpath) Then
                ok = False
            End If
            If IO.File.Exists(tvcachepath) Then
                ok = False
            End If
            If ok = True Then
                tempint = f
                Exit For
            End If
        Next
        'new profilename
        Dim tempstring As String = applicationpath & "\Settings\"
        Dim moviecachetocopy As String
        Dim actorcachetocopy As String
        Dim tvcachetocopy As String
        Dim configtocopy As String
        Dim filterstocopy As String
        Dim regextocopy As String
        For Each profs In profile_structure.profilelist
            If profs.profilename = profile_structure.defaultprofile Then
                moviecachetocopy = profs.moviecache
                actorcachetocopy = profs.actorcache
                tvcachetocopy = profs.tvcache
                configtocopy = profs.config
                filterstocopy = profs.filters
                regextocopy = profs.regexlist
            End If
        Next

        Dim profiletoadd As New ListOfProfiles
        profiletoadd.actorcache = tempstring & "actorcache" & tempint.ToString & ".xml"
        profiletoadd.config = tempstring & "config" & tempint.ToString & ".xml"
        profiletoadd.filters = tempstring & "filters" & tempint.ToString & ".xml"
        profiletoadd.moviecache = tempstring & "moviecache" & tempint.ToString & ".xml"
        profiletoadd.regexlist = tempstring & "regex" & tempint.ToString & ".xml"
        profiletoadd.tvcache = tempstring & "tvcache" & tempint.ToString & ".xml"
        profiletoadd.profilename = TextBox42.Text
        profile_structure.profilelist.Add(profiletoadd)

        If System.IO.File.Exists(moviecachetocopy) = True Then
            System.IO.File.Copy(moviecachetocopy, profiletoadd.moviecache)
        End If
        If System.IO.File.Exists(actorcachetocopy) = True Then
            System.IO.File.Copy(actorcachetocopy, profiletoadd.actorcache)
        End If
        If System.IO.File.Exists(tvcachetocopy) = True Then
            System.IO.File.Copy(tvcachetocopy, profiletoadd.tvcache)
        End If
        If System.IO.File.Exists(configtocopy) = True Then
            System.IO.File.Copy(configtocopy, profiletoadd.config)
        End If
        If System.IO.File.Exists(filterstocopy) = True Then
            System.IO.File.Copy(filterstocopy, profiletoadd.filters)
        End If
        If System.IO.File.Exists(regextocopy) = True Then
            System.IO.File.Copy(regextocopy, profiletoadd.regexlist)
        End If
        ListBox13.Items.Add(TextBox42.Text)
        Call saveprofiles()
        done = True

    End Sub

    Private Sub Button78_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button78.Click
        'setselected profile to default
        For Each prof In profile_structure.profilelist
            If prof.profilename = ListBox13.SelectedItem Then
                profile_structure.defaultprofile = prof.profilename
                Label112.Text = "Current Default Profile Is :- " & prof.profilename
                Call saveprofiles()
                Exit For
            End If
        Next
    End Sub

    Private Sub Button93_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button93.Click
        'setselected profile to startup
        For Each prof In profile_structure.profilelist
            If prof.profilename = ListBox13.SelectedItem Then
                profile_structure.startupprofile = prof.profilename
                Label108.Text = "Current Startup Profile Is :- " & prof.profilename
                Call saveprofiles()
                Exit For
            End If
        Next
    End Sub

    Private Sub Button80_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button80.Click
        'remove selected profile
        If ListBox13.SelectedItem = profile_structure.defaultprofile Then
            MsgBox("You can't delete your default profile" & vbCrLf & "Set another Profile to default then delete it")
            Exit Sub
        End If
        If ListBox13.SelectedItem = profile_structure.startupprofile Then
            MsgBox("You can't delete your startup profile" & vbCrLf & "Set another Profile to startup then delete it")
            Exit Sub
        End If
        If ListBox13.SelectedItem = workingprofile.profilename Then
            MsgBox("You can't delete a loaded profile" & vbCrLf & "Load another Profile then delete it")
            Exit Sub
        End If
        Dim tempint As Integer = MessageBox.Show("Removing a profile will delete all associated cache files and settings," & vbCrLf & "Are you sure you want to remove the selected profile", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
        If tempint = DialogResult.Yes Then
            Dim tempint2 As Integer
            For f = 0 To profile_structure.profilelist.Count - 1

                If profile_structure.profilelist(f).profilename = ListBox13.SelectedItem Then
                    tempint2 = f
                    Try
                        IO.File.Delete(profile_structure.profilelist(f).actorcache)
                    Catch ex As Exception
                    End Try
                    Try
                        IO.File.Delete(profile_structure.profilelist(f).config)
                    Catch ex As Exception
                    End Try
                    Try
                        IO.File.Delete(profile_structure.profilelist(f).filters)
                    Catch ex As Exception
                    End Try
                    Try
                        IO.File.Delete(profile_structure.profilelist(f).moviecache)
                    Catch ex As Exception
                    End Try
                    Try
                        IO.File.Delete(profile_structure.profilelist(f).regexlist)
                    Catch ex As Exception
                    End Try
                    Try
                        IO.File.Delete(profile_structure.profilelist(f).tvcache)
                    Catch ex As Exception
                    End Try
                    Exit For
                End If
            Next
            profile_structure.profilelist.RemoveAt(tempint2)
            ListBox13.Items.Clear()
            ProfilesToolStripMenuItem.DropDownItems.Clear()
            If profile_structure.profilelist.Count > 1 Then
                ProfilesToolStripMenuItem.Visible = True
            Else
                ProfilesToolStripMenuItem.Visible = False
            End If
            ProfilesToolStripMenuItem.DropDownItems.Clear()
            For Each prof In profile_structure.profilelist
                ListBox13.Items.Add(prof.profilename)
                ProfilesToolStripMenuItem.DropDownItems.Add(prof.profilename)
            Next


        End If
    End Sub

    Private Sub ProfilesToolStripMenuItem_DropDownItemClicked(ByVal sender As Object, ByVal e As System.Windows.Forms.ToolStripItemClickedEventArgs) Handles ProfilesToolStripMenuItem.DropDownItemClicked
        generalprefschanged = False

        Dim save As New _preferences
        save.saveconfig()

        For Each prof In profile_structure.profilelist
            If prof.profilename = e.ClickedItem.Text Then
                workingprofile.actorcache = prof.actorcache
                workingprofile.config = prof.config
                workingprofile.filters = prof.filters
                workingprofile.moviecache = prof.moviecache
                workingprofile.profilename = prof.profilename
                workingprofile.regexlist = prof.regexlist
                workingprofile.tvcache = prof.tvcache
                Call setupnewprofile()
            End If
        Next
        If e.ClickedItem.Text <> workingprofile.profilename Then
            Exit Sub
        End If
        For Each item In ProfilesToolStripMenuItem.DropDownItems
            If item.text = workingprofile.profilename Then
                With item
                    item.checked = True
                End With
            Else
                item.checked = False
            End If
        Next
    End Sub

    Private Sub setupnewprofile()

        Dim mess As New message_box(" Please Wait", , "Loading Profile")
        mess.Show()
        mess.Refresh()
        Application.DoEvents()
        Me.Enabled = False
        If IO.File.Exists(workingprofile.config) Then
            userprefs.moviesets.Clear()
            Dim prefs As New _preferences
            prefs.loadconfig()
            For Each item In userprefs.moviesets
                ComboBox3.Items.Clear()
                ComboBox3.Items.Add(item)
            Next
        Else
            Call setuppreferences()
        End If

        If Not IO.File.Exists(workingprofile.moviecache) Or userprefs.startupcache = False Then
            Call rebuildmovies(moviefolders)
        Else
            Call reloadmoviecache()
        End If

        If IO.File.Exists(workingprofile.filters) Then
            Call loadgenrelist()
        End If

        If Not IO.File.Exists(workingprofile.tvcache) Or userprefs.startupcache = False Then
            Call rebuildtvshows()
        Else
            Call loadtvcache()
        End If

        If Not IO.File.Exists(workingprofile.actorcache) Or userprefs.startupcache = False Then
            Call rebuildactordb()
        Else
            Call loadactorcache()
        End If







        'If userprefs.maximised = True Then
        '    Me.WindowState = FormWindowState.Maximized
        'Else
        '    If userprefs.locx <> 0 Then
        '        Me.Location = New Point(userprefs.locx, userprefs.locy)
        '    End If
        '    If userprefs.locy <> 0 Then
        '        Me.Location = New Point(userprefs.locx, userprefs.locy)
        '    End If
        '    If userprefs.formheight <> 0 And userprefs.formwidth <> 0 Then
        '        Me.Width = userprefs.formwidth
        '        Me.Height = userprefs.formheight
        '    End If
        'End If

        Me.Refresh()
        Application.DoEvents()

        If userprefs.splt5 = 0 Then
            Dim tempint As Integer = SplitContainer1.Height
            tempint = tempint / 4
            tempint = tempint * 3
            If tempint > 275 Then
                userprefs.splt5 = tempint
            Else
                userprefs.splt5 = 275
            End If
        End If

        If userprefs.startuptab = 0 Then
            SplitContainer1.SplitterDistance = userprefs.splt1
            SplitContainer2.SplitterDistance = userprefs.splt2
            SplitContainer5.SplitterDistance = userprefs.splt5
            TabControl1.SelectedIndex = 1
            SplitContainer3.SplitterDistance = userprefs.splt3
            SplitContainer4.SplitterDistance = userprefs.splt4
            TabControl1.SelectedIndex = 0
        Else
            SplitContainer1.SplitterDistance = userprefs.splt1
            SplitContainer2.SplitterDistance = userprefs.splt2
            SplitContainer5.SplitterDistance = userprefs.splt5
            TabControl1.SelectedIndex = 1
            SplitContainer3.SplitterDistance = userprefs.splt3
            SplitContainer4.SplitterDistance = userprefs.splt4
        End If
        SplitContainer1.IsSplitterFixed = False
        SplitContainer2.IsSplitterFixed = False
        SplitContainer3.IsSplitterFixed = False
        SplitContainer4.IsSplitterFixed = False
        SplitContainer5.IsSplitterFixed = False
        'Dim tempboolean As Boolean = UrlIsValid("http://thetvdb.com/")

        Try
            If ComboBox3.Items.Count <> userprefs.moviesets.Count Then
                ComboBox3.Items.Clear()
                For Each mset In userprefs.moviesets
                    ComboBox3.Items.Add(mset)
                Next
            End If
            If workingmoviedetails.fullmoviebody.movieset <> "None" Then
                'For Each mset In userprefs.moviesets
                '    ComboBox3.Items.Add(mset)
                'Next
                For te = 0 To ComboBox3.Items.Count - 1
                    If ComboBox3.Items(te) = workingmoviedetails.fullmoviebody.movieset Then
                        ComboBox3.SelectedIndex = te
                        Exit For
                    End If
                Next
            End If
        Catch
        End Try
        Try
            TabControl2.SelectedIndex = 0
            m_CurrentTabIndex = 0
        Catch
        End Try
        Try
            TabControl3.SelectedIndex = 0
            tv_CurrentTabIndex = 0
        Catch
        End Try


        Me.Enabled = True
        mess.Close()
    End Sub

    Private Sub CheckBox19_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox19.CheckedChanged
        If CheckBox19.CheckState = CheckState.Checked Then
            userprefs.enablehdtags = True
        Else
            userprefs.enablehdtags = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox20_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox20.CheckedChanged
        If CheckBox20.CheckState = CheckState.Checked Then
            userprefs.enabletvhdtags = True
        Else
            userprefs.enabletvhdtags = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub Button94_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button94.Click
        'up
        Try
            Dim mSelectedIndex, mOtherIndex As Integer
            If Me.ListBox14.SelectedIndex <> 0 Then
                mSelectedIndex = Me.ListBox14.SelectedIndex
                mOtherIndex = mSelectedIndex - 1
                ListBox14.Items.Insert(mSelectedIndex + 1, ListBox14.Items(mOtherIndex))
                ListBox14.Items.RemoveAt(mOtherIndex)
            End If
            tvregex.Clear()
            For Each item In ListBox14.Items
                tvregex.Add(item)
            Next
            generalprefschanged = True
        Catch
        End Try
    End Sub

    Private Sub Button95_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button95.Click
        'down
        Try
            Dim mSelectedIndex, mOtherIndex As Integer
            If Me.ListBox14.SelectedIndex <> Me.ListBox14.Items.Count - 1 Then
                mSelectedIndex = Me.ListBox14.SelectedIndex
                mOtherIndex = mSelectedIndex + 1
                ListBox14.Items.Insert(mSelectedIndex, ListBox14.Items(mOtherIndex))
                ListBox14.Items.RemoveAt(mOtherIndex + 1)
            End If
            tvregex.Clear()
            For Each item In ListBox14.Items
                tvregex.Add(item)
            Next
            generalprefschanged = True
        Catch
        End Try
    End Sub

    Private Sub ComboBox9_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox9.SelectedIndexChanged
        userprefs.tvrename = ComboBox9.SelectedIndex
        generalprefschanged = True
    End Sub

    Private Sub SearchForNewMoviesToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SearchForNewMoviesToolStripMenuItem.Click
        If Not BckWrkScnMovies.IsBusy Then
            ToolStripStatusLabel1.Visible = True
            ToolStripProgressBar1.Visible = True
            TabPage14.Text = "Cancel Movie Search"
            TabPage14.ToolTipText = "This cancels the movie search" & vbCrLf & "and Movie scraper thread"
            BckWrkScnMovies.RunWorkerAsync()
        Else
            MsgBox("This task is already running")
        End If
    End Sub

    Private Sub applyotherfilters()
        Dim newlist As New List(Of combolist)
        newlist.Clear()
        If ComboBox10.SelectedItem = "Title" Then
            For Each item In filteredlist
                If item.title.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If

        If ComboBox10.SelectedItem = "Filename" Then
            For Each item In filteredlist
                If item.filename.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "Foldername" Then
            For Each item In filteredlist
                If item.foldername.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "Genre" Then
            For Each item In filteredlist
                If item.genre.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "Rating" Then
            For Each item In filteredlist
                If item.rating.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "IMDB ID" Then
            For Each item In filteredlist
                If item.id.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "Outline" Then
            For Each item In filteredlist
                If item.outline.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "Year" Then
            For Each item In filteredlist
                If item.year.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
        If ComboBox10.SelectedItem = "Runtime" Then
            For Each item In filteredlist
                If item.runtime.ToLower.IndexOf(txt_titlesearch.Text.ToLower) <> -1 Then
                    newlist.Add(item)
                End If
            Next
            filteredlist = newlist
            Exit Sub
        End If
    End Sub

    Private Sub ComboBox10_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox10.SelectedIndexChanged
        Call ApplyFilters()
    End Sub

    Private Sub txt_titlesearch_ModifiedChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_titlesearch.ModifiedChanged
        If filteroverride = False Then
            If txt_titlesearch.Text.Length > 0 Then
                txt_titlesearch.BackColor = Color.Pink
            Else
                txt_titlesearch.BackColor = Color.White
            End If
            txt_titlesearch.Refresh()
            Call applyfilters()
        End If
    End Sub
    Public Structure tableitems
        Dim title As String
        Dim width As Integer
        Dim index As Integer
        Dim visible As Boolean
    End Structure
    Dim tablesets As New List(Of tableitems)
    Private Sub setuptableview()
        userprefs.tableview.Clear()
        userprefs.tableview.Add("title|150|0|true")

        userprefs.tableview.Add("year|35|1|true")

        userprefs.tableview.Add("playcount|55|2|true")

        userprefs.tableview.Add("fullpathandfilename|150|3|false")

        userprefs.tableview.Add("genre|150|4|true")

        userprefs.tableview.Add("runtime|45|5|true")

        userprefs.tableview.Add("outline|200|6|false")

        userprefs.tableview.Add("id|75|7|false")

        userprefs.tableview.Add("rating|40|8|true")

        userprefs.tableview.Add("set|150|9|true")

        userprefs.tableview.Add("sorttitle|150|10|false")

        userprefs.tableview.Add("top250|150|11|false")

        userprefs.tableview.Add("missingdata1|150|12|false")

    End Sub

    Private Sub setuptable()
        DataGridView1.Columns.Clear()
        If userprefs.tablesortorder = Nothing Then userprefs.tablesortorder = "Title|Ascending"
        If userprefs.tablesortorder = "" Then userprefs.tablesortorder = "Title|Ascending"
        If userprefs.tableview.Count <> 13 Then
            Call setuptableview()
        End If
        cmbobx_tablesets.Items.Clear()
        Cmbobx_tablewatched.Items.Clear()
        tablesets.Clear()
        For Each item In userprefs.tableview
            Dim tempdata() As String
            tempdata = item.Split("|")
            Dim newcolumn As New tableitems
            newcolumn.title = tempdata(0)
            newcolumn.width = Convert.ToInt32(tempdata(1))
            newcolumn.index = Convert.ToInt32(tempdata(2))
            If tempdata(3).ToLower = "true" Then
                newcolumn.visible = True
            Else
                newcolumn.visible = False
            End If
            tablesets.Add(newcolumn)
        Next

      
        DataGridView1.AutoGenerateColumns = False

        Dim doc As New XmlDocument

        Dim thispref As XmlNode = Nothing
        Dim xmlproc As XmlDeclaration

        xmlproc = doc.CreateXmlDeclaration("1.0", "UTF-8", "yes")
        doc.AppendChild(xmlproc)
        Dim root As XmlElement
        Dim child As XmlElement
        root = doc.CreateElement("movie_cache")

        Dim childchild As XmlElement
        For Each movie In filteredlist
            child = doc.CreateElement("movie")
            childchild = doc.CreateElement("filedate")
            childchild.InnerText = movie.filedate
            child.AppendChild(childchild)
            childchild = doc.CreateElement("missingdata1")
            childchild.InnerText = movie.missingdata1.ToString
            child.AppendChild(childchild)
            childchild = doc.CreateElement("filename")
            childchild.InnerText = movie.filename
            child.AppendChild(childchild)
            childchild = doc.CreateElement("foldername")
            childchild.InnerText = movie.foldername
            child.AppendChild(childchild)
            childchild = doc.CreateElement("fullpathandfilename")
            childchild.InnerText = movie.fullpathandfilename
            child.AppendChild(childchild)
            If movie.movieset <> Nothing Then
                If movie.movieset <> "" Then
                    childchild = doc.CreateElement("set")
                    childchild.InnerText = movie.movieset
                    child.AppendChild(childchild)
                Else
                    childchild = doc.CreateElement("set")
                    childchild.InnerText = "None"
                    child.AppendChild(childchild)
                End If
            Else
                childchild = doc.CreateElement("set")
                childchild.InnerText = "None"
                child.AppendChild(childchild)
            End If
            childchild = doc.CreateElement("genre")
            childchild.InnerText = movie.genre
            child.AppendChild(childchild)
            childchild = doc.CreateElement("id")
            childchild.InnerText = movie.id
            child.AppendChild(childchild)
            childchild = doc.CreateElement("playcount")
            childchild.InnerText = movie.playcount
            child.AppendChild(childchild)
            childchild = doc.CreateElement("rating")
            childchild.InnerText = movie.rating
            child.AppendChild(childchild)
            childchild = doc.CreateElement("title")
            childchild.InnerText = movie.title
            child.AppendChild(childchild)
            If movie.sortorder = Nothing Then
                movie.sortorder = movie.title
            End If
            If movie.sortorder = "" Then
                movie.sortorder = movie.title
            End If
            childchild = doc.CreateElement("outline")
            childchild.InnerText = movie.outline
            child.AppendChild(childchild)
            childchild = doc.CreateElement("sortorder")
            childchild.InnerText = movie.sortorder
            child.AppendChild(childchild)
            childchild = doc.CreateElement("titleandyear")
            childchild.InnerText = movie.titleandyear
            child.AppendChild(childchild)
            childchild = doc.CreateElement("runtime")
            childchild.InnerText = movie.runtime
            child.AppendChild(childchild)
            childchild = doc.CreateElement("top250")
            childchild.InnerText = movie.top250
            child.AppendChild(childchild)
            childchild = doc.CreateElement("year")
            childchild.InnerText = movie.year
            child.AppendChild(childchild)
            root.AppendChild(child)
        Next

        doc.AppendChild(root)





        Dim runt As XmlElement
        For Each thisresult In doc("movie_cache")
            'Try
            Select Case thisresult.Name
                Case "movie"
                    Dim chi As XmlElement
                    For Each chi In thisresult.childnodes
                        If chi.Name = "runtime" Then
                            chi.InnerText = chi.InnerText.Replace("minutes", "")
                            chi.InnerText = chi.InnerText.Replace("mins", "")
                            chi.InnerText = chi.InnerText.Replace("min", "")
                            chi.InnerText = chi.InnerText.Replace(" ", "")
                            If chi.InnerText.Length = 1 Then
                                chi.InnerText = "00" & chi.InnerText
                            End If
                            If chi.InnerText.Length = 2 Then
                                chi.InnerText = "0" & chi.InnerText
                            End If
                            chi.InnerText = chi.InnerText & " min"
                        End If
                        If chi.Name = "top250" Then
                            If chi.InnerText = "" Then
                                chi.InnerText = "000" & chi.InnerText
                            End If
                            If IsNumeric(chi.InnerText) Then
                                If chi.InnerText.Length = 0 Then
                                    chi.InnerText = "000" & chi.InnerText
                                End If
                                If chi.InnerText.Length = 1 Then
                                    chi.InnerText = "00" & chi.InnerText
                                End If
                                If chi.InnerText.Length = 2 Then
                                    chi.InnerText = "0" & chi.InnerText
                                End If
                            End If
                        End If
                        If chi.Name = "playcount" Then
                            If chi.InnerText = "" Then
                                chi.InnerText = "0"
                            End If
                            If Not IsNumeric(chi.InnerText) Then
                                chi.InnerText = "0"
                            End If
                            Dim play As Integer = Convert.ToInt32(chi.InnerText)
                            Dim bbol As String = "False"
                            If play > 0 Then
                                bbol = "True"
                            Else
                                bbol = "False"
                            End If
                            chi.InnerText = bbol
                        End If
                        If chi.Name = "missingdata1" Then
                            If chi.InnerText = "" Then
                                chi.InnerText = "0"
                            End If
                            If Not IsNumeric(chi.InnerText) Then
                                chi.InnerText = "0"
                            End If
                            Dim play As Integer = Convert.ToInt32(chi.InnerText)
                            Dim bbol As String
                            If play = 0 Then
                                bbol = "None"
                            ElseIf play = 1 Then
                                bbol = "Fanart"
                            ElseIf play = 2 Then
                                bbol = "Poster"
                            ElseIf play = "3" Then
                                bbol = "Poster & Fanart"
                            End If
                            chi.InnerText = bbol
                        End If
                    Next
            End Select
        Next

        Dim movstring As String = doc.InnerXml
        Dim XMLreader2 As StringReader = New System.IO.StringReader(movstring)

        ' Create the dataset
        Dim newDS As DataSet = New DataSet
        newDS.ReadXml(XMLreader2)
        XMLreader2.Dispose()

        DataGridView1.DataSource = newDS.Tables(0)
        DataGridView1.AllowUserToOrderColumns = True
        DataGridView1.RowHeadersVisible = True
        DataGridView1.RowHeadersWidth = 30

        Dim titlecolumn As New DataGridViewColumn()
        With titlecolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Title"
            .DataPropertyName = "title"
            .Name = "title"
            .SortMode = DataGridViewColumnSortMode.Automatic
        End With

        Dim yearcolumn As New DataGridViewColumn()
        With yearcolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Year"
            .DataPropertyName = "year"
            .Name = "year"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomCenter
        End With


        Dim idcolumn As New DataGridViewColumn()
        With idcolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "IMDB ID"
            .DataPropertyName = "id"
            .Name = "id"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .ReadOnly = True
            .DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomCenter
        End With

        Dim pathcolumn As New DataGridViewColumn()
        With pathcolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Full Path"
            .DataPropertyName = "fullpathandfilename"
            .Name = "fullpathandfilename"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .ReadOnly = True
        End With

        Dim genrecolumn As New DataGridViewColumn()
        With genrecolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Genre"
            .DataPropertyName = "genre"
            .Name = "genre"
            .SortMode = DataGridViewColumnSortMode.Automatic
        End With

        Dim ratingcolumn As New DataGridViewColumn()
        With ratingcolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Rating"
            .DataPropertyName = "rating"
            .Name = "rating"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomCenter
        End With

        Dim outlinecolumn As New DataGridViewColumn()
        With outlinecolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            '.DefaultCellStyle.WrapMode = DataGridViewTriState.True
            .HeaderText = "Outline"
            .DataPropertyName = "outline"
            .Name = "outline"
            .SortMode = DataGridViewColumnSortMode.Automatic
        End With

        Dim sorttitlecolumn As New DataGridViewColumn()
        With sorttitlecolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Sort Title"
            .DataPropertyName = "sortorder"
            .Name = "sorttitle"
            .SortMode = DataGridViewColumnSortMode.Automatic
        End With

        Dim top250column As New DataGridViewColumn()
        With top250column
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Top 250"
            .DataPropertyName = "top250"
            .Name = "top250"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomCenter
        End With

        Dim watchedcolumn As New DataGridViewCheckBoxColumn()
        With watchedcolumn
            'Dim oCell As DataGridViewCell = New DataGridViewComboBoxCell
            '.CellTemplate = oCell
            .HeaderText = "Watched"
            .Name = "playcount"
            .DataPropertyName = "playcount"
            .SortMode = DataGridViewColumnSortMode.Automatic
        End With

        Dim runtimecolumn As New DataGridViewColumn()
        With runtimecolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Runtime"
            .Name = "runtime"
            .DataPropertyName = "runtime"
            .SortMode = DataGridViewColumnSortMode.Automatic
        End With

        Dim setscolumn As New DataGridViewComboBoxColumn
        cmbobx_tablesets.Items.Add("UnChanged")
        For Each sets In userprefs.moviesets
            setscolumn.Items.Add(sets)
            cmbobx_tablesets.Items.Add(sets)
        Next
        cmbobx_tablesets.SelectedItem = "UnChanged"
        With setscolumn
            .HeaderText = "Sets"
            .Name = "set"
            .DataPropertyName = "set"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .DefaultCellStyle.NullValue = "None"
        End With

        Dim artcolumn As New DataGridViewColumn()
        With artcolumn
            Dim oCell As DataGridViewCell = New DataGridViewTextBoxCell
            .CellTemplate = oCell
            .HeaderText = "Missing Artwork"
            .Name = "missingdata1"
            .DataPropertyName = "missingdata1"
            .SortMode = DataGridViewColumnSortMode.Automatic
            .ReadOnly = True
        End With

        For f = 0 To 12
            For Each col In tablesets
                If col.index = f Then
                    Select Case col.title
                        Case "title"
                            titlecolumn.Width = col.width
                            If col.visible = True Then
                                titlecolumn.Visible = True
                            Else
                                titlecolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, titlecolumn)
                            Exit For
                        Case "year"
                            yearcolumn.Width = col.width
                            If col.visible = True Then
                                yearcolumn.Visible = True
                            Else
                                yearcolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, yearcolumn)
                            Exit For
                        Case "playcount"
                            watchedcolumn.Width = col.width
                            If col.visible = True Then
                                watchedcolumn.Visible = True
                                CheckBox25.CheckState = CheckState.Checked
                            Else
                                watchedcolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, watchedcolumn)
                            Exit For
                        Case "fullpathandfilename"
                            pathcolumn.Width = col.width
                            If col.visible = True Then
                                CheckBox23.CheckState = CheckState.Checked
                                pathcolumn.Visible = True
                            Else
                                pathcolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, pathcolumn)
                            Exit For
                        Case "genre"
                            genrecolumn.Width = col.width
                            If col.visible = True Then
                                genrecolumn.Visible = True
                                CheckBox28.CheckState = CheckState.Checked
                            Else
                                genrecolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, genrecolumn)
                            Exit For
                        Case "outline"
                            outlinecolumn.Width = col.width
                            If col.visible = True Then
                                outlinecolumn.Visible = True
                                CheckBox27.CheckState = CheckState.Checked
                            Else
                                outlinecolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, outlinecolumn)
                            Exit For
                        Case "id"
                            idcolumn.Width = col.width
                            If col.visible = True Then
                                CheckBox24.CheckState = CheckState.Checked
                                idcolumn.Visible = True
                            Else
                                idcolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, idcolumn)
                            Exit For
                        Case "rating"
                            ratingcolumn.Width = col.width
                            If col.visible = True Then
                                ratingcolumn.Visible = True
                                CheckBox26.CheckState = CheckState.Checked
                            Else
                                ratingcolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, ratingcolumn)
                            Exit For
                        Case "set"
                            setscolumn.Width = col.width
                            If col.visible = True Then
                                setscolumn.Visible = True
                                CheckBox30.CheckState = CheckState.Checked
                            Else
                                setscolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, setscolumn)
                            Exit For
                        Case "sorttitle"
                            sorttitlecolumn.Width = col.width
                            If col.visible = True Then
                                CheckBox21.CheckState = CheckState.Checked
                                sorttitlecolumn.Visible = True
                            Else
                                sorttitlecolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, sorttitlecolumn)
                            Exit For
                        Case "top250"
                            top250column.Width = col.width
                            If col.visible = True Then
                                CheckBox29.CheckState = CheckState.Checked
                                top250column.Visible = True
                            Else
                                top250column.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, top250column)
                            Exit For
                        Case "runtime"
                            runtimecolumn.Width = col.width
                            If col.visible = True Then
                                CheckBox31.CheckState = CheckState.Checked
                                runtimecolumn.Visible = True
                            Else
                                runtimecolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, runtimecolumn)
                            Exit For
                        Case "missingdata1"
                            artcolumn.Width = col.width
                            If col.visible = True Then
                                CheckBox32.CheckState = CheckState.Checked
                                artcolumn.Visible = True
                            Else
                                artcolumn.Visible = False
                            End If
                            DataGridView1.Columns.Insert(f, artcolumn)
                            Exit For
                    End Select
                End If
            Next
        Next f

        Cmbobx_tablewatched.Items.Add("UnChanged")
        Cmbobx_tablewatched.Items.Add("Watched")
        Cmbobx_tablewatched.Items.Add("Unwatched")

        cmbobx_tablesets.SelectedIndex = 0
        Cmbobx_tablewatched.SelectedIndex = 0

        Dim sortheader As String
        Dim sortord As String
        Dim tempdata2() As String
        tempdata2 = userprefs.tablesortorder.Split("|")
        sortheader = tempdata2(0)
        sortord = tempdata2(1)

        For Each col In DataGridView1.Columns
            If col.headertext = sortheader Then
                If sortord.ToLower.IndexOf("desc") <> -1 Then
                    DataGridView1.Sort(DataGridView1.Columns(col.index), ListSortDirection.Descending)
                Else
                    DataGridView1.Sort(DataGridView1.Columns(col.index), ListSortDirection.Ascending)
                End If
            End If
        Next

        For Each tempRow As System.Windows.Forms.DataGridViewRow In Me.DataGridView1.Rows
            For Each tempCell As Windows.Forms.DataGridViewCell In tempRow.Cells
                If tempCell.Value = "Fanart" Or tempCell.Value = "Poster" Or tempCell.Value = "Poster & Fanart" Then
                    tempCell.Style.BackColor = Color.Red
                End If
            Next
        Next
       
        Call setuptextboxes()
        Try
            For f = 0 To DataGridView1.Rows.Count
                If DataGridView1.Rows(f).Cells("fullpathandfilename").Value = workingmoviedetails.fileinfo.fullpathandfilename Then
                    DataGridView1.ClearSelection()
                    'DataGridView1.CurrentCell = DataGridView1.Rows(f).Cells(0)
                    'DataGridView1.Rows(f).Selected = True
                    DataGridView1.FirstDisplayedScrollingRowIndex = f
                    Exit For
                End If
            Next
        Catch
        End Try
    End Sub

    Private Sub setupfont()
        If userprefs.font <> Nothing Then
            If userprefs.font <> "" Then
                Try
                    Dim tcc As TypeConverter = TypeDescriptor.GetConverter(GetType(System.Drawing.Font))
                    Dim newFont As System.Drawing.Font = CType(tcc.ConvertFromString(userprefs.font), System.Drawing.Font)
                    genretxt.Font = newFont
                    certtxt.Font = newFont
                    directortxt.Font = newFont
                    creditstxt.Font = newFont
                    outlinetxt.Font = newFont
                    runtimetxt.Font = newFont
                    studiotxt.Font = newFont
                    taglinetxt.Font = newFont
                    actorcb.Font = newFont
                    roletxt.Font = newFont
                    pathtxt.Font = newFont
                    'CheckedListBox1.Font = newFont
                    TextBox34.Font = newFont
                    ComboBox3.Font = newFont
                    ComboBox1.Font = newFont
                    plottxt.Font = newFont
                    'titletxt.Font = newFont
                    ComboBox3.Font = newFont
                    ComboBox5.Font = newFont
                    TreeView1.Font = newFont
                    TextBox25.Font = newFont
                    TextBox22.Font = newFont
                    TextBox23.Font = newFont
                    TextBox21.Font = newFont
                    TextBox24.Font = newFont
                    TextBox20.Font = newFont
                    TextBox17.Font = newFont
                    TextBox29.Font = newFont
                    TextBox19.Font = newFont
                    ComboBox4.Font = newFont
                    TextBox18.Font = newFont
                    TextBox15.Font = newFont
                    TextBox16.Font = newFont
                    TextBox10.Font = newFont
                    TextBox13.Font = newFont
                    TextBox9.Font = newFont
                    TextBox11.Font = newFont
                    TextBox12.Font = newFont
                    TextBox14.Font = newFont
                    Me.Refresh()
                    Application.DoEvents()
                Catch
                End Try
            End If
        End If


    End Sub
    
    Private Sub ListBox14_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox14.SelectedIndexChanged
        If ListBox14.SelectedItem <> Nothing Then
            TextBox46.Text = ListBox14.SelectedItem
        End If
    End Sub

    Private Sub Button96_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button96.Click
        Dim dlg As FontDialog = New FontDialog()
        Dim res As DialogResult = dlg.ShowDialog()
        If res = Windows.Forms.DialogResult.OK Then
            Dim tc As TypeConverter = TypeDescriptor.GetConverter(GetType(System.Drawing.Font))
            Dim fontString As String = tc.ConvertToString(dlg.Font)

            userprefs.font = fontString

            Dim tcc As TypeConverter = TypeDescriptor.GetConverter(GetType(System.Drawing.Font))
            Dim newFont As System.Drawing.Font = CType(tcc.ConvertFromString(userprefs.font), System.Drawing.Font)

            Label130.Font = newFont

            generalprefschanged = True
        End If
    End Sub

    Private Sub TabPage32_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles TabPage32.Leave
        DataGridView1.EndEdit()
        userprefs.tableview.Clear()
        For Each column In DataGridView1.Columns
            Dim tempstring As String = column.name & "|" & column.width & "|" & column.displayindex & "|" & column.visible
            userprefs.tableview.Add(tempstring)
        Next
        userprefs.tablesortorder = DataGridView1.SortedColumn.HeaderText & "|" & DataGridView1.SortOrder.ToString
        Dim save As New _preferences
        save.saveconfig()

        Dim changed As Boolean = False
        Dim gridrow As DataGridViewRow

        For Each gridrow In DataGridView1.Rows
            Dim idpath As String = gridrow.Cells("fullpathandfilename").Value

            For Each mov In fullmovielist
                If mov.fullpathandfilename = idpath Then
                    If mov.title <> gridrow.Cells("Title").Value Then
                        changed = True
                    End If
                    If mov.outline <> gridrow.Cells("Outline").Value Then
                        changed = True
                    End If
                    If mov.genre <> gridrow.Cells("genre").Value Then
                        changed = True
                    End If
                    If mov.rating <> gridrow.Cells("rating").Value Then
                        changed = True
                    End If
                    Try
                        If gridrow.Cells("playcount").Value Then
                            If Convert.ToInt32(mov.playcount) <= 0 Then
                                changed = True
                            End If
                        Else
                            If Convert.ToInt32(mov.playcount) > 0 Then
                                changed = True
                            End If
                        End If
                    Catch
                        If Convert.ToInt32(mov.playcount) > 0 Then
                            changed = True
                        End If
                    End Try
                    If mov.sortorder <> gridrow.Cells("sorttitle").Value Then
                        changed = True
                    End If
                    If mov.year <> gridrow.Cells("year").Value Then
                        If IsNumeric(gridrow.Cells("year").Value) Then
                            changed = True
                        End If
                    End If
                    Try
                        If Convert.ToInt32(mov.top250) <> Convert.ToInt32(gridrow.Cells("top250").Value) Then
                            If IsNumeric(gridrow.Cells("top250").Value) Then
                                changed = True
                            End If
                        End If
                    Catch
                    End Try
                    Dim runtime As String = gridrow.Cells("runtime").Value
                    runtime = runtime.Replace("min", "")
                    runtime = runtime.Trim(" ")
                    If IsNumeric(runtime) Then
                        Dim temruntime As Integer = Convert.ToInt32(runtime)
                        Dim tempstrin As String = temruntime.ToString & " min"
                        If mov.runtime <> tempstrin Then
                            changed = True
                        End If
                    End If
                    If mov.movieset <> gridrow.Cells("set").Value Then
                        If mov.movieset = "None" And gridrow.Cells("set").Value = Nothing Then
                        Else
                            If mov.movieset = Nothing Then
                                If gridrow.Cells("set").Value <> "None" Then
                                    changed = True
                                End If
                            Else
                                changed = True
                            End If
                        End If
                    End If
                End If
                If changed = True Then Exit For
            Next
            If changed = True Then
                Exit For
            End If

        Next gridrow
        If changed = True Then
            Dim tempint As Integer = MessageBox.Show("You appear to have made changes to some of your movie details." & vbCrLf & vbCrLf & "Any changes will be lost if you do not save the changes now." & "                 Do wish to save the changes?", "Warning", MessageBoxButtons.YesNo, MessageBoxIcon.Question)
            If tempint = DialogResult.Yes Then
                Call savetablechanges()
                MsgBox("Changes Saved")
            End If
        End If

    End Sub

    Private Sub CheckBox21_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox21.CheckedChanged
        Try
            If CheckBox21.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("sorttitle").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("sorttitle").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox23_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox23.CheckedChanged
        Try
            If CheckBox23.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("fullpathandfilename").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("fullpathandfilename").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox24_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox24.CheckedChanged
        Try
            If CheckBox24.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("id").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("id").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox25_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox25.CheckedChanged
        Try
            If CheckBox25.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("playcount").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("playcount").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox26_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox26.CheckedChanged
        Try
            If CheckBox26.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("rating").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("rating").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox27_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox27.CheckedChanged
        Try
            If CheckBox27.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("outline").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("outline").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox28_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox28.CheckedChanged
        Try
            If CheckBox28.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("genre").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("genre").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox29_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox29.CheckedChanged
        Try
            If CheckBox29.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("top250").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("top250").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox30_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox30.CheckedChanged
        Try
            If CheckBox30.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("set").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("set").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub CheckBox31_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox31.CheckedChanged
        Try
            If CheckBox31.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("runtime").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("runtime").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub savetablechanges()
        Dim mess As New message_box("Saving Changes", "", "Please Wait")
        mess.Show()
        mess.Refresh()
        Application.DoEvents()
        Dim gridrow As DataGridViewRow

        For Each gridrow In DataGridView1.Rows
            Dim changed As Boolean = False
            Dim idpath As String = gridrow.Cells("fullpathandfilename").Value
            Dim array As New List(Of String)
            For f = fullmovielist.Count - 1 To 0 Step -1
                changed = False
                If Not array.Contains(fullmovielist(f).fullpathandfilename) Then
                    If fullmovielist(f).fullpathandfilename = idpath Then
                        array.Add(fullmovielist(f).fullpathandfilename)
                        Try
                            If fullmovielist(f).title <> gridrow.Cells("Title").Value Then
                                changed = True
                            End If
                        Catch
                        End Try
                        Try
                            If fullmovielist(f).outline <> gridrow.Cells("Outline").Value Then
                                changed = True
                            End If
                        Catch
                        End Try
                        Try
                            If fullmovielist(f).genre <> gridrow.Cells("genre").Value Then
                                changed = True
                            End If
                        Catch
                        End Try
                        Try
                            If fullmovielist(f).rating <> gridrow.Cells("rating").Value Then
                                changed = True
                            End If
                        Catch
                        End Try
                        Try
                            If gridrow.Cells("playcount").Value = True Then
                                If fullmovielist(f).playcount <= 0 Then
                                    changed = True
                                End If
                            Else
                                If fullmovielist(f).playcount > 0 Then
                                    changed = True
                                End If
                            End If
                        Catch
                            If fullmovielist(f).playcount > 0 Then
                                changed = True
                            End If
                        End Try
                        Try
                            If fullmovielist(f).sortorder <> gridrow.Cells("sorttitle").Value Then
                                changed = True
                            End If
                        Catch
                        End Try
                        Try
                            If fullmovielist(f).year <> gridrow.Cells("year").Value Then
                                If IsNumeric(gridrow.Cells("year").Value) Then
                                    changed = True
                                End If
                            End If
                        Catch
                        End Try
                        Try
                            If Convert.ToInt32(fullmovielist(f).top250) <> Convert.ToInt32(gridrow.Cells("top250").Value) Then
                                If IsNumeric(gridrow.Cells("top250").Value) Then
                                    changed = True
                                End If
                            End If
                        Catch
                        End Try
                        Try
                            Dim runtime As String = gridrow.Cells("runtime").Value
                            runtime = runtime.Replace("min", "")
                            runtime = runtime.Trim(" ")
                            If IsNumeric(runtime) Then
                                Dim temruntime As Integer = Convert.ToInt32(runtime)
                                Dim tempstrin As String = temruntime.ToString & " min"
                                If fullmovielist(f).runtime <> tempstrin Then
                                    changed = True
                                End If
                            End If
                        Catch
                        End Try
                        Try
                            If fullmovielist(f).movieset <> gridrow.Cells("set").Value Then
                                changed = True
                            End If
                        Catch
                        End Try
                    End If
                    If changed = True And IO.File.Exists(fullmovielist(f).fullpathandfilename) Then
                        Dim changedmoviedetails As fullmoviedetails
                        Dim changedmovie As New combolist
                        changedmoviedetails = nfofunction.loadfullmovienfo(fullmovielist(f).fullpathandfilename)
                        If Not changedmoviedetails Is Nothing Then
                            changedmovie = fullmovielist(f)
                            Try
                                changedmovie.genre = gridrow.Cells("genre").Value
                            Catch
                            End Try
                            Try
                                changedmovie.title = gridrow.Cells("title").Value
                            Catch
                            End Try
                            Try
                                changedmovie.year = gridrow.Cells("year").Value
                            Catch
                            End Try
                            Try
                                changedmovie.sortorder = gridrow.Cells("sorttitle").Value
                            Catch
                            End Try
                            Try
                                changedmovie.rating = gridrow.Cells("rating").Value
                            Catch
                            End Try
                            Try
                                changedmovie.outline = gridrow.Cells("outline").Value
                            Catch
                            End Try
                            Try
                                changedmovie.movieset = gridrow.Cells("set").Value
                            Catch
                            End Try

                            Try
                                If IsNumeric(gridrow.Cells("top250").Value) Then
                                    changed = True
                                End If
                                changedmovie.top250 = Convert.ToInt32(gridrow.Cells("top250").Value).ToString
                            Catch
                            End Try

                            Try
                                If gridrow.Cells("playcount").EditedFormattedValue = True Then
                                    If Convert.ToInt32(changedmovie.playcount) > 0 Then
                                    Else
                                        changedmovie.playcount = "1"
                                    End If
                                Else
                                    changedmovie.playcount = "0"
                                End If
                            Catch ex As Exception
                            End Try

                            Try
                                Dim runtime As String = gridrow.Cells("runtime").Value
                                runtime = runtime.Replace("min", "")
                                runtime = runtime.Trim(" ")
                                If IsNumeric(runtime) Then
                                    Dim temruntime As Integer = Convert.ToInt32(runtime)
                                    Dim tempstrin As String = temruntime.ToString & " min"
                                    If changedmovie.runtime <> tempstrin Then
                                        changedmovie.runtime = tempstrin
                                    End If
                                End If
                            Catch ex As Exception
                            End Try

                            changedmoviedetails.fullmoviebody.runtime = changedmovie.runtime
                            changedmoviedetails.filedetails.filedetails_video.duration = changedmovie.runtime.ToString

                            changedmoviedetails.fullmoviebody.title = changedmovie.title
                            changedmoviedetails.fullmoviebody.year = changedmovie.year
                            changedmoviedetails.fullmoviebody.playcount = changedmovie.playcount
                            changedmoviedetails.fullmoviebody.genre = changedmovie.genre
                            changedmoviedetails.fullmoviebody.outline = changedmovie.outline
                            changedmoviedetails.fullmoviebody.rating = changedmovie.rating
                            changedmoviedetails.fullmoviebody.movieset = changedmovie.movieset
                            changedmoviedetails.fullmoviebody.sortorder = changedmovie.sortorder
                            changedmoviedetails.fullmoviebody.top250 = changedmovie.top250

                            nfofunction.savemovienfo(changedmoviedetails.fileinfo.fullpathandfilename, changedmoviedetails, True)
                            changedmovie.titleandyear = changedmovie.title & " (" & changedmovie.year & ")"
                            fullmovielist.RemoveAt(f)
                            fullmovielist.Add(changedmovie)
                            Exit For
                        End If
                    End If
                End If
            Next
        Next gridrow

        Call savedata()
        Call loadinfofile()
        Call applyfilters()
        mess.Close()
        Application.DoEvents()
        Me.BringToFront()
    End Sub

    Private Sub Button97_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button97.Click
        Call savetablechanges()
        MsgBox("Changes Saved")
    End Sub

    Private Sub CheckBox32_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox32.CheckedChanged
        Try
            If CheckBox32.CheckState = CheckState.Checked Then
                Me.DataGridView1.Columns("missingdata1").Visible = True
                Call setuptextboxes()
            Else
                Me.DataGridView1.Columns("missingdata1").Visible = False
                Call setuptextboxes()
            End If
        Catch
        End Try
    End Sub

    Private Sub DataGridView1_ColumnDisplayIndexChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewColumnEventArgs) Handles DataGridView1.ColumnDisplayIndexChanged
        Call setuptextboxes()
    End Sub

    Private Sub DataGridView1_ColumnWidthChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewColumnEventArgs) Handles DataGridView1.ColumnWidthChanged
        Call setuptextboxes()
    End Sub

    Private Sub DataGridView1_MouseDown(ByVal sender As Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles DataGridView1.MouseDown
        If e.Button = Windows.Forms.MouseButtons.Right Then
            If DataGridView1.SelectedRows.Count < 2 Then
                Dim hti As DataGridView.HitTestInfo = sender.HitTest(e.X, e.Y)

                'If hti.Type = DataGridViewHitTestType.Cell Then

                '    If Not DataGridView1.Rows(hti.RowIndex).Selected Then

                ' User right clicked a row that is not selected, so throw away all other selections and select this row

                DataGridView1.ClearSelection()

                DataGridView1.Rows(hti.RowIndex).Selected = True
            End If
            'End If

            '    End If

        End If


    End Sub

    Private Sub DataGridView1_RowHeadersWidthChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles DataGridView1.RowHeadersWidthChanged
        Call setuptextboxes()
    End Sub

    Private Sub DataGridView1_SelectionChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles DataGridView1.SelectionChanged
        If DataGridView1.SelectedRows.Count > 1 Then
            txt_tabletitle.Visible = True
            txt_tabletop250.Visible = True
            txt_tableyear.Visible = True
            txt_tablesorttitle.Visible = True
            txt_tableruntime.Visible = True
            txt_tablerating.Visible = True
            txt_tableoutline.Visible = True
            txt_tablegenre.Visible = True
            cmbobx_tablesets.Visible = True
            Cmbobx_tablewatched.Visible = True
            Button98.Visible = True
            Button99.Visible = True
            Button100.Visible = True
            Label132.Visible = True
            Call setuptextboxes()
        Else
            Cmbobx_tablewatched.Visible = False
            txt_tabletitle.Visible = False
            txt_tabletop250.Visible = False
            txt_tableyear.Visible = False
            txt_tablesorttitle.Visible = False
            txt_tableruntime.Visible = False
            txt_tablerating.Visible = False
            txt_tableoutline.Visible = False
            txt_tablegenre.Visible = False
            cmbobx_tablesets.Visible = False
            Button98.Visible = False
            Button99.Visible = False
            Button100.Visible = False
            Label132.Visible = False
        End If
    End Sub

    Private Sub DataGridView1_Sorted(ByVal sender As Object, ByVal e As System.EventArgs) Handles DataGridView1.Sorted
        For Each tempRow As System.Windows.Forms.DataGridViewRow In Me.DataGridView1.Rows
            For Each tempCell As Windows.Forms.DataGridViewCell In tempRow.Cells
                If tempCell.Value = "Fanart" Or tempCell.Value = "Poster" Or tempCell.Value = "Poster & Fanart" Then
                    tempCell.Style.BackColor = Color.Red
                End If
            Next
        Next
    End Sub

    Private Sub MarkAllSelectedAsWatchedToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MarkAllSelectedAsWatchedToolStripMenuItem.Click
        For Each selecteditem In DataGridView1.SelectedRows
            selecteditem.Cells("playcount").Value = True
        Next
    End Sub

    Private Sub MarkAllSelectedAsUnWatchedToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MarkAllSelectedAsUnWatchedToolStripMenuItem.Click
        For Each selecteditem In DataGridView1.SelectedRows
            selecteditem.Cells("playcount").Value = False
        Next
    End Sub

    Private Sub setuptextboxes()
        If DataGridView1.SelectedRows.Count < 2 Then
            Exit Sub
        End If
        txt_tabletitle.Visible = False
        txt_tabletop250.Visible = False
        txt_tableyear.Visible = False
        txt_tablesorttitle.Visible = False
        txt_tableruntime.Visible = False
        txt_tablerating.Visible = False
        txt_tableoutline.Visible = False
        txt_tablegenre.Visible = False
        Cmbobx_tablewatched.Visible = False
        cmbobx_tablesets.Visible = False

        For Each column In DataGridView1.Columns
            Select Case column.visible
                Case True
                    Select Case column.headertext.tolower
                        Case "title"
                            txt_tabletitle.Width = column.width - 4
                            txt_tabletitle.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Title").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "title" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tabletitle.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "year"
                            txt_tableyear.Width = column.width - 4
                            txt_tableyear.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Year").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "year" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tableyear.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "top 250"
                            txt_tabletop250.Width = column.width - 4
                            txt_tabletop250.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("top250").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "top 250" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tabletop250.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "outline"
                            txt_tableoutline.Width = column.width - 4
                            txt_tableoutline.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Outline").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "outline" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tableoutline.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "rating"
                            txt_tablerating.Width = column.width - 4
                            txt_tablerating.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Rating").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "rating" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tablerating.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "sort title"
                            txt_tablesorttitle.Width = column.width - 4
                            txt_tablesorttitle.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("sorttitle").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "sort title" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tablesorttitle.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "genre"
                            txt_tablegenre.Width = column.width - 4
                            txt_tablegenre.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Genre").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "genre" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tablegenre.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "runtime"
                            txt_tableruntime.Width = column.width - 4
                            txt_tableruntime.Visible = True
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Runtime").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "runtime" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            txt_tableruntime.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "watched"
                            Cmbobx_tablewatched.Visible = True
                            Cmbobx_tablewatched.Width = column.width - 4
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("playcount").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            Cmbobx_tablewatched.Location = New Point(locx + 2, DataGridView1.Height + 31)
                        Case "sets"
                            cmbobx_tablesets.Visible = True
                            cmbobx_tablesets.Width = column.width - 4
                            Dim locx As Integer = 0
                            For Each col In DataGridView1.Columns
                                Try
                                    If col.displayindex < DataGridView1.Columns("Set").DisplayIndex And col.visible = True Then
                                        locx = locx + col.width
                                        'Else
                                        '    If col.visible = True And col.headertext.tolower = "sets" Then Exit For
                                    End If
                                Catch
                                End Try
                            Next
                            locx = locx + DataGridView1.RowHeadersWidth
                            cmbobx_tablesets.Location = New Point(locx + 2, DataGridView1.Height + 31)
                    End Select
            End Select
        Next
    End Sub

    Private Sub GoToToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GoToToolStripMenuItem.Click
        Dim tempstring As String = ""
        For Each selecteditem In DataGridView1.SelectedRows
            tempstring = selecteditem.Cells("fullpathandfilename").Value
        Next
        For f = 0 To ComboBox1.Items.Count - 1
            If CType(ComboBox1.Items(f), ValueDescriptionPair).Value = tempstring Then
                ComboBox1.SelectedItems.Clear()
                ComboBox1.SelectedIndex = f
                Application.DoEvents()
                m_CurrentTabIndex = 0
                Me.TabControl2.SelectedIndex = 0
                Exit For
            End If
        Next
    End Sub

    Private Sub Button98_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button98.Click
        Call updatetable()
    End Sub

    Private Sub Button99_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button99.Click
        Call updatetable()
    End Sub

    Private Sub updatetable()
        For Each row In DataGridView1.SelectedRows
            If txt_tabletitle.Text <> "" And txt_tabletitle.Visible = True Then
                row.cells("title").value = txt_tabletitle.Text
            End If
            If txt_tabletop250.Text <> "" And txt_tabletop250.Visible = True Then
                row.cells("top250").value = txt_tabletop250.Text
            End If
            If txt_tableyear.Text <> "" And txt_tableyear.Visible = True Then
                row.cells("year").value = txt_tableyear.Text
            End If
            If txt_tablesorttitle.Text <> "" And txt_tablesorttitle.Visible = True Then
                row.cells("sorttitle") = txt_tablesorttitle.Text
            End If
            If txt_tableruntime.Text <> "" And txt_tableruntime.Visible = True Then
                row.cells("runtime").value = txt_tableruntime.Text
            End If
            If txt_tablerating.Text <> "" And txt_tablerating.Visible = True Then
                row.cells("rating").value = txt_tablerating.Text
            End If
            If txt_tableoutline.Text <> "" And txt_tableoutline.Visible = True Then
                row.cells("outline").value = txt_tableoutline.Text
            End If
            If txt_tablegenre.Text <> "" And txt_tablegenre.Visible = True Then
                row.cells("genre").value = txt_tablegenre.Text
            End If

            If Cmbobx_tablewatched.SelectedIndex <> 0 And Cmbobx_tablewatched.Visible = True Then
                If Cmbobx_tablewatched.SelectedIndex = 1 Then
                    row.cells("playcount").value = True
                ElseIf Cmbobx_tablewatched.SelectedIndex = 2 Then
                    row.cells("playcount").value = False
                End If
            End If
            If cmbobx_tablesets.SelectedItem <> "UnChanged" And cmbobx_tablesets.Visible = True Then
                row.cells("set").value = cmbobx_tablesets.SelectedItem
            End If
        Next
    End Sub

    Private Sub Button100_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button100.Click
        Call updatetable()
    End Sub

    Private Sub GoToSelectedMoviePosterSelectorToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GoToSelectedMoviePosterSelectorToolStripMenuItem.Click
        Dim tempstring As String = ""
        For Each selecteditem In DataGridView1.SelectedRows
            tempstring = selecteditem.Cells("fullpathandfilename").Value
        Next
        For f = 0 To ComboBox1.Items.Count - 1
            If CType(ComboBox1.Items(f), ValueDescriptionPair).Value = tempstring Then
                ComboBox1.SelectedItems.Clear()
                ComboBox1.SelectedIndex = f
                For Each tabs In TabControl2.TabPages
                    If tabs.text = "Posters" Then
                        m_CurrentTabIndex = tabs.tabindex + 1
                        Me.TabControl2.SelectedIndex = tabs.tabindex + 1
                        Exit For
                    End If
                Next
                Exit For
            End If
        Next
    End Sub

    Private Sub GoToSelectedMovieFanartSelectorToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles GoToSelectedMovieFanartSelectorToolStripMenuItem.Click
        Dim tempstring As String = ""
        For Each selecteditem In DataGridView1.SelectedRows
            tempstring = selecteditem.Cells("fullpathandfilename").Value
        Next
        For f = 0 To ComboBox1.Items.Count - 1
            If CType(ComboBox1.Items(f), ValueDescriptionPair).Value = tempstring Then
                ComboBox1.SelectedItems.Clear()
                ComboBox1.SelectedIndex = f
                For Each tabs In TabControl2.TabPages
                    If tabs.text = "Fanart" Then
                        m_CurrentTabIndex = tabs.tabindex + 1
                        Me.TabControl2.SelectedIndex = tabs.tabindex + 1
                        Exit For
                    End If
                Next
                Exit For
            End If
        Next
    End Sub

    Private Sub SearchForNewEpisodesToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SearchForNewEpisodesToolStripMenuItem.Click
        'If Not bckgroundscanepisodes.IsBusy Then
        '    'ToolStripButton10.Visible = True
        '    TabPage15.Text = "Cancel Episode Search"
        '    TabPage15.ToolTipText = "This cancels the episode search" & vbCrLf & "and episode scraper thread"
        '    showstoscrapelist.Clear()
        '    For Each item In basictvlist
        '        If (item.fullpath.ToLower.IndexOf("tvshow.nfo") <> -1) And (item.locked = 0) Then
        '            showstoscrapelist.Add(item.fullpath)
        '        End If
        '    Next
        '    bckgroundscanepisodes.RunWorkerAsync()
        'Else
        '    MsgBox("This TV Scraper is already running")
        'End If
        Call startsearchforepisodes()
    End Sub

    Private Sub scrapespecific(ByVal field As String)
        Try
            Dim originalworking As String = workingmoviedetails.fileinfo.fullpathandfilename
            Dim list As New List(Of String)
            For Each selected In ComboBox1.SelectedItems
                list.Add(selected.value)
            Next

            Dim mes As String = "Rescraping " & field & " for selected movies"

            Dim messbox As New message_box("Please Wait", "", mes)
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()

            For Each ite In list
                Dim process As Boolean = True
                For Each movie In filteredlist
                    If movie.fullpathandfilename = ite Then
                        If IO.File.Exists(movie.fullpathandfilename) Then
                            If workingmovie.fullpathandfilename <> movie.fullpathandfilename Then
                                workingmovie.filedate = movie.filedate
                                workingmovie.filename = movie.foldername
                                workingmovie.foldername = movie.foldername
                                workingmovie.fullpathandfilename = movie.fullpathandfilename
                                workingmovie.genre = movie.genre
                                workingmovie.id = movie.id
                                workingmovie.playcount = movie.playcount
                                workingmovie.rating = movie.rating
                                workingmovie.title = movie.title
                                workingmovie.titleandyear = movie.titleandyear
                                workingmovie.top250 = movie.top250
                                workingmovie.year = movie.year
                                Call loadinfofile()
                            End If
                            Exit For
                        Else
                            process = False
                        End If
                    End If
                Next
                If process = True Then
                    Dim newnfo As Boolean = False
                    If field <> "hdtags" And field <> "poster" And field <> "backdrop" And field <> "runtime_file" And field <> "actors" Then
                        '                    Dim scraper As New imdb.Classimdbscraper
                        Dim scraper As New Classimdb


                        Dim body As String
                        body = scraper.getimdbbody(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year, workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)
                        'Dim newscraper As New Classimdb
                        'body = newscraper.getimdbbody(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year, workingmoviedetails.fullmoviebody.imdbid, userprefs.imdbmirror)
                        If body <> "MIC" Then
                            If field = "title" Then
                                workingmoviedetails.alternativetitles.Clear()
                            End If
                            Dim thumbstring As New XmlDocument
                            Dim thisresult As XmlNode = Nothing
                            thumbstring.LoadXml(body)
                            Dim certificates As New List(Of String)

                            For Each thisresult In thumbstring("movie")
                                Select Case thisresult.Name
                                    Case "title"
                                        If field = "title" Then
                                            If userprefs.keepfoldername = False Then
                                                workingmoviedetails.fullmoviebody.title = thisresult.InnerText
                                            Else
                                                If userprefs.usefoldernames = False Then
                                                    Dim tempstring
                                                    tempstring = IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename)
                                                    workingmoviedetails.fullmoviebody.title = filefunction.cleanfilename(tempstring)
                                                Else
                                                    workingmoviedetails.fullmoviebody.title = filefunction.cleanfilename(workingmoviedetails.fileinfo.foldername)
                                                End If
                                            End If
                                        End If
                                    Case "alternativetitle"
                                        If field = "title" Then
                                            workingmoviedetails.alternativetitles.Add(thisresult.InnerText)
                                        End If
                                    Case "credits"
                                        If field = "credits" Then
                                            workingmoviedetails.fullmoviebody.credits = thisresult.InnerText
                                        End If
                                    Case "director"
                                        If field = "director" Then
                                            workingmoviedetails.fullmoviebody.director = thisresult.InnerText
                                        End If
                                    Case "genre"
                                        If field = "genre" Then
                                            Dim strarr() As String
                                            strarr = thisresult.InnerText.Split("/")
                                            For count = 0 To strarr.Length - 1
                                                strarr(count) = strarr(count).Replace(" ", "")
                                            Next
                                            If strarr.Length <= userprefs.maxmoviegenre Then
                                                workingmoviedetails.fullmoviebody.genre = thisresult.InnerText
                                            Else
                                                For f = 0 To userprefs.maxmoviegenre - 1
                                                    If f = 0 Then
                                                        workingmoviedetails.fullmoviebody.genre = strarr(f)
                                                    Else
                                                        workingmoviedetails.fullmoviebody.genre += " / " & strarr(f)
                                                    End If
                                                Next
                                            End If
                                        End If
                                    Case "mpaa"
                                        If field = "cert" Then
                                            workingmoviedetails.fullmoviebody.mpaa = thisresult.InnerText
                                        End If
                                    Case "outline"
                                        If field = "outline" Then
                                            workingmoviedetails.fullmoviebody.outline = thisresult.InnerText
                                        End If
                                    Case "plot"
                                        If field = "plot" Then
                                            workingmoviedetails.fullmoviebody.plot = thisresult.InnerText
                                        End If
                                    Case "rating"
                                        If field = "rating" Then
                                            workingmoviedetails.fullmoviebody.rating = thisresult.InnerText
                                        End If
                                    Case "runtime"
                                        If field = "runtime_imdb" Then
                                            workingmoviedetails.fullmoviebody.runtime = thisresult.InnerText
                                        End If
                                    Case "studio"
                                        If field = "studio" Then
                                            workingmoviedetails.fullmoviebody.studio = thisresult.InnerText
                                        End If
                                    Case "tagline"
                                        If field = "tagline" Then
                                            workingmoviedetails.fullmoviebody.tagline = thisresult.InnerText
                                        End If
                                    Case "votes"
                                        If field = "votes" Then
                                            workingmoviedetails.fullmoviebody.votes = thisresult.InnerText
                                        End If
                                    Case "year"
                                        workingmoviedetails.fullmoviebody.year = thisresult.InnerText
                                    Case "cert"
                                        If field = "cert" Then
                                            certificates.Add(thisresult.InnerText)
                                        End If
                                End Select
                            Next

                            If field = "cert" Then
                                Dim done As Boolean = False
                                For f = 0 To UBound(userprefs.certificatepriority)
                                    Try
                                        For Each cert In certificates
                                            If cert.IndexOf(userprefs.certificatepriority(f)) <> -1 Then
                                                workingmoviedetails.fullmoviebody.mpaa = cert.Substring(cert.IndexOf("|") + 1, cert.Length - cert.IndexOf("|") - 1)
                                                done = True
                                                Exit For
                                            End If
                                        Next
                                    Catch
                                    End Try
                                    If done = True Then Exit For
                                Next
                            End If
                        End If
                        nfofunction.savemovienfo(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails, True)
                        newnfo = True
                        'Call loadinfofile()
                    ElseIf field = "hdtags" Or field = "runtime_file" Then
                        Try
                            Dim tempstring As String
                            Dim tempint As Integer
                            Dim tempname As String = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                            Dim newfiledetails As New FullFileDetails
                            If tempname <> Nothing Then newfiledetails = filefunction.get_hdtags(tempname)
                            If newfiledetails.filedetails_video.duration <> Nothing Then
                                Try
                                    '1h 24mn 48s 546ms
                                    Dim hours As Integer
                                    Dim minutes As Integer
                                    tempstring = newfiledetails.filedetails_video.duration
                                    tempint = tempstring.IndexOf("h")
                                    If tempint <> -1 Then
                                        hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                        tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                        tempstring = Trim(tempstring)
                                    End If
                                    tempint = tempstring.IndexOf("mn")
                                    If tempint <> -1 Then
                                        minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                                    End If
                                    If hours <> 0 Then
                                        hours = hours * 60
                                    End If
                                    minutes = minutes + hours
                                    If minutes = 0 Then
                                        If tempstring.IndexOf("min") <> -1 Then
                                            tempstring = tempstring.Replace("min", "")
                                            tempstring = tempstring.Replace(" ", "")
                                            If IsNumeric(tempstring) Then
                                                minutes = Convert.ToInt32(tempstring)
                                            End If
                                        End If
                                    End If
                                    If minutes = 0 Then
                                        If tempstring.IndexOf("min") <> -1 Then
                                            tempstring = tempstring.Replace("min", "")
                                            tempstring = tempstring.Replace(" ", "")
                                            If IsNumeric(tempstring) Then
                                                minutes = Convert.ToInt32(tempstring)
                                            End If
                                        End If
                                    End If
                                    If minutes <> 0 And field = "runtime_file" Then
                                        workingmoviedetails.fullmoviebody.runtime = minutes.ToString & " min"
                                    End If
                                    If field = "hdtags" Then
                                        workingmoviedetails.filedetails = newfiledetails
                                    End If
                                Catch
                                End Try
                            End If
                        Catch
                        End Try
                        nfofunction.savemovienfo(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails, True)
                        newnfo = True
                        'Call loadinfofile()
                    ElseIf field = "actors" Then
                        Dim actorlist As String
                        '                    Dim scraper As New imdb.Classimdbscraper
                        Dim scraper As New Classimdb
                        actorlist = scraper.getimdbactors(userprefs.imdbmirror, workingmoviedetails.fullmoviebody.imdbid, workingmoviedetails.fullmoviebody.title, userprefs.maxactors)
                        workingmoviedetails.listactors.Clear()
                        If actorlist <> Nothing Then
                            Dim tempstring As String
                            Dim thumbstring As New XmlDocument
                            Dim thisresult As XmlNode = Nothing
                            Try
                                thumbstring.LoadXml(actorlist)
                                thisresult = Nothing
                                For Each thisresult In thumbstring("actorlist")
                                    Select Case thisresult.Name
                                        Case "actor"
                                            Dim newactor As New MovieActors
                                            Dim detail As XmlNode = Nothing
                                            For Each detail In thisresult.ChildNodes
                                                Select Case detail.Name
                                                    Case "name"
                                                        newactor.actorname = detail.InnerText
                                                    Case "role"
                                                        newactor.actorrole = detail.InnerText
                                                    Case "thumb"
                                                        newactor.actorthumb = detail.InnerText
                                                    Case "actorid"
                                                        If newactor.actorthumb <> Nothing Then
                                                            If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                                Dim workingpath As String = workingmoviedetails.fileinfo.fullpathandfilename.Replace(IO.Path.GetFileName(workingmoviedetails.fileinfo.fullpathandfilename), "")
                                                                workingpath = workingpath & ".actors\"
                                                                Dim hg As New IO.DirectoryInfo(workingpath)
                                                                Dim destsorted As Boolean = False
                                                                If Not hg.Exists Then
                                                                    Try
                                                                        IO.Directory.CreateDirectory(workingpath)
                                                                        destsorted = True
                                                                    Catch ex As Exception

                                                                    End Try
                                                                Else
                                                                    destsorted = True
                                                                End If
                                                                If destsorted = True Then
                                                                    Try
                                                                        Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                                        filename = filename & ".tbn"
                                                                        filename = IO.Path.Combine(workingpath, filename)
                                                                        If Not IO.File.Exists(filename) Then
                                                                            Dim buffer(4000000) As Byte
                                                                            Dim size As Integer = 0
                                                                            Dim bytesRead As Integer = 0
                                                                            Dim thumburl As String = newactor.actorthumb
                                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                                            Dim contents As Stream = res.GetResponseStream()
                                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                            While bytesToRead > 0
                                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                                If size = 0 Then Exit While
                                                                                bytesToRead -= size
                                                                                bytesRead += size
                                                                            End While

                                                                            Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                            fstrm.Write(buffer, 0, bytesRead)
                                                                            contents.Close()
                                                                            fstrm.Close()
                                                                        End If
                                                                    Catch
                                                                    End Try
                                                                End If
                                                            End If
                                                            If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                                Dim workingpath As String = ""
                                                                Dim networkpath As String = Form1.userprefs.actorsavepath
                                                                Try
                                                                    tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                    Dim hg As New IO.DirectoryInfo(tempstring)
                                                                    If Not hg.Exists Then
                                                                        IO.Directory.CreateDirectory(tempstring)
                                                                    End If
                                                                    workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                    If Not IO.File.Exists(workingpath) Then
                                                                        Dim buffer(4000000) As Byte
                                                                        Dim size As Integer = 0
                                                                        Dim bytesRead As Integer = 0
                                                                        Dim thumburl As String = newactor.actorthumb
                                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                                        Dim contents As Stream = res.GetResponseStream()
                                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                        While bytesToRead > 0
                                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                            If size = 0 Then Exit While
                                                                            bytesToRead -= size
                                                                            bytesRead += size
                                                                        End While

                                                                        Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                        fstrm.Write(buffer, 0, bytesRead)
                                                                        contents.Close()
                                                                        fstrm.Close()
                                                                    End If
                                                                    newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText & ".jpg")
                                                                Catch
                                                                End Try
                                                            End If
                                                        End If
                                                End Select
                                            Next
                                            workingmoviedetails.listactors.Add(newactor)
                                            Dim actornew As New ActorDatabase
                                            actornew.actorname = newactor.actorname
                                            actornew.movieid = workingmoviedetails.fullmoviebody.imdbid
                                            actordb.Add(actornew)
                                    End Select
                                Next
                            Catch
                            End Try
                            nfofunction.savemovienfo(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails, True)
                            newnfo = True
                            'Call loadinfofile()
                        End If






                    End If
                    If newnfo = True Then
                        For f = 0 To fullmovielist.Count - 1
                            If fullmovielist(f).fullpathandfilename = workingmoviedetails.fileinfo.fullpathandfilename Then

                                Dim newfullmovie As ComboList
                                newfullmovie = fullmovielist(f)
                                '-------------- Aqui
                                If userprefs.ignorearticle = True Then
                                    If workingmoviedetails.fullmoviebody.title.ToLower.IndexOf("the ") = 0 Then
                                        newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title.Substring(4, workingmoviedetails.fullmoviebody.title.Length - 4) & ", The" & " (" & workingmoviedetails.fullmoviebody.year & ")"
                                    Else
                                        newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                                    End If
                                Else
                                    newfullmovie.titleandyear = workingmoviedetails.fullmoviebody.title & " (" & workingmoviedetails.fullmoviebody.year & ")"
                                End If
                                newfullmovie.genre = workingmoviedetails.fullmoviebody.genre
                                Dim filecreation2 As New FileInfo(workingmoviedetails.fileinfo.fullpathandfilename)
                                Dim myDate2 As Date = filecreation2.LastWriteTime
                                Try
                                    newfullmovie.filedate = Format(myDate2, "yyyyMMddHHmmss").ToString
                                Catch ex2 As Exception
                                End Try
                                If workingmoviedetails.fileinfo.createdate <> Nothing Then
                                    newfullmovie.createdate = workingmoviedetails.fileinfo.createdate
                                ElseIf workingmoviedetails.fileinfo.createdate <> "" Then
                                    newfullmovie.createdate = workingmoviedetails.fileinfo.createdate = workingmoviedetails.fileinfo.createdate
                                Else
                                    newfullmovie.createdate = newfullmovie.filedate
                                End If
                                newfullmovie.outline = workingmoviedetails.fullmoviebody.outline
                                newfullmovie.playcount = workingmoviedetails.fullmoviebody.playcount
                                newfullmovie.rating = workingmoviedetails.fullmoviebody.rating
                                newfullmovie.top250 = workingmoviedetails.fullmoviebody.top250
                                newfullmovie.runtime = workingmoviedetails.fullmoviebody.runtime
                                If workingmoviedetails.fullmoviebody.sortorder = Nothing Then
                                    workingmoviedetails.fullmoviebody.sortorder = newfullmovie.title
                                End If
                                If workingmoviedetails.fullmoviebody.sortorder = "" Then
                                    workingmoviedetails.fullmoviebody.sortorder = newfullmovie.title
                                End If
                                fullmovielist.RemoveAt(f)
                                fullmovielist.Add(newfullmovie)
                                Exit For
                            End If
                        Next
                    End If
                End If
            Next
            ApplyFilters()
            Call loadinfofile()
            messbox.Close()
        Catch
        Finally
            messbox.Close()
        End Try
    End Sub

    Private Sub ToolStripMenuItem3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem3.Click
        Call scrapespecific("title")
    End Sub
    Private Sub ToolStripMenuItem4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem4.Click
        Call scrapespecific("plot")
    End Sub
    Private Sub ToolStripMenuItem5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem5.Click
        Call scrapespecific("tagline")
    End Sub
    Private Sub ToolStripMenuItem6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem6.Click
        Call scrapespecific("director")
    End Sub
    Private Sub ToolStripMenuItem7_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem7.Click
        Call scrapespecific("credits")
    End Sub
    Private Sub ToolStripMenuItem8_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem8.Click
        Call scrapespecific("cert")
    End Sub
    Private Sub ToolStripMenuItem9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem9.Click
        Call scrapespecific("genre")
    End Sub
    Private Sub ToolStripMenuItem10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem10.Click
        Call scrapespecific("outline")
    End Sub
    Private Sub ToolStripMenuItem12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem12.Click
        Call scrapespecific("runtime_imdb")
    End Sub
    Private Sub ToolStripMenuItem13_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem13.Click
        Call scrapespecific("runtime_file")
    End Sub
    Private Sub ToolStripMenuItem14_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem14.Click
        Call scrapespecific("studio")
    End Sub
    Private Sub ToolStripMenuItem15_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem15.Click
        Call scrapespecific("actors")
    End Sub
    Private Sub ToolStripMenuItem16_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem16.Click
        Call scrapespecific("backdrop")
    End Sub
    Private Sub ToolStripMenuItem17_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem17.Click
        Call scrapespecific("poster")
    End Sub
    Private Sub ToolStripMenuItem18_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem18.Click
        Call scrapespecific("hdtags")
    End Sub
    Private Sub ToolStripMenuItem19_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem19.Click
        Call scrapespecific("rating")
    End Sub
    Private Sub ToolStripMenuItem20_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripMenuItem20.Click
        Call scrapespecific("votes")
    End Sub

    Private Sub PictureBox7_MouseEnter(ByVal sender As Object, ByVal e As System.EventArgs) Handles PictureBox7.MouseEnter
        RescrapePToolStripMenuItem.Visible = False
        RescrapePosterFromTMDBToolStripMenuItem.Visible = False
        RescraToolStripMenuItem.Visible = False
        PeToolStripMenuItem.Visible = False
        DownloadPosterToolStripMenuItem.Visible = False
        DownloadPosterFromTMDBToolStripMenuItem.Visible = False
        DownloadPosterFromMPDBToolStripMenuItem.Visible = False
        DownloadPosterFromIMDBToolStripMenuItem.Visible = False
        RescrapeFanartToolStripMenuItem.Visible = False
        DownloadFanartToolStripMenuItem.Visible = False
        Try
            If IO.File.Exists(filefunction.getfanartpath(workingmoviedetails.fileinfo.fullpathandfilename)) Then
                RescrapeFanartToolStripMenuItem.Visible = True
            Else
                DownloadFanartToolStripMenuItem.Visible = True
            End If
        Catch
            RescrapePToolStripMenuItem.Visible = False
            RescrapeFanartToolStripMenuItem.Visible = False
            DownloadFanartToolStripMenuItem.Visible = False
            DownloadPosterToolStripMenuItem.Visible = False
        End Try

    End Sub

    Private Sub moviethumb_MouseEnter(ByVal sender As Object, ByVal e As System.EventArgs) Handles moviethumb.MouseEnter
        RescrapePToolStripMenuItem.Visible = False
        RescrapePosterFromTMDBToolStripMenuItem.Visible = False
        RescraToolStripMenuItem.Visible = False
        PeToolStripMenuItem.Visible = False
        DownloadPosterToolStripMenuItem.Visible = False
        DownloadPosterFromTMDBToolStripMenuItem.Visible = False
        DownloadPosterFromMPDBToolStripMenuItem.Visible = False
        DownloadPosterFromIMDBToolStripMenuItem.Visible = False
        RescrapeFanartToolStripMenuItem.Visible = False
        DownloadFanartToolStripMenuItem.Visible = False
        Try
            If IO.File.Exists(filefunction.getposterpath(workingmoviedetails.fileinfo.fullpathandfilename)) Then
                RescrapePToolStripMenuItem.Visible = True
                RescrapePosterFromTMDBToolStripMenuItem.Visible = True
                RescraToolStripMenuItem.Visible = True
                PeToolStripMenuItem.Visible = True
            Else
                DownloadPosterToolStripMenuItem.Visible = True
                DownloadPosterFromTMDBToolStripMenuItem.Visible = True
                DownloadPosterFromMPDBToolStripMenuItem.Visible = True
                DownloadPosterFromIMDBToolStripMenuItem.Visible = True
            End If
        Catch
            RescrapePToolStripMenuItem.Visible = False
            RescrapePosterFromTMDBToolStripMenuItem.Visible = False
            RescraToolStripMenuItem.Visible = False
            PeToolStripMenuItem.Visible = False
            DownloadPosterToolStripMenuItem.Visible = False
            DownloadPosterFromTMDBToolStripMenuItem.Visible = False
            DownloadPosterFromMPDBToolStripMenuItem.Visible = False
            DownloadPosterFromIMDBToolStripMenuItem.Visible = False
            RescrapeFanartToolStripMenuItem.Visible = False
            DownloadFanartToolStripMenuItem.Visible = False
        End Try
    End Sub
    'rescrape fanart
    Private Sub RescrapeFanartToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RescrapeFanartToolStripMenuItem.Click
        'rescrape fanart
        Call getnewfanart()
    End Sub

    Private Sub DownloadFanartToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownloadFanartToolStripMenuItem.Click
        'download fanart
        Call getnewfanart()
    End Sub

    Private Sub getnewfanart()
        Dim messbox As New message_box("      Pleas Wait,", "", "Attempting to download Fanart")
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()
        Dim backpath As String = ""
        If Not workingmoviedetails Is Nothing Then
            If workingmoviedetails.fileinfo.fullpathandfilename <> Nothing Then
                If workingmoviedetails.fileinfo.fullpathandfilename <> "" Then
                    backpath = filefunction.getfanartpath(workingmoviedetails.fileinfo.fullpathandfilename)
                End If
            End If
        End If
        If backpath <> "" Then
            Dim moviethumburl As String
            Try
                Dim temp As String = workingmoviedetails.fullmoviebody.imdbid

                Dim fanarturl As String = "http://api.themoviedb.org/2.1/Movie.imdbLookup/en/xml/3f026194412846e530a208cf8a39e9cb/" & temp
                Dim apple2(2000) As String
                Dim fanartlinecount As Integer = 0
                Try
                    Dim wrGETURL As WebRequest
                    wrGETURL = WebRequest.Create(fanarturl)
                    Dim myProxy As New WebProxy("myproxy", 80)
                    myProxy.BypassProxyOnLocal = True
                    Dim objStream As Stream
                    objStream = wrGETURL.GetResponse.GetResponseStream()
                    Dim objReader As New StreamReader(objStream)
                    Dim sLine As String = ""
                    fanartlinecount = 0
                    Do While Not sLine Is Nothing
                        fanartlinecount += 1
                        sLine = objReader.ReadLine
                        apple2(fanartlinecount) = sLine
                    Loop
                    fanartlinecount -= 1
                    Dim fanartfound As Boolean = False
                    For g = 1 To fanartlinecount
                        If apple2(g).IndexOf("<image type=""backdrop""") <> -1 Then
                            If apple2(g).IndexOf("size=""original""") <> -1 Then
                                Dim StartofURL As Integer = apple2(g).IndexOf("url=""") + 5
                                Dim EndofURL As Integer = apple2(g).IndexOf("size=""original""") - 2
                                apple2(g) = apple2(g).Substring(StartofURL, (EndofURL - StartofURL))
                                apple2(g) = apple2(g).Trim
                                If apple2(g).ToLower.IndexOf("http") <> -1 And apple2(g).ToLower.IndexOf(".jpg") <> -1 Or apple2(g).IndexOf(".jpeg") <> -1 Or apple2(g).IndexOf(".png") <> -1 Then
                                    moviethumburl = apple2(g)
                                    fanartfound = True
                                End If
                            End If
                            Exit For
                        End If
                    Next
                    If fanartfound = False Then moviethumburl = ""
                Catch
                End Try

                If moviethumburl <> "" Then
                    Try
                        Dim buffer(4000000) As Byte
                        Dim size As Integer = 0
                        Dim bytesRead As Integer = 0

                        Dim thumburl As String = moviethumburl
                        Dim req As HttpWebRequest = req.Create(thumburl)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)
                        Dim bmp As New Bitmap(contents)



                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While



                        If Form1.userprefs.resizefanart = 1 Then
                            bmp.Save(backpath, Imaging.ImageFormat.Jpeg)
                            scraperlog = scraperlog & "Fanart not resized" & vbCrLf
                        ElseIf Form1.userprefs.resizefanart = 2 Then
                            If bmp.Width > 1280 Or bmp.Height > 720 Then
                                Dim bm_source As New Bitmap(bmp)
                                Dim bm_dest As New Bitmap(1280, 720)
                                Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                bm_dest.Save(backpath, Imaging.ImageFormat.Jpeg)
                                scraperlog = scraperlog & "Farart Resized to 1280x720" & vbCrLf
                            Else
                                scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                bmp.Save(backpath, Imaging.ImageFormat.Jpeg)
                            End If
                        ElseIf Form1.userprefs.resizefanart = 3 Then
                            If bmp.Width > 960 Or bmp.Height > 540 Then
                                Dim bm_source As New Bitmap(bmp)
                                Dim bm_dest As New Bitmap(960, 540)
                                Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                bm_dest.Save(backpath, Imaging.ImageFormat.Jpeg)
                                scraperlog = scraperlog & "Farart Resized to 960x540" & vbCrLf
                            Else
                                scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                bmp.Save(backpath, Imaging.ImageFormat.Jpeg)
                            End If

                        End If
                        If IO.File.Exists(backpath) Then
                            For Each paths In userprefs.offlinefolders
                                Dim offlinepath As String = paths & "\"
                                If workingmoviedetails.fileinfo.fanartpath.IndexOf(offlinepath) <> -1 Then
                                    Dim mediapath As String
                                    mediapath = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                                    Call offlinedvd(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails.fullmoviebody.title, mediapath)
                                End If
                            Next
                            Dim bitmap3 As New Bitmap(backpath)
                            Dim bmp4 As New Bitmap(bitmap3)
                            bitmap3.Dispose()
                            PictureBox7.Image = bmp4
                            PictureBox2.Image = bmp4
                        End If
                    Catch ex As Exception
                    End Try
                Else
                    MsgBox("No Fanart Found on TMDB")
                End If
            Catch
            End Try
        End If
        messbox.Close()
    End Sub
    'Rescrape Poster
    Private Sub RescrapePToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RescrapePToolStripMenuItem.Click
        'rescrape poster IMPA
        getnewposter("impa")
    End Sub

    Private Sub RescrapePosterFromTMDBToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RescrapePosterFromTMDBToolStripMenuItem.Click
        'rescrape poster tmdb
        getnewposter("tmdb")
    End Sub

    Private Sub RescraToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RescraToolStripMenuItem.Click
        'rescrape poster mpdb
        getnewposter("mpdb")
    End Sub

    Private Sub PeToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PeToolStripMenuItem.Click
        'rescrape poster imdb
        getnewposter("imdb")
    End Sub

    Private Sub DownloadPosterToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownloadPosterToolStripMenuItem.Click
        'downloadposter impa
        getnewposter("impa")
    End Sub

    Private Sub DownloadPosterFromTMDBToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownloadPosterFromTMDBToolStripMenuItem.Click
        'downloadposter tmdb
        getnewposter("tmdb")
    End Sub

    Private Sub DownloadPosterFromMPDBToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownloadPosterFromMPDBToolStripMenuItem.Click
        'downloadposter mpdb
        getnewposter("mpdb")
    End Sub

    Private Sub DownloadPosterFromIMDBToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownloadPosterFromIMDBToolStripMenuItem.Click
        'downloadposter imdb
        getnewposter("imdb")
    End Sub

    Private Sub getnewposter(ByVal source As String)
        Try
            Dim messbox As New message_box("          Pleas Wait,", "", "Attempting to download Poster from " & source.ToUpper)
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()
            Dim posterpath As String = ""
            If Not workingmoviedetails Is Nothing Then
                If workingmoviedetails.fileinfo.fullpathandfilename <> Nothing Then
                    If workingmoviedetails.fileinfo.fullpathandfilename <> "" Then
                        posterpath = filefunction.getposterpath(workingmoviedetails.fileinfo.fullpathandfilename)
                    End If
                End If
            End If

            If posterpath <> "" Then
                Dim moviethumburl As String = ""
                If source = "impa" Then
                    If workingmoviedetails.fullmoviebody.title <> "" And workingmoviedetails.fullmoviebody.year <> "" Then
                        moviethumburl = scraperfunction2.impathumb(workingmoviedetails.fullmoviebody.title, workingmoviedetails.fullmoviebody.year)
                    End If
                ElseIf source = "tmdb" Then
                    If workingmoviedetails.fullmoviebody.imdbid <> "" Then
                        moviethumburl = scraperfunction2.tmdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                    End If
                ElseIf source = "mpdb" Then
                    If workingmoviedetails.fullmoviebody.imdbid <> "" Then
                        moviethumburl = scraperfunction2.mpdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                    End If
                ElseIf source = "imdb" Then
                    If workingmoviedetails.fullmoviebody.imdbid <> "" Then
                        moviethumburl = scraperfunction2.imdbthumb(workingmoviedetails.fullmoviebody.imdbid)
                    End If
                End If

                If moviethumburl <> "" And moviethumburl <> "na" Then
                    Try
                        Dim buffer(4000000) As Byte
                        Dim size As Integer = 0
                        Dim bytesRead As Integer = 0
                        Dim thumburl As String = moviethumburl
                        Dim req As HttpWebRequest = req.Create(thumburl)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)
                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While
                        Dim fstrm As New FileStream(posterpath, FileMode.OpenOrCreate, FileAccess.Write)
                        fstrm.Write(buffer, 0, bytesRead)
                        contents.Close()
                        fstrm.Close()

                        Dim temppath As String = posterpath.Replace(System.IO.Path.GetFileName(posterpath), "folder.jpg")
                        If Form1.userprefs.createfolderjpg = True Then
                            If Form1.userprefs.overwritethumbs = True Or System.IO.File.Exists(temppath) = False Then
                                Dim fstrm2 As New FileStream(temppath, FileMode.OpenOrCreate, FileAccess.Write)
                                fstrm2.Write(buffer, 0, bytesRead)
                                contents.Close()
                                fstrm2.Close()
                            End If
                        End If
                    Catch ex As Exception

                    End Try
                    Dim bitmap3 As New Bitmap(posterpath)
                    Dim bmp4 As New Bitmap(bitmap3)
                    bitmap3.Dispose()
                    PictureBox3.Image = bmp4
                    moviethumb.Image = bmp4


                    Dim bitmap5 As New Bitmap(posterpath)
                    Dim bitmap6 As New Bitmap(bitmap5)
                    bitmap5.Dispose()
                    Dim bm_source As New Bitmap(bitmap6)
                    Dim bm_dest As New Bitmap(150, 200)
                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                    gr.DrawImage(bm_source, 0, 0, 150 - 1, 200 - 1)
                    Dim tempbitmap As Bitmap = bm_dest
                    Dim path As String = IO.Path.Combine(applicationpath, "settings\postercache\" & workingmoviedetails.fullmoviebody.imdbid & ".jpg")
                    tempbitmap.Save(path, Imaging.ImageFormat.Jpeg)
                    tempbitmap.Dispose()

                    For Each poster As PictureBox In TabPage22.Controls
                        If poster.Tag = workingmoviedetails.fileinfo.fullpathandfilename Then
                            poster.ImageLocation = IO.Path.Combine(applicationpath, "settings\postercache\" & workingmoviedetails.fullmoviebody.imdbid & ".jpg")
                            Exit For
                        End If
                    Next
                Else
                    MsgBox("Unable to obtain a Poster from " & source.ToUpper)
                End If
            End If
            messbox.Close()
        Catch
        Finally

        End Try

    End Sub

    Private Sub offlinedvd(ByVal nfopath As String, ByVal title As String, ByVal mediapath As String)
        Dim tempint2 As Integer = 2097152
        Dim SizeOfFile As Integer = FileLen(mediapath)
        If SizeOfFile > tempint2 Then
            Exit Sub
        End If
        Try
            Dim fanartpath As String = ""
            If IO.File.Exists(filefunction.getfanartpath(nfopath)) Then
                fanartpath = filefunction.getfanartpath(nfopath)
            Else
                fanartpath = defaultofflineart
            End If
            Dim curImage As Image = Image.FromFile(fanartpath)
            Dim tempstring As String = "Please Insert '" & title & "' DVD"

            Dim g As System.Drawing.Graphics

            g = Graphics.FromImage(curImage)
            Dim semiTransBrush As New SolidBrush(Color.FromArgb(80, 0, 0, 0))

            Dim drawString As String = tempstring

            Dim drawFont As New System.Drawing.Font("Arial", 40)
            Dim drawBrush As New SolidBrush(Color.White)

            Dim StringSize As New SizeF
            StringSize = g.MeasureString(drawString, drawFont)
            Dim width As Single = StringSize.Width + 5
            Dim height As Single = StringSize.Height + 5



            If height < (curImage.Height / 100) * 8 Then
                Do
                    Dim newsize As Integer = drawFont.Size + 1
                    drawFont = New System.Drawing.Font("Arial", newsize)
                    StringSize = g.MeasureString(drawString, drawFont)
                    height = StringSize.Height
                Loop Until height > (curImage.Height / 100) * 8
            End If
            If height > (curImage.Height / 100) * 8 Then
                Do
                    Dim newsize As Integer = drawFont.Size - 1
                    drawFont = New System.Drawing.Font("Arial", newsize)
                    StringSize = g.MeasureString(drawString, drawFont)
                    height = StringSize.Height
                Loop Until height < (curImage.Height / 100) * 8
            End If
            StringSize = g.MeasureString(drawString, drawFont)
            width = StringSize.Width
            height = StringSize.Height
            If width > curImage.Width - 30 Then
                Do
                    Dim newsize As Integer = drawFont.Size - 1
                    drawFont = New System.Drawing.Font("Arial", newsize)
                    StringSize = g.MeasureString(drawString, drawFont)
                    width = StringSize.Width + 20
                Loop Until width < curImage.Width - 30
            End If
            StringSize = g.MeasureString(drawString, drawFont)
            width = StringSize.Width + 5
            height = StringSize.Height + 5
            Dim x As Integer = (curImage.Width / 2) - (width / 2)
            Dim y As Integer = (curImage.Height - StringSize.Height) - ((curImage.Height / 100) * 2)
            Dim drawRect As New RectangleF(x, y, width, height)


            g.FillRectangle(semiTransBrush, New Rectangle(x, y, width, height))

            Dim drawFormat As New StringFormat
            drawFormat.Alignment = StringAlignment.Center

            g.DrawString(drawString, drawFont, drawBrush, drawRect, drawFormat)
            For f = 1 To 16
                Dim path As String
                If f < 10 Then
                    path = applicationpath & "\Settings\00" & f.ToString & ".jpg"
                Else
                    path = applicationpath & "\Settings\0" & f.ToString & ".jpg"
                End If
                curImage.Save(path, Drawing.Imaging.ImageFormat.Jpeg)
            Next
            Dim tempstring3 As String

            Dim myProcess As Process = New Process
            myProcess.StartInfo.WindowStyle = ProcessWindowStyle.Hidden
            myProcess.StartInfo.CreateNoWindow = False
            myProcess.StartInfo.FileName = applicationpath & "\ffmpeg.exe"
            Dim proc_arguments As String = "-r 1 -b 1800 -qmax 6 -i """ & applicationpath & "\Settings\%03d.jpg"" -vcodec msmpeg4v2 """ & mediapath & """"
            myProcess.StartInfo.Arguments = proc_arguments
            myProcess.Start()
            myProcess.WaitForExit()

            For f = 1 To 16
                Dim tempstring4 As String
                If f < 10 Then
                    tempstring4 = applicationpath & "\Settings\00" & f.ToString & ".jpg"
                Else
                    tempstring4 = applicationpath & "\Settings\0" & f.ToString & ".jpg"
                End If
                Try
                    IO.File.Delete(tempstring4)
                Catch ex As Exception

                End Try
            Next
        Catch
        End Try
    End Sub

    Private Sub Button102_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button102.Click
        'add offline movie folder browser
        Dim allok As Boolean = True
        Dim theFolderBrowser As New FolderBrowserDialog
        Dim thefoldernames As String
        theFolderBrowser.Description = "Please Select a Root Offline DVD Folder to Add to DB"
        theFolderBrowser.ShowNewFolderButton = True
        theFolderBrowser.RootFolder = System.Environment.SpecialFolder.Desktop
        theFolderBrowser.SelectedPath = Form1.userprefs.lastpath
        If theFolderBrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
            thefoldernames = (theFolderBrowser.SelectedPath)
            Form1.userprefs.lastpath = thefoldernames
            For Each item As Object In ListBox15.Items
                If thefoldernames.ToString = item.ToString Then allok = False
            Next

            If allok = True Then
                ListBox15.Items.Add(thefoldernames)
                ListBox15.Refresh()
            Else
                MsgBox("        Folder Already Exists")
            End If
        End If
    End Sub

    Private Sub Button101_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button101.Click
        'remove selected offline movie folders
        While ListBox15.SelectedItems.Count > 0
            ListBox15.Items.Remove(ListBox15.SelectedItems(0))
        End While

    End Sub

    Private Sub CheckBox33_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox33.CheckedChanged
        If CheckBox33.Checked = True Then
            userprefs.actorseasy = True
        Else
            userprefs.actorseasy = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox34_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox34.CheckedChanged
        If CheckBox34.Checked = True Then
            userprefs.copytvactorthumbs = True
        Else
            userprefs.copytvactorthumbs = False
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub Button103_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button103.Click
        If SplitContainer4.Orientation = Orientation.Horizontal Then
            SplitContainer4.Orientation = Orientation.Vertical
        Else
            SplitContainer4.Orientation = Orientation.Horizontal
        End If
    End Sub

    Private Sub DownloadAvaileableMissingArtForShowToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles DownloadAvaileableMissingArtForShowToolStripMenuItem.Click
        Dim messbox As New message_box("Attempting to download art", "", "       Please Wait")
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()
        Try
            templanguage = userprefs.tvdblanguagecode
            'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
            Dim tvdbstuff As New TVDBScraper
            Dim showlist As New XmlDocument
            Dim thumblist As String = tvdbstuff.getposterlist(workingtvshow.tvdbid)
            showlist.LoadXml(thumblist)
            Dim thisresult As XmlNode = Nothing
            Dim artlist As New List(Of tvbanners)
            artlist.Clear()
            For Each thisresult In showlist("banners")
                Select Case thisresult.Name
                    Case "banner"
                        Dim individualposter As New tvbanners
                        For Each results In thisresult.ChildNodes
                            Select Case results.Name
                                Case "url"
                                    individualposter.url = results.InnerText
                                Case "bannertype"
                                    individualposter.bannertype = results.InnerText
                                Case "resolution"
                                    individualposter.resolution = results.InnerText
                                Case "language"
                                    individualposter.language = results.InnerText
                                Case "season"
                                    individualposter.season = results.InnerText
                            End Select
                        Next
                        artlist.Add(individualposter)
                End Select
            Next
            If artlist.Count = 0 Then
                Exit Sub
            End If
            For f = 0 To 1000
                Dim seasonposter As String = ""
                For Each Image In artlist
                    If Image.season = f.ToString And Image.language = templanguage Then
                        seasonposter = Image.url
                        Exit For
                    End If
                Next
                If seasonposter = "" Then
                    For Each Image In artlist
                        If Image.season = f.ToString And Image.language = "en" Then
                            seasonposter = Image.url
                            Exit For
                        End If
                    Next
                End If
                If seasonposter = "" Then
                    For Each Image In artlist
                        If Image.season = f.ToString Then
                            seasonposter = Image.url
                            Exit For
                        End If
                    Next
                End If
                Dim tempstring As String = ""
                If seasonposter <> "" Then
                    If f < 10 Then
                        tempstring = "0" & f.ToString
                    Else
                        tempstring = f.ToString
                    End If
                    Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season" & tempstring & ".tbn")
                    If tempstring = "00" Then
                        seasonpath = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season-specials.tbn")
                    End If
                    If Not IO.File.Exists(seasonpath) Then
                        Try
                            Dim buffer(4000000) As Byte
                            Dim size As Integer = 0
                            Dim bytesRead As Integer = 0
                            Dim thumburl As String = seasonposter
                            Dim req As HttpWebRequest = req.Create(thumburl)
                            Dim res As HttpWebResponse = req.GetResponse()
                            Dim contents As Stream = res.GetResponseStream()
                            Dim bytesToRead As Integer = CInt(buffer.Length)
                            While bytesToRead > 0
                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                If size = 0 Then Exit While
                                bytesToRead -= size
                                bytesRead += size
                            End While
                            Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                            fstrm.Write(buffer, 0, bytesRead)
                            contents.Close()
                            fstrm.Close()
                        Catch ex As WebException

                        End Try
                    End If
                End If
            Next
            Dim fanartposter As String
            fanartposter = ""
            For Each Image In artlist
                If Image.language = templanguage And Image.bannertype = "fanart" Then
                    fanartposter = Image.url
                    Exit For
                End If
            Next
            If fanartposter = "" Then
                For Each Image In artlist
                    If Image.language = "en" And Image.bannertype = "fanart" Then
                        fanartposter = Image.url
                        Exit For
                    End If
                Next
            End If
            If fanartposter = "" Then
                For Each Image In artlist
                    If Image.bannertype = "fanart" Then
                        fanartposter = Image.url
                        Exit For
                    End If
                Next
            End If
            If fanartposter <> "" Then

                Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "fanart.jpg")
                If Not IO.File.Exists(seasonpath) Then
                    Try
                        Dim buffer(4000000) As Byte
                        Dim size As Integer = 0
                        Dim bytesRead As Integer = 0

                        Dim thumburl As String = fanartposter
                        Dim req As HttpWebRequest = req.Create(thumburl)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)
                        Dim bmp As New Bitmap(contents)



                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While


                        Try
                            If Form1.userprefs.resizefanart = 1 Then
                                bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                scraperlog = scraperlog & "Fanart not resized" & vbCrLf
                            ElseIf userprefs.resizefanart = 2 Then
                                If bmp.Width > 1280 Or bmp.Height > 720 Then
                                    Dim bm_source As New Bitmap(bmp)
                                    Dim bm_dest As New Bitmap(1280, 720)
                                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                    gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                    bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                    scraperlog = scraperlog & "Farart Resized to 1280x720" & vbCrLf
                                Else
                                    scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                    bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                End If
                            ElseIf userprefs.resizefanart = 3 Then
                                If bmp.Width > 960 Or bmp.Height > 540 Then
                                    Dim bm_source As New Bitmap(bmp)
                                    Dim bm_dest As New Bitmap(960, 540)
                                    Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                    gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                    gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                    bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                    scraperlog = scraperlog & "Farart Resized to 960x540" & vbCrLf
                                Else
                                    scraperlog = scraperlog & "Fanart not resized, already =< required size" & vbCrLf
                                    bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                End If

                            End If
                        Catch
                        End Try
                    Catch ex As WebException

                    End Try
                End If
            End If

            Dim seasonallpath As String = ""
            Dim posterurlpath As String = ""
            Dim posterurl As String = ""
            If userprefs.postertype = "poster" Then 'poster
                For Each Image In artlist
                    If Image.language = templanguage And Image.bannertype = "poster" Then
                        posterurl = Image.url
                        Exit For
                    End If
                Next
                If posterurlpath = "" Then
                    For Each Image In artlist
                        If Image.language = "en" And Image.bannertype = "poster" Then
                            posterurlpath = Image.url
                            Exit For
                        End If
                    Next
                End If
                If posterurlpath = "" Then
                    For Each Image In artlist
                        If Image.bannertype = "poster" Then
                            posterurlpath = Image.url
                            Exit For
                        End If
                    Next
                End If
                If posterurlpath <> "" And userprefs.seasonall <> "none" Then
                    seasonallpath = posterurlpath
                End If
            ElseIf userprefs.postertype = "banner" Then 'banner
                For Each Image In artlist
                    If Image.language = templanguage And Image.bannertype = "series" And Image.season = Nothing Then
                        posterurl = Image.url
                        Exit For
                    End If
                Next
                If posterurlpath = "" Then
                    For Each Image In artlist
                        If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                            posterurlpath = Image.url
                            Exit For
                        End If
                    Next
                End If
                If posterurlpath = "" Then
                    For Each Image In artlist
                        If Image.bannertype = "series" And Image.season = Nothing Then
                            posterurlpath = Image.url
                            Exit For
                        End If
                    Next
                End If
                If posterurlpath <> "" And RadioButton16.Checked = True Then
                    seasonallpath = posterurlpath
                End If
            End If

            If posterurlpath <> "" Then

                Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "folder.jpg")
                If Not IO.File.Exists(seasonpath) Then
                    Try
                        Dim buffer(4000000) As Byte
                        Dim size As Integer = 0
                        Dim bytesRead As Integer = 0
                        Dim thumburl As String = posterurlpath
                        Dim req As HttpWebRequest = req.Create(thumburl)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)
                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While
                        Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                        fstrm.Write(buffer, 0, bytesRead)
                        contents.Close()
                        fstrm.Close()
                    Catch ex As WebException
                        'MsgBox("Error Downloading main poster from TVDB")
                    End Try
                End If
            End If



            If userprefs.seasonall <> "none" And seasonallpath = "" Then
                If userprefs.seasonall = "poster" Then 'poster
                    For Each Image In artlist
                        If Image.language = templanguage And Image.bannertype = "poster" Then
                            seasonallpath = Image.url
                            Exit For
                        End If
                    Next
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.language = "en" And Image.bannertype = "poster" Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.bannertype = "poster" Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                ElseIf userprefs.seasonall = "wide" = True Then 'banner
                    For Each Image In artlist
                        If Image.language = templanguage And Image.bannertype = "series" And Image.season = Nothing Then
                            seasonallpath = Image.url
                            Exit For
                        End If
                    Next
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                    If seasonallpath = "" Then
                        For Each Image In artlist
                            If Image.bannertype = "series" And Image.season = Nothing Then
                                seasonallpath = Image.url
                                Exit For
                            End If
                        Next
                    End If
                End If

                If seasonallpath <> "" Then

                    Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season-all.tbn")
                    If Not IO.File.Exists(seasonpath) Or CheckBox6.CheckState = CheckState.Checked Then
                        Try
                            Dim buffer(4000000) As Byte
                            Dim size As Integer = 0
                            Dim bytesRead As Integer = 0
                            Dim thumburl As String = seasonallpath
                            Dim req As HttpWebRequest = req.Create(thumburl)
                            Dim res As HttpWebResponse = req.GetResponse()
                            Dim contents As Stream = res.GetResponseStream()
                            Dim bytesToRead As Integer = CInt(buffer.Length)
                            While bytesToRead > 0
                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                If size = 0 Then Exit While
                                bytesToRead -= size
                                bytesRead += size
                            End While
                            Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                            fstrm.Write(buffer, 0, bytesRead)
                            contents.Close()
                            fstrm.Close()
                        Catch ex As WebException
                            'MsgBox("Error Downloading main poster from TVDB")
                        End Try
                    End If
                End If
            ElseIf userprefs.seasonall <> "none" And seasonallpath <> "" Then
                Dim seasonpath As String = workingtvshow.path.Replace(IO.Path.GetFileName(workingtvshow.path), "season-all.tbn")
                If Not IO.File.Exists(seasonpath) Then
                    Try
                        Dim buffer(4000000) As Byte
                        Dim size As Integer = 0
                        Dim bytesRead As Integer = 0
                        Dim thumburl As String = seasonallpath
                        Dim req As HttpWebRequest = req.Create(thumburl)
                        Dim res As HttpWebResponse = req.GetResponse()
                        Dim contents As Stream = res.GetResponseStream()
                        Dim bytesToRead As Integer = CInt(buffer.Length)
                        While bytesToRead > 0
                            size = contents.Read(buffer, bytesRead, bytesToRead)
                            If size = 0 Then Exit While
                            bytesToRead -= size
                            bytesRead += size
                        End While
                        Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                        fstrm.Write(buffer, 0, bytesRead)
                        contents.Close()
                        fstrm.Close()
                    Catch ex As WebException
                        'MsgBox("Error Downloading main poster from TVDB")
                    End Try
                End If
            End If
        Catch
        End Try
        Call loadtvshow(TreeView1.SelectedNode.Name)
        messbox.Close()
    End Sub

    Private Sub CheckBox35_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox35.CheckedChanged
        If CheckBox35.CheckState = CheckState.Checked Then
            userprefs.tvshowautoquick = True
        Else
            userprefs.tvshowautoquick = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox36_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox36.CheckedChanged
        If CheckBox36.CheckState = CheckState.Checked Then
            userprefs.autoepisodescreenshot = True
        Else
            userprefs.autoepisodescreenshot = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub CheckBox37_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox37.CheckedChanged
        If CheckBox37.CheckState = CheckState.Checked Then
            userprefs.autorenameepisodes = True
        Else
            userprefs.autorenameepisodes = False
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Sub Button104_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button104.Click
        Try
            messbox = New message_box("Please wait,", "", "Downloading Fanart")
            System.Windows.Forms.Cursor.Current = Cursors.WaitCursor
            messbox.Show()
            Me.Refresh()
            messbox.Refresh()
            Me.Refresh()
            Application.DoEvents()

            Dim tempstring As String
            Dim tempint As Integer
            Dim tempstring2 As String
            Dim allok As Boolean = False
            For Each button As Control In Me.Panel2.Controls
                If button.Name.IndexOf("checkbox") <> -1 Then
                    Dim b1 As RadioButton = CType(button, RadioButton)
                    If b1.Checked = True Then
                        tempstring = b1.Name
                        tempstring = tempstring.Replace("moviefanartcheckbox", "")
                        tempint = Convert.ToDecimal(tempstring)
                        tempstring2 = fanartarray(tempint).ldposter
                        allok = True
                        Exit For
                    End If
                End If
            Next
            If allok = False Then
                MsgBox("No Fanart Is Selected")
            Else
                Try
                    Panel1.Controls.Remove(Label1)
                    Dim buffer(40000000) As Byte
                    Dim size As Integer = 0
                    Dim bytesRead As Integer = 0

                    Dim fanartthumburl As String = tempstring2
                    Dim req As HttpWebRequest = req.Create(fanartthumburl)
                    Dim res As HttpWebResponse = req.GetResponse()
                    Dim contents As Stream = res.GetResponseStream()
                    Dim bmp As New Bitmap(contents)


                    Dim bytesToRead As Integer = CInt(buffer.Length)

                    While bytesToRead > 0
                        size = contents.Read(buffer, bytesRead, bytesToRead)
                        If size = 0 Then Exit While
                        bytesToRead -= size
                        bytesRead += size
                    End While
                    If Form1.userprefs.resizefanart = 1 Then
                        Try
                            Dim tempbitmap As Bitmap = bmp
                            tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        Catch ex As Exception
                            tempstring = ex.Message.ToString
                        End Try
                    ElseIf Form1.userprefs.resizefanart = 2 Then
                        If bmp.Width > 1280 Or bmp.Height > 720 Then
                            Dim bm_source As New Bitmap(bmp)
                            Dim bm_dest As New Bitmap(1280, 720)
                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                            gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                            Dim tempbitmap As Bitmap = bm_dest
                            tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        Else
                            Threading.Thread.CurrentThread.Sleep(30)
                            bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        End If
                    ElseIf Form1.userprefs.resizefanart = 3 Then
                        If bmp.Width > 960 Or bmp.Height > 540 Then
                            Dim bm_source As New Bitmap(bmp)
                            Dim bm_dest As New Bitmap(960, 540)
                            Dim gr As Graphics = Graphics.FromImage(bm_dest)
                            gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                            gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                            Dim tempbitmap As Bitmap = bm_dest
                            tempbitmap.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        Else
                            Threading.Thread.CurrentThread.Sleep(30)
                            bmp.Save(workingmoviedetails.fileinfo.fanartpath, Imaging.ImageFormat.Jpeg)
                        End If
                    End If
                    Dim exists As Boolean = System.IO.File.Exists(workingmoviedetails.fileinfo.fanartpath)
                    If exists = True Then


                        'mainfanart = New PictureBox
                        PictureBox2.ImageLocation = workingmoviedetails.fileinfo.fanartpath
                        PictureBox7.ImageLocation = workingmoviedetails.fileinfo.fanartpath
                        For Each paths In userprefs.offlinefolders
                            Dim offlinepath As String = paths & "\"
                            If workingmoviedetails.fileinfo.fanartpath.IndexOf(offlinepath) <> -1 Then
                                Dim mediapath As String
                                mediapath = filefunction.getfilename(workingmoviedetails.fileinfo.fullpathandfilename)
                                Call offlinedvd(workingmoviedetails.fileinfo.fullpathandfilename, workingmoviedetails.fullmoviebody.title, mediapath)
                            End If
                        Next
                    Else
                        PictureBox2.ImageLocation = defaultfanart
                    End If
                    Label16.Text = PictureBox2.Image.Width
                    Label17.Text = PictureBox2.Image.Height
                    Call fanartsaved()
                Catch ex As WebException
                    MsgBox(ex.Message)
                End Try
            End If
        Catch
        Finally
            messbox.Close()
        End Try
    End Sub

    Private Sub Button105_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button105.Click
        If TextBox41.Text <> "" And TextBox43.Text <> "" Then
            Dim newcom As New listofcommands
            newcom.command = TextBox43.Text
            newcom.title = TextBox41.Text
            userprefs.commandlist.Add(newcom)
            ListBox16.Items.Add(newcom.title)
            ListBox17.Items.Add(newcom.command)
            ToolsToolStripMenuItem.DropDownItems.Clear()
            For Each com In userprefs.commandlist
                ToolsToolStripMenuItem.DropDownItems.Add(com.title)
            Next
        Else
            MsgBox("This feature needs both a title & command")
        End If
    End Sub

    Private Sub ListBox16_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox16.SelectedIndexChanged
        ListBox17.SelectedIndex = ListBox16.SelectedIndex
    End Sub

    Private Sub ListBox17_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ListBox17.SelectedIndexChanged
        ListBox16.SelectedIndex = ListBox17.SelectedIndex
    End Sub

    Private Sub Button106_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button106.Click
        If ListBox16.SelectedItem <> "" And ListBox17.SelectedItem <> "" Then
            For Each com In userprefs.commandlist
                If com.title = ListBox16.SelectedItem And com.command = ListBox17.SelectedItem Then
                    userprefs.commandlist.Remove(com)
                    Exit For
                End If
            Next
        End If
        ListBox16.Items.Clear()
        ListBox17.Items.Clear()
        ToolsToolStripMenuItem.DropDownItems.Clear()
        For Each com In userprefs.commandlist
            ListBox16.Items.Add(com.title)
            ListBox17.Items.Add(com.command)
            ToolsToolStripMenuItem.DropDownItems.Add(com.title)
        Next
    End Sub

    Private Sub ToolsToolStripMenuItem_DropDownItemClicked(ByVal sender As Object, ByVal e As System.Windows.Forms.ToolStripItemClickedEventArgs) Handles ToolsToolStripMenuItem.DropDownItemClicked
        For Each temp In userprefs.commandlist
            If temp.title = e.ClickedItem.Text Then
                Try
                    Process.Start(temp.command)
                Catch ex As Exception
                End Try
                Exit For
            End If
        Next
    End Sub

    Private Sub findmissingepisodes(ByVal showslist As List(Of String), Optional ByVal ignorelocked As Boolean = False)
        For Each item In basictvlist
            If showslist.Contains(item.fullpath) Then
                Bckgrndfindmissingepisodes.ReportProgress(0, "Downloading episode data for: " & item.title)
                If item.locked = 0 Or ignorelocked = True Then
                    Dim showid As String = item.tvdbid
                    If IsNumeric(showid) Then
                        'http://www.thetvdb.com/api/6E82FED600783400/series/85137/all/en.xml
                        Dim language As String = ""
                        If item.language <> "" Then
                            language = item.language
                        Else
                            language = "en"
                        End If
                        Dim sortorder As String = item.sortorder
                        Dim url As String = "http://www.thetvdb.com/api/6E82FED600783400/series/" & showid & "/all/" & language & ".xml"
                        If sortorder = "" Then
                            sortorder = "default"
                        End If
                        Dim xmlfile As String
                        Dim wrGETURL As WebRequest
                        wrGETURL = WebRequest.Create(url)
                        Dim myProxy As New WebProxy("myproxy", 80)
                        myProxy.BypassProxyOnLocal = True
                        Dim objStream As Stream
                        objStream = wrGETURL.GetResponse.GetResponseStream()
                        Dim objReader As New StreamReader(objStream)
                        xmlfile = objReader.ReadToEnd
                        Dim showlist As New XmlDocument
                        'Try
                        showlist.LoadXml(xmlfile)
                        Dim thisresult As XmlNode = Nothing
                        For Each thisresult In showlist("Data")
                            Select Case thisresult.Name
                                Case "Episode"
                                    Dim newshow As New basicepisodenfo
                                    Dim premdate As String
                                    Dim aired As Boolean = True
                                    Dim mirrorselection As XmlNode = Nothing
                                    For Each mirrorselection In thisresult.ChildNodes
                                        Select Case mirrorselection.Name
                                            Case "DVD_episodenumber"
                                                If sortorder = "dvd" Then
                                                    If mirrorselection.InnerText <> "" Then
                                                        Dim temp As String = mirrorselection.InnerText
                                                        If temp.IndexOf(".") <> -1 Then
                                                            temp = temp.Substring(0, temp.IndexOf("."))
                                                        End If
                                                        newshow.episodeno = Convert.ToInt32(temp).ToString
                                                    Else
                                                        sortorder = "default"
                                                    End If
                                                End If
                                            Case "EpisodeNumber"
                                                If sortorder = "default" Then
                                                    newshow.episodeno = mirrorselection.InnerText
                                                End If
                                            Case "SeasonNumber"
                                                newshow.seasonno = mirrorselection.InnerText
                                            Case "EpisodeName"
                                                newshow.title = mirrorselection.InnerText
                                            Case "FirstAired"
                                                premdate = mirrorselection.InnerText
                                        End Select
                                    Next
                                    If premdate = "" Then
                                        aired = False
                                    Else
                                        If premdate <> "0000-00-00" Then
                                            Try
                                                Dim myDate2 As Date = System.DateTime.Now
                                                Dim epdate As Date = CDate(premdate)
                                                newshow.playcount = premdate
                                                Dim strepdate As String
                                                strepdate = Format(epdate, "yyyyMMdd")
                                                Dim strcurrentdate As String
                                                strcurrentdate = Format(myDate2, "yyyyMMdd")
                                                Dim oldint As Integer = Convert.ToInt32(strepdate)
                                                Dim newint As Integer = Convert.ToInt32(strcurrentdate)
                                                If oldint > newint Then
                                                    aired = False
                                                End If
                                            Catch ex2 As Exception
                                            End Try
                                        Else
                                            'MsgBox("boo")
                                        End If
                                    End If

                                        If aired = True Then newshow.tvdbid = "true"
                                        If aired = False Then newshow.tvdbid = "false"
                                        newshow.episodepath = item.fullpath
                                        Bckgrndfindmissingepisodes.ReportProgress(1, newshow)
                            End Select
                        Next
                    End If
                End If
            End If
        Next
    End Sub

    Private Sub SearchForMissingEpisodesToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SearchForMissingEpisodesToolStripMenuItem.Click

        If Not Bckgrndfindmissingepisodes.IsBusy And bckgroundscanepisodes.IsBusy = False Then
            For Each shows In basictvlist
                shows.missingepisodes.Clear()
            Next
            Dim nod As TreeNode
            For Each nod In TreeView1.Nodes
                Dim nod2 As TreeNode
                For Each nod2 In nod.Nodes
                    Dim nod3 As TreeNode
                    For Each nod3 In nod2.Nodes
                        If nod3.Name.IndexOf("Missing: ") = 0 Then
                            nod3.Remove()
                        End If
                    Next
                Next
            Next
            ToolStripStatusLabel2.Text = "Starting search for missing episodes"
            ToolStripStatusLabel2.Visible = True
            Bckgrndfindmissingepisodes.RunWorkerAsync()
        ElseIf Bckgrndfindmissingepisodes.IsBusy Then
            MsgBox("Process is already running")
        Else
            MsgBox("Missing episode search cannot be performed" & vbCrLf & "    when the episode scraper is running")
        End If
    End Sub

    Private Sub Bckgrndfindmissingepisodes_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles Bckgrndfindmissingepisodes.DoWork
        Dim showlist As New List(Of String)
        showlist.Clear()
        For Each item In basictvlist
            showlist.Add(item.fullpath)
        Next
        Call findmissingepisodes(showlist)
    End Sub

    Private Sub Bckgrndfindmissingepisodes_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles Bckgrndfindmissingepisodes.ProgressChanged
        If e.ProgressPercentage = 1 Then
            Dim newshow As New basicepisodenfo
            newshow = e.UserState
            For Each item In basictvlist
                If item.fullpath = newshow.episodepath Then
                    If Convert.ToInt32(newshow.seasonno) > 0 And newshow.title <> "" And newshow.tvdbid = "true" Then
                        Dim exists As Boolean = False
                        For Each ep In item.allepisodes
                            If ep.episodeno = newshow.episodeno And ep.seasonno = newshow.seasonno Then
                                exists = True
                                Exit For
                            End If
                        Next
                        If exists = False Then
                            Dim cnode As TreeNode
                            Dim shownode As Integer = -1
                            For g = 0 To TreeView1.Nodes.Count - 1
                                If TreeView1.Nodes(g).Name.ToString = item.fullpath Then
                                    cnode = TreeView1.Nodes(g)
                                    shownode = g
                                    Exit For
                                End If
                            Next

                            Dim seasonstring As String = Nothing
                            Dim seasonno As Integer = Convert.ToInt32(newshow.seasonno)
                            Dim tempstring As String
                            If seasonno <> 0 And seasonno <> -1 Then
                                If seasonno < 10 Then
                                    tempstring = "Season 0" & seasonno.ToString
                                Else
                                    tempstring = "Season " & seasonno.ToString
                                End If
                            ElseIf seasonno = 0 Then
                                tempstring = "Specials"
                            End If
                            Dim node As TreeNode
                            Dim alreadyexists As Boolean = False
                            For Each node In cnode.Nodes
                                If node.Text = tempstring Then
                                    alreadyexists = True
                                    Exit For
                                End If
                            Next
                            If alreadyexists = False Then cnode.Nodes.Add(tempstring)
                            Dim tempint As Integer
                            For Each node In cnode.Nodes
                                If node.Text = tempstring Then
                                    tempint = node.Index
                                    Exit For
                                End If
                            Next

                            Dim eps As String
                            Dim episodeno As Integer = Convert.ToInt32(newshow.episodeno)
                            If episodeno < 10 Then
                                eps = "0" & episodeno.ToString
                            Else
                                eps = episodeno.ToString
                            End If
                            eps = eps & " - " & newshow.title
                            Dim ccnode As TreeNode
                            ccnode = TreeView1.Nodes(shownode).Nodes(tempint)
                            Dim tempstring2 As String = "Missing: " & eps
                            alreadyexists = False
                            For Each node In ccnode.Nodes
                                If node.Text = eps Then
                                    alreadyexists = True
                                    Exit For
                                End If
                            Next
                            If alreadyexists = False Then
                                ccnode.Nodes.Add(tempstring2, eps)
                                For Each no As TreeNode In ccnode.Nodes
                                    If no.Name = tempstring2 Then
                                        no.ForeColor = Color.Blue
                                        Exit For
                                    End If
                                Next
                                newshow.episodepath = tempstring2
                                item.missingepisodes.Add(newshow)
                                ToolStripStatusLabel2.Text = "Adding: " & eps
                            End If
                        End If
                    End If
                End If
            Next
        Else
            ToolStripStatusLabel2.Text = e.UserState
        End If
    End Sub

    Private Sub Bckgrndfindmissingepisodes_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles Bckgrndfindmissingepisodes.RunWorkerCompleted
        ToolStripStatusLabel2.Visible = False
        ToolStripStatusLabel2.Text = "TV Show Episode Scan In Progress"

    End Sub

    Private Sub rebuildselectedshow(ByVal show As String)
        messbox = New message_box("Rebuilding Selected Show", "", "Please Wait")
        'remove old
        messbox.Show()
        messbox.Refresh()
        Application.DoEvents()
        'messbox.Show()
        For Each nod In TreeView1.Nodes
            If nod.name = show Then
                TreeView1.Nodes.Remove(nod)
                Exit For
            End If
        Next
        For Each item In basictvlist
            If item.fullpath = show Then
                basictvlist.Remove(item)
                Exit For
            End If
        Next
        Try
            Try
                Dim shownfopath As String = show
                Dim newtvshownfo As basictvshownfo
                newtvshownfo = nfofunction.loadbasictvshownfo(shownfopath)
                If newtvshownfo.title <> Nothing Then
                    If newtvshownfo.status.IndexOf("skipthisfile") = -1 Then
                        Dim skip As Boolean = False
                        For Each tvshow In basictvlist
                            If newtvshownfo.fullpath = tvshow.fullpath Then
                                skip = True
                                Exit For
                            End If
                        Next
                        If skip = False Then
                            ListtvFiles(newtvshownfo, "*.NFO")
                            basictvlist.Add(newtvshownfo)
                        End If
                    End If
                End If
                realtvpaths.Add(show)
            Catch
            End Try
        Catch
        End Try
        messbox.Close()
        Call populatetvtree()



        Call savetvdata()
    End Sub

    Private Sub RebuildThisShowToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RebuildThisShowToolStripMenuItem.Click
        Call rebuildselectedshow(TreeView1.SelectedNode.Name)
    End Sub

    Private Sub MissingepisodesToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MissingepisodesToolStripMenuItem.Click
        If Not Bckgrndfindmissingepisodes.IsBusy Then
            Dim tempstring As String = ""
            For Each sho In basictvlist
                If sho.fullpath = TreeView1.SelectedNode.Name Then
                    tempstring = "Checking """ & sho.title & """ for missing episodes"
                    Exit For
                End If
            Next
            If tempstring = "" Then tempstring = "Checkign for missing episodes"
            Dim messbox As New message_box(tempstring, "", "Please Wait")
            Dim showlist As New List(Of String)
            showlist.Clear()
            showlist.Add(TreeView1.SelectedNode.Name)
            messbox.Show()
            messbox.Refresh()
            Application.DoEvents()
            Call findmissingepisodes(showlist, True)
            messbox.Close()
        Else
            MsgBox("The missing episode thread is already running")
        End If
    End Sub

    Private Sub RadioButton44_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton44.CheckedChanged
        If RadioButton44.Checked = True Then
            Call tvfilter("missingeps")
        End If
    End Sub

    Private Sub LockAllToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles LockAllToolStripMenuItem.Click
        Dim shownode As TreeNode
        For Each shownode In TreeView1.Nodes
            Dim tempint As Integer = basictvlist.Count - 1
            For f = tempint To 0 Step -1
                If basictvlist(f).fullpath = shownode.Name Then
                    If basictvlist(f).locked <> 2 And basictvlist(f).locked <> 1 Then
                        If shownode.Name = workingtvshow.path Then
                            Button60.Text = "Locked"
                            Button60.BackColor = Color.Red
                        End If
                        basictvlist(f).locked = 1
                        Dim showtochange As New tvshownfo
                        showtochange = nfofunction.loadfulltnshownfo(basictvlist(f).fullpath)
                        showtochange.locked = 1
                        Call nfofunction.savetvshownfo(basictvlist(f).fullpath, showtochange, True)
                        basictvlist(f).fullpath = shownode.Name
                        shownode.StateImageIndex = 0
                    End If
                    Exit For
                End If
            Next
        Next
        Call savetvdata()
    End Sub

    Private Sub UnlockAllToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UnlockAllToolStripMenuItem.Click
        Dim shownode As TreeNode
        For Each shownode In TreeView1.Nodes
            Dim tempint As Integer = basictvlist.Count - 1
            For f = tempint To 0 Step -1
                If basictvlist(f).fullpath = shownode.Name Then
                    If basictvlist(f).locked <> 2 And basictvlist(f).locked <> 0 Then
                        If shownode.Name = workingtvshow.path Then
                            Button60.Text = "Open"
                            Button60.BackColor = Color.LawnGreen
                        End If
                        basictvlist(f).locked = 0
                        Dim showtochange As New tvshownfo
                        showtochange = nfofunction.loadfulltnshownfo(basictvlist(f).fullpath)
                        showtochange.locked = 0
                        Call nfofunction.savetvshownfo(basictvlist(f).fullpath, showtochange, True)
                        basictvlist(f).fullpath = shownode.Name
                        shownode.StateImageIndex = -1
                    End If
                    Exit For
                End If
            Next
        Next
        Call savetvdata()
    End Sub

    Private Sub CheckBox38_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox38.CheckedChanged
        If CheckBox38.Checked = True Then
            userprefs.intruntime = True
        Else
            userprefs.intruntime = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub Button107_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button107.Click
        'listbox15
        If ListBox15.SelectedItem <> Nothing Then
            Dim tempstring As String = TextBox44.Text
            tempstring = tempstring.Replace("?", "")
            tempstring = tempstring.Replace("/", "")
            tempstring = tempstring.Replace("\", "")
            tempstring = tempstring.Replace("<", "")
            tempstring = tempstring.Replace(">", "")
            tempstring = tempstring.Replace(":", "")
            tempstring = tempstring.Replace("""", "")
            tempstring = tempstring.Replace("*", "")
            If tempstring.Length <> 0 Then
                Try
                    Dim temppath As String = IO.Path.Combine(ListBox15.SelectedItem, tempstring)
                    Dim f As New IO.DirectoryInfo(temppath)
                    If Not f.Exists Then
                        IO.Directory.CreateDirectory(temppath)
                        MsgBox("Folder Created")
                    Else
                        MsgBox("Folder Already Exists")
                    End If
                Catch ex As Exception
                    MsgBox("Unable to create folder" & vbCrLf & ex.Message.ToString)
                End Try
            End If
        Else
            MsgBox("Please Select a folder from the above listbox")
        End If
    End Sub

    Private Sub Button108_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button108.Click
        If ListBox15.SelectedItem <> Nothing Then
            Dim tempint As Integer = 0
            Dim textfilename As String = ""
            Dim filebrowser As New OpenFileDialog
            Dim mstrProgramFilesPath As String = System.Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles)
            filebrowser.InitialDirectory = mstrProgramFilesPath
            filebrowser.Filter = "Text Files|*.txt"
            filebrowser.Title = "Select text file to load"
            If filebrowser.ShowDialog = Windows.Forms.DialogResult.OK Then
                textfilename = filebrowser.FileName
            End If
            If textfilename <> "" Then
                Using textfile As StreamReader = New StreamReader(textfilename)
                    Dim line As String
                    line = textfile.ReadLine
                    Do While (Not line Is Nothing)
                        ' Add this line to list.
                        Dim tempstring As String = line
                        tempstring = tempstring.Replace("?", "")
                        tempstring = tempstring.Replace("/", "")
                        tempstring = tempstring.Replace("\", "")
                        tempstring = tempstring.Replace("<", "")
                        tempstring = tempstring.Replace(">", "")
                        tempstring = tempstring.Replace(":", "")
                        tempstring = tempstring.Replace("""", "")
                        tempstring = tempstring.Replace("*", "")
                        If tempstring.Length <> 0 Then
                            Try
                                Dim temppath As String = IO.Path.Combine(ListBox15.SelectedItem, tempstring)
                                Dim f As New IO.DirectoryInfo(temppath)
                                If Not f.Exists Then
                                    tempint += 1
                                    IO.Directory.CreateDirectory(temppath)
                                Else

                                End If
                            Catch ex As Exception

                            End Try
                        End If
                        line = textfile.ReadLine
                    Loop
                End Using
                MsgBox(tempint.ToString & " Movie Folders added")
            End If
        Else
            MsgBox("Please Select a folder from the above listbox")
        End If
    End Sub

    Private Sub BatchRescrapeWizardToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles BatchRescrapeWizardToolStripMenuItem.Click
        If Not tvbckrescrapewizard.IsBusy Then


            tvbatchlist.ep_actor = False
            tvbatchlist.ep_aired = False

            tvbatchlist.ep_credits = False
            tvbatchlist.ep_director = False
            tvbatchlist.ep_plot = False
            tvbatchlist.ep_rating = False
            tvbatchlist.ep_runtime = False
            tvbatchlist.ep_screenshot = False

            tvbatchlist.ep_streamdetails = False
            tvbatchlist.ep_createscreenshot = False

            tvbatchlist.sh_actor = False
            tvbatchlist.sh_fanart = False
            tvbatchlist.sh_genre = False
            tvbatchlist.sh_posters = False
            tvbatchlist.sh_mpaa = False
            tvbatchlist.sh_plot = False
            tvbatchlist.sh_rating = False
            tvbatchlist.sh_runtime = False
            tvbatchlist.sh_studio = False
            tvbatchlist.sh_year = False

            tvbatchlist.includelocked = False
            tvbatchlist.activate = False

            tvbatchlist.doshows = False
            tvbatchlist.doepisodes = False
            tvbatchlist.doshowart = False
            tvbatchlist.doshowactors = False
            tvbatchlist.doshowbody = False
            tvbatchlist.doepisodeart = False
            tvbatchlist.doepisodeactors = False
            tvbatchlist.doepisodebody = False
            tvbatchlist.doepisodemediatags = False
            ' doshowbody As Boolean
            'Dim doshowart As Boolean
            'Dim doshowactors As Boolean
            'Dim doepisodebody As Boolean
            'Dim doepisodeart As Boolean
            'Dim doepisodeactors As Boolean
            Dim displaywizard As New tv_batch_wizard
            displaywizard.ShowDialog()

            If tvbatchlist.activate = True Then
                ToolStripStatusLabel8.Text = "Starting TV Batch Scrape"
                ToolStripStatusLabel8.Visible = True
                ToolStripProgressBar7.Value = 0
                ToolStripProgressBar7.Visible = True
                'ToolStripProgressBar6.Visible = True
                tvbckrescrapewizard.RunWorkerAsync()
            End If
        Else
            MsgBox("The update Wizard is Already Running")
        End If
    End Sub

    Private Sub tvbckrescrapewizard_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles tvbckrescrapewizard.DoWork
        Dim showprocesscount As Integer
        Dim progresstext As String = ""
        Dim progress As Integer
        Dim progcount As Integer = 0
        Dim done As Integer = 0
        For f = basictvlist.Count - 1 To 0 Step -1
            If basictvlist(f).locked = 0 Or basictvlist(f).locked = -1 Or tvbatchlist.includelocked = True Then
                If tvbatchlist.doepisodes = True Then
                    showprocesscount += basictvlist(f).allepisodes.Count
                    showprocesscount += 1
                    progcount += 1
                Else
                    showprocesscount += 1
                    progcount += 1
                End If
            End If
        Next
        Dim showsdone As Integer = 0
        Dim showcounter As Integer = 0
        For f = basictvlist.Count - 1 To 0 Step -1
            showcounter += 1
            If basictvlist(f).locked = 0 Or basictvlist(f).locked = -1 Or tvbatchlist.includelocked = True Then
                progresstext = "Working on Show: " & showcounter.ToString & " of " & progcount
                If done > 0 Then
                    progress = (100 / showprocesscount) * done
                Else
                    progress = 0
                End If
                tvbckrescrapewizard.ReportProgress(progress, progresstext)
                Dim editshow As New tvshownfo
                editshow = nfofunction.loadfulltnshownfo(basictvlist(f).fullpath)
                'Dim tvdbstuff As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
                Dim tvdbstuff As New TVDBScraper
                If tvbatchlist.doshows = True Then
                    If tvbatchlist.doshowbody = True Or tvbatchlist.doshowactors = True Then
                        Dim language As String = editshow.language
                        If language = "" Then language = "en"

                        Dim tvshowxmlstring As String = tvdbstuff.getshow(editshow.tvdbid, language)
                        Try
                            Dim actorlist As New List(Of MovieActors)
                            actorlist.Clear()
                            Dim showlist As New XmlDocument
                            showlist.LoadXml(tvshowxmlstring)
                            Dim thisresult As XmlNode = Nothing
                            Dim maxcount As Integer = 0
                            For Each thisresult In showlist("fulltvshow")
                                Select Case thisresult.Name
                                    Case "title"
                                        'thisresult.InnerText
                                    Case "mpaa"
                                        If tvbatchlist.sh_mpaa = True Then
                                            editshow.mpaa = thisresult.InnerText
                                        End If
                                    Case "premiered"
                                        If tvbatchlist.sh_year = True Then
                                            editshow.premiered = thisresult.InnerText
                                        End If
                                    Case "genre"
                                        Dim newstring As String
                                        newstring = thisresult.InnerText
                                        newstring = newstring.TrimEnd("|")
                                        newstring = newstring.TrimStart("|")
                                        newstring = newstring.Replace("|", " / ")
                                        If tvbatchlist.sh_genre = True Then
                                            editshow.genre = newstring
                                        End If
                                    Case "imdbid"

                                    Case "studio"
                                        If tvbatchlist.sh_studio = True Then
                                            editshow.studio = thisresult.InnerText
                                        End If
                                    Case "plot"
                                        If tvbatchlist.sh_plot = True Then
                                            editshow.plot = thisresult.InnerText
                                        End If
                                    Case "rating"
                                        If tvbatchlist.sh_rating = True Then
                                            editshow.rating = thisresult.InnerText
                                        End If
                                    Case "runtime"
                                        If tvbatchlist.sh_runtime = True Then
                                            editshow.runtime = thisresult.InnerText
                                        End If
                                    Case "episodeguideurl"

                                    Case "actor"
                                        If editshow.tvshowactorsource = "tvdb" And tvbatchlist.doshowactors = True Then
                                            If maxcount >= userprefs.maxactors Then
                                                Exit For
                                            End If
                                            maxcount += 1
                                            Dim id As String = ""
                                            Dim acts As New MovieActors
                                            Dim results As XmlNode = Nothing
                                            Dim lan As New possibleshowlist

                                            For Each results In thisresult.ChildNodes
                                                Select Case results.Name
                                                    Case "name"
                                                        acts.actorname = results.InnerText
                                                    Case "role"
                                                        acts.actorrole = results.InnerText
                                                    Case "thumb"
                                                        acts.actorthumb = results.InnerText
                                                    Case "actorid"
                                                        id = results.InnerText
                                                End Select
                                            Next
                                            '.Add(acts)actorlist
                                            If acts.actorthumb <> Nothing Then
                                                If acts.actorthumb <> "" And userprefs.actorseasy = True Then
                                                    If editshow.tvshowactorsource <> "imdb" Or editshow.imdbid = Nothing Then
                                                        Try
                                                            Dim workingpath As String = basictvlist(f).fullpath.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "")
                                                            workingpath = workingpath & ".actors\"
                                                            Dim hg As New IO.DirectoryInfo(workingpath)
                                                            Dim destsorted As Boolean = False
                                                            If Not hg.Exists Then
                                                                Try
                                                                    IO.Directory.CreateDirectory(workingpath)
                                                                    destsorted = True
                                                                Catch ex As Exception

                                                                End Try
                                                            Else
                                                                destsorted = True
                                                            End If
                                                            If destsorted = True Then
                                                                Dim filename As String = acts.actorname.Replace(" ", "_")
                                                                filename = filename & ".tbn"
                                                                filename = IO.Path.Combine(workingpath, filename)
                                                                Dim buffer(4000000) As Byte
                                                                Dim size As Integer = 0
                                                                Dim bytesRead As Integer = 0
                                                                Dim thumburl As String = acts.actorthumb
                                                                Dim req As HttpWebRequest = req.Create(thumburl)
                                                                Dim res As HttpWebResponse = req.GetResponse()
                                                                Dim contents As Stream = res.GetResponseStream()
                                                                Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                While bytesToRead > 0
                                                                    size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                    If size = 0 Then Exit While
                                                                    bytesToRead -= size
                                                                    bytesRead += size
                                                                End While

                                                                Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                fstrm.Write(buffer, 0, bytesRead)
                                                                contents.Close()
                                                                fstrm.Close()
                                                            End If
                                                        Catch
                                                        End Try
                                                    End If
                                                End If
                                            End If
                                        End If
                                End Select
                            Next
                            If tvbatchlist.doshowactors = True And editshow.tvshowactorsource = "imdb" Then
                                '                    Dim imdbscraper As New imdb.Classimdbscraper
                                Dim imdbscraper As New Classimdb
                                Dim actorlist2 As String
                                Dim actorstring As New XmlDocument
                                actorlist2 = imdbscraper.getimdbactors(userprefs.imdbmirror, basictvlist(f).imdbid)
                                Try
                                    actorstring.LoadXml(actorlist2)
                                    thisresult = Nothing
                                    Dim actorcount As Integer = 0
                                    For Each thisresult In actorstring("actorlist")
                                        Select Case thisresult.Name
                                            Case "actor"
                                                If actorcount > userprefs.maxactors Then
                                                    Exit For
                                                End If
                                                actorcount += 1
                                                Dim newactor As New MovieActors
                                                Dim detail As XmlNode = Nothing
                                                For Each detail In thisresult.ChildNodes
                                                    Select Case detail.Name
                                                        Case "name"
                                                            newactor.actorname = detail.InnerText
                                                        Case "role"
                                                            newactor.actorrole = detail.InnerText
                                                        Case "thumb"
                                                            newactor.actorthumb = detail.InnerText
                                                        Case "actorid"
                                                            If newactor.actorthumb <> Nothing Then
                                                                If detail.InnerText <> "" And userprefs.actorseasy = True Then
                                                                    Dim workingpath As String = basictvlist(f).fullpath.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "")
                                                                    workingpath = workingpath & ".actors\"
                                                                    Dim hg As New IO.DirectoryInfo(workingpath)
                                                                    Dim destsorted As Boolean = False
                                                                    If Not hg.Exists Then
                                                                        Try
                                                                            IO.Directory.CreateDirectory(workingpath)
                                                                            destsorted = True
                                                                        Catch ex As Exception

                                                                        End Try
                                                                    Else
                                                                        destsorted = True
                                                                    End If
                                                                    If destsorted = True Then
                                                                        Dim filename As String = newactor.actorname.Replace(" ", "_")
                                                                        filename = filename & ".tbn"
                                                                        filename = IO.Path.Combine(workingpath, filename)
                                                                        Dim buffer(4000000) As Byte
                                                                        Dim size As Integer = 0
                                                                        Dim bytesRead As Integer = 0
                                                                        Dim thumburl As String = newactor.actorthumb
                                                                        Dim req As HttpWebRequest = req.Create(thumburl)
                                                                        Dim res As HttpWebResponse = req.GetResponse()
                                                                        Dim contents As Stream = res.GetResponseStream()
                                                                        Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                        While bytesToRead > 0
                                                                            size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                            If size = 0 Then Exit While
                                                                            bytesToRead -= size
                                                                            bytesRead += size
                                                                        End While

                                                                        Dim fstrm As New FileStream(filename, FileMode.OpenOrCreate, FileAccess.Write)
                                                                        fstrm.Write(buffer, 0, bytesRead)
                                                                        contents.Close()
                                                                        fstrm.Close()
                                                                    End If
                                                                End If
                                                                If userprefs.actorsave = True And detail.InnerText <> "" And userprefs.actorseasy = False Then
                                                                    Dim workingpath As String = ""
                                                                    Dim networkpath As String = Form1.userprefs.actorsavepath
                                                                    Try
                                                                        Dim tempstring As String = ""
                                                                        tempstring = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2)
                                                                        Dim hg As New IO.DirectoryInfo(tempstring)
                                                                        If Not hg.Exists Then
                                                                            IO.Directory.CreateDirectory(tempstring)
                                                                        End If
                                                                        workingpath = networkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                        If Not IO.File.Exists(workingpath) Then
                                                                            Dim buffer(4000000) As Byte
                                                                            Dim size As Integer = 0
                                                                            Dim bytesRead As Integer = 0
                                                                            Dim thumburl As String = newactor.actorthumb
                                                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                                                            Dim res As HttpWebResponse = req.GetResponse()
                                                                            Dim contents As Stream = res.GetResponseStream()
                                                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                            While bytesToRead > 0
                                                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                                If size = 0 Then Exit While
                                                                                bytesToRead -= size
                                                                                bytesRead += size
                                                                            End While

                                                                            Dim fstrm As New FileStream(workingpath, FileMode.OpenOrCreate, FileAccess.Write)
                                                                            fstrm.Write(buffer, 0, bytesRead)
                                                                            contents.Close()
                                                                            fstrm.Close()
                                                                        End If
                                                                        newactor.actorthumb = IO.Path.Combine(Form1.userprefs.actornetworkpath, detail.InnerText.Substring(detail.InnerText.Length - 2, 2))
                                                                        If Form1.userprefs.actornetworkpath.IndexOf("/") <> -1 Then
                                                                            newactor.actorthumb = Form1.userprefs.actornetworkpath & "/" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "/" & detail.InnerText & ".jpg"
                                                                        Else
                                                                            newactor.actorthumb = Form1.userprefs.actornetworkpath & "\" & detail.InnerText.Substring(detail.InnerText.Length - 2, 2) & "\" & detail.InnerText & ".jpg"
                                                                        End If
                                                                    Catch
                                                                    End Try
                                                                End If
                                                            End If
                                                    End Select
                                                Next
                                                actorlist.Add(newactor)
                                        End Select
                                    Next
                                Catch ex As Exception
                                End Try
                            End If
                            If tvbatchlist.doshowactors = True Then
                                If actorlist.Count > 0 Then
                                    editshow.listactors.Clear()
                                    For Each act In actorlist
                                        editshow.listactors.Add(act)
                                    Next
                                End If
                            End If
                        Catch
                        End Try
                        Call nfofunction.savetvshownfo(basictvlist(f).fullpath, editshow, True)
                    End If



                    'posters
                    Dim artlist As New List(Of tvbanners)
                    Dim showlist2 As New XmlDocument
                    Dim thisresult2 As XmlNode
                    Dim artdone As Boolean = False
                    If tvbatchlist.doshowart = True Then

                        Dim thumblist As String = tvdbstuff.getposterlist(basictvlist(f).tvdbid)
                        showlist2.LoadXml(thumblist)
                        artdone = True
                        thisresult2 = Nothing
                        'CheckBox3 = seasons
                        'CheckBox4 = fanart
                        'CheckBox5 = poster
                        For Each thisresult2 In showlist2("banners")
                            Select Case thisresult2.Name
                                Case "banner"
                                    Dim individualposter As New tvbanners
                                    For Each results In thisresult2.ChildNodes
                                        Select Case results.Name
                                            Case "url"
                                                individualposter.url = results.InnerText
                                            Case "bannertype"
                                                individualposter.bannertype = results.InnerText
                                            Case "resolution"
                                                individualposter.resolution = results.InnerText
                                            Case "language"
                                                individualposter.language = results.InnerText
                                            Case "season"
                                                individualposter.season = results.InnerText
                                        End Select
                                    Next
                                    artlist.Add(individualposter)
                            End Select
                        Next
                        Dim tempstring As String = ""
                        For g = 0 To 1000
                            Dim seasonposter As String = ""
                            If seasonposter = "" Then
                                For Each Image In artlist
                                    If Image.season = g.ToString And Image.language = "en" Then
                                        seasonposter = Image.url
                                        Exit For
                                    End If
                                Next
                            End If
                            If seasonposter = "" Then
                                For Each Image In artlist
                                    If Image.season = g.ToString Then
                                        seasonposter = Image.url
                                        Exit For
                                    End If
                                Next
                            End If
                            If seasonposter <> "" Then
                                If g < 10 Then
                                    tempstring = "0" & g.ToString
                                Else
                                    tempstring = g.ToString
                                End If
                                If tvbatchlist.sh_posters = True Then
                                    Dim seasonpath As String = basictvlist(f).fullpath.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "season" & tempstring & ".tbn")
                                    If tempstring = "00" Then
                                        seasonpath = workingtvshow.path.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "season-specials.tbn")
                                    End If
                                    If Not IO.File.Exists(seasonpath) Then
                                        Try
                                            Dim buffer(4000000) As Byte
                                            Dim size As Integer = 0
                                            Dim bytesRead As Integer = 0
                                            Dim thumburl As String = seasonposter
                                            Dim req As HttpWebRequest = req.Create(thumburl)
                                            Dim res As HttpWebResponse = req.GetResponse()
                                            Dim contents As Stream = res.GetResponseStream()
                                            Dim bytesToRead As Integer = CInt(buffer.Length)
                                            While bytesToRead > 0
                                                size = contents.Read(buffer, bytesRead, bytesToRead)
                                                If size = 0 Then Exit While
                                                bytesToRead -= size
                                                bytesRead += size
                                            End While
                                            Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                            fstrm.Write(buffer, 0, bytesRead)
                                            contents.Close()
                                            fstrm.Close()
                                        Catch ex As WebException
                                            'MsgBox("Error Downloading season poster from TVDB")
                                        End Try
                                    End If
                                End If
                            End If
                        Next


                        Dim fanartposter As String
                        If fanartposter = "" Then
                            For Each Image In artlist
                                If Image.language = "en" And Image.bannertype = "fanart" Then
                                    fanartposter = Image.url
                                    Exit For
                                End If
                            Next
                        End If
                        If fanartposter = "" Then
                            For Each Image In artlist
                                If Image.bannertype = "fanart" Then
                                    fanartposter = Image.url
                                    Exit For
                                End If
                            Next
                        End If
                        If fanartposter <> "" And tvbatchlist.sh_fanart = True Then

                            Dim seasonpath As String = basictvlist(f).fullpath.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "fanart.jpg")
                            If Not IO.File.Exists(seasonpath) Then
                                Try
                                    Dim buffer(4000000) As Byte
                                    Dim size As Integer = 0
                                    Dim bytesRead As Integer = 0

                                    Dim thumburl As String = fanartposter
                                    Dim req As HttpWebRequest = req.Create(thumburl)
                                    Dim res As HttpWebResponse = req.GetResponse()
                                    Dim contents As Stream = res.GetResponseStream()
                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                    Dim bmp As New Bitmap(contents)



                                    While bytesToRead > 0
                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                        If size = 0 Then Exit While
                                        bytesToRead -= size
                                        bytesRead += size
                                    End While


                                    Try
                                        If Form1.userprefs.resizefanart = 1 Then
                                            bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                        ElseIf Form1.userprefs.resizefanart = 2 Then
                                            If bmp.Width > 1280 Or bmp.Height > 720 Then
                                                Dim bm_source As New Bitmap(bmp)
                                                Dim bm_dest As New Bitmap(1280, 720)
                                                Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                gr.DrawImage(bm_source, 0, 0, 1280 - 1, 720 - 1)
                                                bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                            Else
                                                bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                            End If
                                        ElseIf Form1.userprefs.resizefanart = 3 Then
                                            If bmp.Width > 960 Or bmp.Height > 540 Then
                                                Dim bm_source As New Bitmap(bmp)
                                                Dim bm_dest As New Bitmap(960, 540)
                                                Dim gr As Graphics = Graphics.FromImage(bm_dest)
                                                gr.InterpolationMode = Drawing2D.InterpolationMode.HighQualityBilinear
                                                gr.DrawImage(bm_source, 0, 0, 960 - 1, 540 - 1)
                                                bm_dest.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                            Else
                                                bmp.Save(seasonpath, Imaging.ImageFormat.Jpeg)
                                            End If

                                        End If
                                    Catch
                                    End Try
                                Catch ex As WebException
                                    'MsgBox("Error Downloading season poster from TVDB")
                                End Try
                            End If
                        End If


                        If userprefs.seasonall <> "none" Then
                            Dim seasonallpath As String = ""
                            Dim posterurlpath As String = ""
                            If userprefs.seasonall = "poster" Then 'poster
                                For Each Image In artlist
                                    If Image.language = "en" And Image.bannertype = "poster" Then
                                        posterurlpath = Image.url
                                        Exit For
                                    End If
                                Next
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.bannertype = "poster" Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                seasonallpath = posterurlpath
                            ElseIf userprefs.seasonall = "banner" Then 'banner
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.language = "en" And Image.bannertype = "series" And Image.season = Nothing Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If posterurlpath = "" Then
                                    For Each Image In artlist
                                        If Image.bannertype = "series" And Image.season = Nothing Then
                                            posterurlpath = Image.url
                                            Exit For
                                        End If
                                    Next
                                End If
                                If posterurlpath <> "" And RadioButton16.Checked = True Then
                                    seasonallpath = posterurlpath
                                End If
                            End If
                            Dim seasonpath As String = basictvlist(f).fullpath.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "season-all.tbn")
                            If Not IO.File.Exists(seasonpath) And tvbatchlist.sh_posters = True Then
                                Try
                                    Dim buffer(4000000) As Byte
                                    Dim size As Integer = 0
                                    Dim bytesRead As Integer = 0
                                    Dim thumburl As String = posterurlpath
                                    Dim req As HttpWebRequest = req.Create(thumburl)
                                    Dim res As HttpWebResponse = req.GetResponse()
                                    Dim contents As Stream = res.GetResponseStream()
                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                    While bytesToRead > 0
                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                        If size = 0 Then Exit While
                                        bytesToRead -= size
                                        bytesRead += size
                                    End While
                                    Dim fstrm As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                    fstrm.Write(buffer, 0, bytesRead)
                                    'contents.Close()
                                    fstrm.Close()
                                    seasonpath = basictvlist(f).fullpath.Replace(IO.Path.GetFileName(basictvlist(f).fullpath), "folder.jpg")
                                    Dim fstrm2 As New FileStream(seasonpath, FileMode.OpenOrCreate, FileAccess.Write)
                                    fstrm2.Write(buffer, 0, bytesRead)
                                    contents.Close()
                                    fstrm2.Close()
                                Catch ex As WebException
                                    'MsgBox("Error Downloading main poster from TVDB")
                                End Try
                            End If
                        End If
                    End If
                End If
                If tvbatchlist.doepisodes = True Then

                    'progresstext = "Working on Episodes: " & basictvlist(f).title
                    'tvbckrescrapewizard.ReportProgress(999999, progresstext)
                    For g = basictvlist(f).allepisodes.Count - 1 To 0 Step -1
                        progresstext = "Working on Show: " & showcounter.ToString & " of " & progcount & ", Episode: " & basictvlist(f).allepisodes(g).seasonno & "x" & basictvlist(f).allepisodes(g).episodeno
                        'progresstext = "Working on " & basictvlist(f).title & ", Episode: " & basictvlist(f).allepisodes(g).seasonno & "x" & basictvlist(f).allepisodes(g).episodeno
                        If done > 0 Then
                            progress = (100 / showprocesscount) * done
                        Else
                            progress = 0
                        End If
                        tvbckrescrapewizard.ReportProgress(progress, progresstext)
                        If tvbatchlist.doepisodebody = True Or (tvbatchlist.doepisodeactors = True And basictvlist(f).episodeactorsource <> "") Or (tvbatchlist.doepisodeart = True) Then
                            Dim listofnewepisodes As New List(Of episodeinfo)
                            listofnewepisodes.Clear()
                            listofnewepisodes = nfofunction.loadfullepisodenfogeneric(basictvlist(f).allepisodes(g).episodepath)
                            For h = listofnewepisodes.Count - 1 To 0 Step -1
                                If listofnewepisodes(h).seasonno = basictvlist(f).allepisodes(g).seasonno And listofnewepisodes(h).episodeno = basictvlist(f).allepisodes(g).episodeno Then
                                    Dim newactors As New List(Of movieactors)
                                    newactors.Clear()
                                    Dim sortorder As String = basictvlist(f).sortorder
                                    Dim language As String = basictvlist(f).language
                                    Dim actorsource As String = basictvlist(f).episodeactorsource
                                    Dim tvdbid As String = basictvlist(f).tvdbid
                                    Dim imdbid As String = basictvlist(f).imdbid
                                    Dim seasonno As String = basictvlist(f).allepisodes(g).seasonno
                                    Dim episodeno As String = basictvlist(f).allepisodes(g).episodeno
                                    'its an episode
                                    Dim episodescreenurl As String = ""
                                    'Dim episodescraper As New TVDB.tvdbscraper 'commented because of removed TVDB.dll
                                    Dim episodescraper As New TVDBScraper
                                    If sortorder = "" Then sortorder = "default"
                                    If language = "" Then language = "en"
                                    If actorsource = "" Then actorsource = "tvdb"
                                    Dim tempepisode As String = episodescraper.getepisode(tvdbid, sortorder, seasonno, episodeno, language)
                                    Dim scrapedepisode As New XmlDocument
                                    Try
                                        scrapedepisode.LoadXml(tempepisode)
                                        Dim thisresult As XmlNode = Nothing
                                        For Each thisresult In scrapedepisode("episodedetails")
                                            Select Case thisresult.Name
                                                Case "title"
                                                    'listofnewepisodes(h).title = thisresult.InnerText
                                                Case "premiered"
                                                    If tvbatchlist.ep_aired = True Then
                                                        listofnewepisodes(h).aired = thisresult.InnerText
                                                    End If
                                                Case "plot"
                                                    If tvbatchlist.ep_plot = True Then
                                                        listofnewepisodes(h).plot = thisresult.InnerText
                                                    End If
                                                Case "director"
                                                    If tvbatchlist.ep_director = True Then
                                                        Dim tempstring As String = ""
                                                        tempstring = thisresult.InnerText
                                                        tempstring = tempstring.TrimStart("|")
                                                        tempstring = tempstring.TrimEnd("|")
                                                        tempstring = tempstring.Replace("|", " / ")
                                                        listofnewepisodes(h).director = tempstring
                                                    End If
                                                Case "credits"
                                                    Dim tempstring As String = ""
                                                    If tvbatchlist.ep_credits = True Then
                                                        tempstring = thisresult.InnerText
                                                        tempstring = tempstring.TrimStart("|")
                                                        tempstring = tempstring.TrimEnd("|")
                                                        tempstring = tempstring.Replace("|", " / ")
                                                        listofnewepisodes(h).credits = tempstring
                                                    End If
                                                Case "rating"
                                                    If tvbatchlist.ep_rating = True Then
                                                        listofnewepisodes(h).rating = thisresult.InnerText
                                                    End If
                                                    basictvlist(f).allepisodes(g).rating = thisresult.InnerText
                                                Case "thumb"
                                                    episodescreenurl = thisresult.InnerText
                                                    Dim downloadok As Boolean = True
                                                    If tvbatchlist.doepisodeart = True And tvbatchlist.ep_screenshot = True Then
                                                        If episodescreenurl <> "" And episodescreenurl.ToLower <> "http://www.thetvdb.com/banners/" Then
                                                            Try
                                                                Dim screenshotpath As String = listofnewepisodes(h).episodepath.Replace(IO.Path.GetExtension(listofnewepisodes(h).episodepath), ".tbn")
                                                                If Not IO.File.Exists(screenshotpath) Then
                                                                    Dim buffer(4000000) As Byte
                                                                    Dim size As Integer = 0
                                                                    Dim bytesRead As Integer = 0
                                                                    Dim fanartthumburl As String = episodescreenurl
                                                                    Dim req As HttpWebRequest = req.Create(fanartthumburl)
                                                                    Dim res As HttpWebResponse = req.GetResponse()
                                                                    Dim contents As Stream = res.GetResponseStream()
                                                                    Dim bmp As New Bitmap(contents)
                                                                    Dim bytesToRead As Integer = CInt(buffer.Length)
                                                                    While bytesToRead > 0
                                                                        size = contents.Read(buffer, bytesRead, bytesToRead)
                                                                        If size = 0 Then Exit While
                                                                        bytesToRead -= size
                                                                        bytesRead += size
                                                                    End While
                                                                    Try
                                                                        bmp.Save(screenshotpath, Imaging.ImageFormat.Jpeg)
                                                                    Catch ex As Exception
                                                                        downloadok = False
                                                                    End Try
                                                                End If
                                                            Catch
                                                            End Try
                                                        Else
                                                            Dim thumbpathandfilename As String = listofnewepisodes(h).episodepath.Replace(IO.Path.GetExtension(listofnewepisodes(h).episodepath), ".tbn")
                                                            Dim pathandfilename As String = listofnewepisodes(h).episodepath.Replace(IO.Path.GetExtension(listofnewepisodes(h).episodepath), "")
                                                            If Not IO.File.Exists(thumbpathandfilename) And tvbatchlist.ep_createscreenshot = True Then
                                                                progresstext = listofnewepisodes(h).episodepath
                                                                tvbckrescrapewizard.ReportProgress(888888, progresstext)
                                                            End If
                                                        End If
                                                        If downloadok = False Then
                                                            Dim thumbpathandfilename As String = listofnewepisodes(h).episodepath.Replace(IO.Path.GetExtension(listofnewepisodes(h).episodepath), ".tbn")
                                                            Dim pathandfilename As String = listofnewepisodes(h).episodepath.Replace(IO.Path.GetExtension(listofnewepisodes(h).episodepath), "")
                                                            If Not IO.File.Exists(thumbpathandfilename) And tvbatchlist.ep_createscreenshot = True Then
                                                                progresstext = listofnewepisodes(h).episodepath
                                                                tvbckrescrapewizard.ReportProgress(888888, progresstext)
                                                            End If
                                                        End If
                                                    End If
                                                Case "actor"
                                                    If tvbatchlist.ep_actor = True And userprefs.episodeacrorsource = "tvdb" Then
                                                        Dim actors As XmlNode = Nothing
                                                        For Each actorl In thisresult.ChildNodes
                                                            Select Case actorl.name
                                                                Case "name"
                                                                    Dim newactor As New movieactors
                                                                    newactor.actorname = actorl.innertext
                                                                    newactors.Add(newactor)
                                                            End Select
                                                        Next
                                                    End If
                                            End Select
                                        Next
                                        'newepisode.playcount = "0"
                                        If userprefs.episodeacrorsource = "tvdb" And tvbatchlist.ep_actor = True And newactors.Count > 0 Then
                                            listofnewepisodes(h).listactors.Clear()
                                            For Each act In newactors
                                                listofnewepisodes(h).listactors.Add(act)
                                            Next
                                        End If
                                        If basictvlist(f).episodeactorsource = "imdb" And tvbatchlist.ep_actor = True Then
                                            Dim ac As New actors
                                            Dim actorlist As New List(Of movieactors)
                                            actorlist = ac.episodegetimdbactors(basictvlist(f).imdbid, listofnewepisodes(h).seasonno, listofnewepisodes(h).episodeno)
                                            If userprefs.actorseasy = True Then
                                                ac.savelocalactors(listofnewepisodes(h).episodepath, actorlist, basictvlist(f).fullpath, True)
                                            End If
                                        End If
                                    Catch ex As Exception
                                        'MsgBox("hekp")
                                    End Try
                                    Call nfofunction.saveepisodenfo(listofnewepisodes, listofnewepisodes(0).episodepath, listofnewepisodes(h).seasonno, listofnewepisodes(h).episodeno, True)
                                    Exit For
                                End If




                            Next

                           
                        End If


                        If tvbatchlist.doepisodemediatags = True Then
                            Dim listofnewepisodes As New List(Of episodeinfo)
                            listofnewepisodes.Clear()
                            listofnewepisodes = nfofunction.loadfullepisodenfogeneric(basictvlist(f).allepisodes(g).episodepath)
                            For h = listofnewepisodes.Count - 1 To 0 Step -1
                                listofnewepisodes(h).filedetails = filefunction.get_hdtags(filefunction.getfilename(listofnewepisodes(h).episodepath))
                                If listofnewepisodes(h).filedetails.filedetails_video.duration <> Nothing Then
                                    Try
                                        '1h 24mn 48s 546ms
                                        Dim tempint As Integer
                                        Dim hours As Integer
                                        Dim minutes As Integer
                                        Dim tempstring As String
                                        tempstring = listofnewepisodes(h).filedetails.filedetails_video.duration
                                        tempint = tempstring.IndexOf("h")
                                        If tempint <> -1 Then
                                            hours = Convert.ToInt32(tempstring.Substring(0, tempint))
                                            tempstring = tempstring.Substring(tempint + 1, tempstring.Length - (tempint + 1))
                                            tempstring = Trim(tempstring)
                                        End If
                                        tempint = tempstring.IndexOf("mn")
                                        If tempint <> -1 Then
                                            minutes = Convert.ToInt32(tempstring.Substring(0, tempint))
                                        End If
                                        If hours <> 0 Then
                                            hours = hours * 60
                                        End If
                                        minutes = minutes + hours
                                        listofnewepisodes(h).runtime = minutes.ToString & " min"
                                    Catch
                                    End Try
                                    Call nfofunction.saveepisodenfo(listofnewepisodes, listofnewepisodes(0).episodepath, listofnewepisodes(h).seasonno, listofnewepisodes(h).episodeno, True)
                                End If
                            Next
                        End If
                        done += 1
                    Next
                End If
                done += 1
            End If
        Next
    End Sub

    Private Sub tvbckrescrapewizard_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles tvbckrescrapewizard.ProgressChanged
        If e.ProgressPercentage = 999999 Then
            ToolStripStatusLabel8.Text = e.UserState
        ElseIf e.ProgressPercentage = 888888 Then
            Dim getthumb As New createscreenshot
            Dim result As String = getthumb.screenshot(e.UserState)
        Else
            ToolStripStatusLabel8.Text = e.UserState
            ToolStripProgressBar7.Value = e.ProgressPercentage
            ToolStripProgressBar7.ProgressBar.Refresh()
            ToolStripProgressBar7.ProgressBar.PerformStep()
        End If
    End Sub

    Private Sub tvbckrescrapewizard_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles tvbckrescrapewizard.RunWorkerCompleted
        ToolStripStatusLabel8.Visible = False
        ToolStripProgressBar7.Visible = False
    End Sub

    Private Sub CheckBox40_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox40.CheckedChanged
        If CheckBox40.CheckState = CheckState.Checked Then
            userprefs.eprenamelowercase = True
        Else
            userprefs.eprenamelowercase = False
        End If
        If prefsload = False Then generalprefschanged = True
    End Sub

    Private Function GetFileSize(ByVal MyFilePath As String) As Long
        Dim MyFile As New FileInfo(MyFilePath)
        Dim FileSize As Long = MyFile.Length
        Return FileSize
    End Function
    Private Declare Function GetDiskFreeSpaceEx _
   Lib "kernel32" _
   Alias "GetDiskFreeSpaceExA" _
   (ByVal lpDirectoryName As String, _
   ByRef lpFreeBytesAvailableToCaller As Long, _
   ByRef lpTotalNumberOfBytes As Long, _
   ByRef lpTotalNumberOfFreeBytes As Long) As Long

    Public Function GetFreeSpace(ByVal Drive As String) As Long
        'returns free space in MB, formatted to two decimal places
        'e.g., msgbox("Free Space on C: "& GetFreeSpace("C:\") & "MB")

        Dim lBytesTotal, lFreeBytes, lFreeBytesAvailable As Long

        Dim iAns As Long

        iAns = GetDiskFreeSpaceEx(Drive, lFreeBytesAvailable, _
             lBytesTotal, lFreeBytes)
        If iAns > 0 Then

            Return lFreeBytes
        Else
            Throw New Exception("Invalid or unreadable drive")
        End If


    End Function

    Public totalfilesize As Long = 0
    Public listoffilestomove As New List(Of String)
    Private Sub ExportmoviesMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ExportmoviesMenuItem.Click
        Dim selecteddestination As String


        listoffilestomove.Clear()

        If ComboBox1.SelectedItems.Count > 0 Then

            For Each movie In ComboBox1.SelectedItems
                Dim tempstring As String
                tempstring = CType(ComboBox1.SelectedItem, ValueDescriptionPair).Value
                Dim playlist As New List(Of String)
                tempstring = filefunction.getfilename(tempstring)
                playlist = filefunction.getmedialist(tempstring)
                If playlist.Count > 0 Then
                    For Each File In playlist
                        If Not listoffilestomove.Contains(File) Then
                            listoffilestomove.Add(File)
                        End If
                    Next
                    listoffilestomove.Add(movie.value)
                    If IO.File.Exists(filefunction.getfanartpath(movie.value)) Then
                        listoffilestomove.Add(filefunction.getfanartpath(movie.value))
                    End If
                    If IO.File.Exists(filefunction.getposterpath(movie.value)) Then
                        listoffilestomove.Add(filefunction.getposterpath(movie.value))
                    End If
                    Dim di As DirectoryInfo = New DirectoryInfo(movie.value.Replace(IO.Path.GetFileName(movie.value), ""))
                    Dim filenama As String = IO.Path.GetFileNameWithoutExtension(movie.value)
                    Dim fils As FileInfo() = di.GetFiles(filenama & ".*")
                    For Each fiNext In fils
                        If Not listoffilestomove.Contains(fiNext.FullName) Then
                            listoffilestomove.Add(fiNext.FullName)
                        End If
                    Next
                    Dim trailerpath As String = movie.value.Replace(IO.Path.GetExtension(movie.value), "-trailer.flv")
                    Dim filenama2 As String = IO.Path.GetFileNameWithoutExtension(trailerpath)
                    Dim fils2 As FileInfo() = di.GetFiles(filenama2 & ".*")
                    For Each fiNext In fils2
                        If Not listoffilestomove.Contains(fiNext.FullName) Then
                            listoffilestomove.Add(fiNext.FullName)
                        End If
                    Next
                End If
            Next

            totalfilesize = 0
            For Each item In listoffilestomove
                totalfilesize = totalfilesize + GetFileSize(item)
            Next


            With FolderBrowserDialog1
                .ShowNewFolderButton = True
                .Description = "Select destination for file copy"
            End With
            Dim drive As String = ""
            Dim savepath As String = ""
            'If FolderBrowserDialog1.ShowDialog = Windows.Forms.DialogResult.OK Then
            '    savepath = FolderBrowserDialog1.SelectedPath
            '    drive = IO.Path.GetPathRoot(savepath)
            '    Me.Visible = True
            '    Me.Show()
            '    Me.Refresh()

            '    Dim listoffilestomove2 As New List(Of String)
            '    listoffilestomove2.Clear()
            '    For Each fil In listoffilestomove
            '        listoffilestomove2.Add(fil)
            '    Next

            '    Dim drivespace As Long
            '    drivespace = GetFreeSpace(drive)
            '    Application.DoEvents()
            '    Me.Refresh()
            '    Dim percentages As New List(Of Integer)

            '    If drivespace > totalfilesize Then
            '        'My.Computer.FileSystem.CopyFile("C:\UserFiles\TestFiles\testFile.txt", "C:\UserFiles\TestFiles2\NewFile.txt", FileIO.UIOption.AllDialogs, FileIO.UICancelOption.DoNothing)

            frmCopyProgress.ShowDialog()
            '    End If
            'End If
        End If
    End Sub

    Private Sub setupexporttab()
        If TextBox45.Text = "" Then

            Dim tempstring2 As String = workingprofile.config.Replace(IO.Path.GetFileName(workingprofile.config), "pathsubstitution.xml")
            If IO.File.Exists(tempstring2) Then
                relativefolderlist.Clear()
                Dim prefs As New XmlDocument
                Try
                    prefs.Load(tempstring2)
                Catch ex As Exception
                End Try
                Dim thisresult As XmlNode = Nothing


                For Each thisresult In prefs("relativepaths")

                    Select Case thisresult.Name
                        Case "folder"
                            Dim mc As New relativefilelist
                            Dim it2 As XmlNode
                            For Each it2 In thisresult.ChildNodes
                                Select Case it2.Name
                                    Case "mc"
                                        mc.mc = it2.InnerText
                                    Case "xbmc"
                                        mc.xbmc = it2.InnerText
                                        relativefolderlist.Add(mc)
                                End Select
                            Next

                    End Select
                Next
                For Each item In relativefolderlist
                    TextBox45.Text += "<folder>" & vbCrLf
                    TextBox45.Text += "    <mc>" & item.mc & "</mc>" & vbCrLf
                    TextBox45.Text += "    <xbmc>" & item.xbmc & "</xbmc>" & vbCrLf
                    TextBox45.Text += "</folder>" & vbCrLf & vbCrLf
                Next
            End If
            If TextBox45.Text = "" Then
                For Each pat In moviefolders
                    TextBox45.Text += "<folder>" & vbCrLf
                    TextBox45.Text += "    <mc>" & pat & "</mc>" & vbCrLf
                    TextBox45.Text += "    <xbmc>" & pat & "</xbmc>" & vbCrLf
                    TextBox45.Text += "</folder>" & vbCrLf & vbCrLf
                Next
                For Each pat In userprefs.offlinefolders
                    TextBox45.Text += "<folder>" & vbCrLf
                    TextBox45.Text += "    <mc>" & pat & "</mc>" & vbCrLf
                    TextBox45.Text += "    <xbmc>" & pat & "</xbmc>" & vbCrLf
                    TextBox45.Text += "</folder>" & vbCrLf & vbCrLf
                Next
                For Each pat In tvrootfolders
                    TextBox45.Text += "<folder>" & vbCrLf
                    TextBox45.Text += "    <mc>" & pat & "</mc>" & vbCrLf
                    TextBox45.Text += "    <xbmc>" & pat & "</xbmc>" & vbCrLf
                    TextBox45.Text += "</folder>" & vbCrLf & vbCrLf
                Next
            End If
        End If
    End Sub

    Dim relativefolderlist As New List(Of relativefilelist)
    Private Structure relativefilelist
        Dim mc As String
        Dim xbmc As String
    End Structure
    Private Sub Button109_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button109.Click

        relativefolderlist.Clear()
        Dim tempstring2 As String = workingprofile.config.Replace(IO.Path.GetFileName(workingprofile.config), "pathsubstitution.xml")



        Dim temptext As String = ""
        temptext = "<relativepaths>" & TextBox45.Text & "</relativepaths>"
        Dim doc As New XmlDocument
        doc.LoadXml(temptext)
        Dim thisresult As XmlElement
        For Each thisresult In doc("relativepaths")
            Dim newfo As New relativefilelist
            For Each innerresult In thisresult
                Select Case innerresult.Name
                    Case "mc"
                        newfo.mc = innerresult.InnerText
                    Case "xbmc"
                        newfo.xbmc = innerresult.InnerText
                End Select
            Next
            If newfo.mc <> Nothing Then
                If newfo.mc <> "" Then
                    If newfo.xbmc <> Nothing Then
                        If newfo.xbmc <> "" Then
                            relativefolderlist.Add(newfo)
                        End If
                    End If
                End If
            End If
        Next

        If relativefolderlist.Count > 0 Then
            Dim docs As New XmlDocument

            Dim thispref As XmlNode = Nothing
            Dim xmlproc As XmlDeclaration

            xmlproc = docs.CreateXmlDeclaration("1.0", "UTF-8", "yes")
            docs.AppendChild(xmlproc)
            Dim root As XmlElement
            Dim child As XmlElement
            Dim childchild As XmlElement
            root = doc.CreateElement("relativepaths")


            For Each item In relativefolderlist
                child = doc.CreateElement("folder")
                childchild = doc.CreateElement("mc")
                childchild.InnerText = item.mc
                child.AppendChild(childchild)
                childchild = doc.CreateElement("xbmc")
                childchild.InnerText = item.xbmc
                child.AppendChild(childchild)
                root.AppendChild(child)
            Next


            Dim output As New XmlTextWriter(tempstring2, System.Text.Encoding.UTF8)
            output.Formatting = Formatting.Indented
            doc.WriteTo(output)
            output.Close()
        End If



    End Sub

    Private Sub CheckBox41_CheckedChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox41.CheckedChanged
        If CheckBox41.CheckState = CheckState.Checked Then
            userprefs.ignorearticle = True
        Else
            userprefs.ignorearticle = False
        End If
        generalprefschanged = True
    End Sub

    Private Sub RadioButton45_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton45.CheckedChanged
        If RadioButton45.Checked = True Then
            '            TextBox_GenreFilter.Enabled = True
            '            TextBox_GenreFilter.Text = "Genre Filter (AND)"
            '            ComboBox11.Enabled = True
            '            ComboBox11.SelectedIndex = 0
            '            Call CheckSpecials("all")
            applyfilters("all")
        End If
        '        applyfilters()
    End Sub

    Private Sub RadioButton46_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton46.CheckedChanged
        If RadioButton46.Checked = True Then
            '            CheckedListBox1.ClearSelected()
            '            TextBox_GenreFilter.Enabled = False
            '            ComboBox11.SelectedIndex = 0
            '            ComboBox11.Enabled = False
            '            Call CheckSpecials("watched")
            '            TextBox_GenreFilter.Text = "Genre Filter (AND)"
            applyfilters("watched")
        End If
    End Sub

    Private Sub RadioButton47_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton47.CheckedChanged
        If RadioButton47.Checked = True Then
            '            CheckedListBox1.ClearSelected()
            '            TextBox_GenreFilter.Enabled = False
            '            ComboBox11.SelectedIndex = 0
            '            ComboBox11.Enabled = False
            '            Call CheckSpecials("unwatched")
            '            TextBox_GenreFilter.Text = "Genre Filter (AND)"
            applyfilters("unwatched")
        End If
    End Sub

    Private Sub RadioButton48_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton48.CheckedChanged
        If RadioButton48.Checked = True Then
            '            CheckedListBox1.ClearSelected()
            '            TextBox_GenreFilter.Enabled = False
            '            ComboBox11.SelectedIndex = 0
            '            ComboBox11.Enabled = False
            '            Call CheckSpecials("duplicates")
            '            TextBox_GenreFilter.Text = "Genre Filter (AND)"
            applyfilters("duplicates")
        End If
    End Sub

    Private Sub RadioButton49_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton49.CheckedChanged
        If RadioButton49.Checked = True Then
            '            CheckedListBox1.ClearSelected()
            '            TextBox_GenreFilter.Enabled = False
            '            ComboBox11.SelectedIndex = 0
            '            ComboBox11.Enabled = False
            '            Call CheckSpecials("missing posters")
            '            TextBox_GenreFilter.Text = "Genre Filter (AND)"
            applyfilters("missing posters")
        End If
    End Sub

    Private Sub RadioButton50_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton50.CheckedChanged
        If RadioButton50.Checked = True Then
            '            CheckedListBox1.ClearSelected()
            '            TextBox_GenreFilter.Enabled = False
            '            ComboBox11.SelectedIndex = 0
            '            ComboBox11.Enabled = False
            '            Call CheckSpecials("missing fanart")
            '            TextBox_GenreFilter.Text = "Genre Filter (AND)"
            applyfilters("missing fanart")
        End If
    End Sub

    Private Sub CheckBox_Use_XBMC_TVDB_Scraper_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox_Use_XBMC_TVDB_Scraper.CheckedChanged
        If CheckBox_Use_XBMC_TVDB_Scraper.CheckState = CheckState.Checked Then
            userprefs.tvshow_useXBMC_Scraper = True
            GroupBox2.Enabled = False
            GroupBox3.Enabled = False
            GroupBox5.Enabled = False
        Else
            userprefs.tvshow_useXBMC_Scraper = False
            GroupBox2.Enabled = True
            GroupBox3.Enabled = True
            GroupBox5.Enabled = True
        End If
    End Sub

    Private Sub CheckBox3_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox3.CheckedChanged
        If CheckBox3.Checked = True Then
            userprefs.downloadtvseasonthumbs = True
        Else
            userprefs.downloadtvseasonthumbs = False
        End If
    End Sub

    Private Sub CheckBox4_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox4.CheckedChanged
        If CheckBox4.Checked = True Then
            userprefs.tvfanart = True
        Else
            userprefs.tvfanart = False
        End If
    End Sub

    Private Sub CheckBox5_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CheckBox5.CheckedChanged
        If CheckBox5.Checked = True Then
            userprefs.tvposter = True
        Else
            userprefs.tvposter = False
        End If
    End Sub

    Private Sub RadioButton8_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton8.CheckedChanged
        If RadioButton8.Checked = True Then
            userprefs.postertype = "banner"
        Else
            userprefs.postertype = "poster"
        End If
    End Sub

    Private Sub RadioButton9_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton9.CheckedChanged
        If RadioButton9.Checked = True Then
            userprefs.postertype = "poster"
        Else
            userprefs.postertype = "banner"
        End If
    End Sub

    Private Sub RadioButton16_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton16.CheckedChanged
        If RadioButton16.Checked = True Then
            userprefs.seasonall = "wide"
        End If
    End Sub
    Private Sub RadioButton17_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton17.CheckedChanged
        If RadioButton17.Checked = True Then
            userprefs.seasonall = "poster"
        End If
    End Sub
    Private Sub RadioButton18_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles RadioButton18.CheckedChanged
        If RadioButton18.Checked = True Then
            userprefs.seasonall = "none"
        End If
    End Sub

End Class


Public Class ValueDescriptionPair

    Public Value As Object
    Public Description As String

    Public Sub New(ByVal NewValue As Object, ByVal NewDescription As String)
        Value = NewValue
        Description = NewDescription
    End Sub

    Public Overrides Function ToString() As String
        Return Description
    End Function


End Class




